Starting parse
Entering state 0
Reading a token: Next token is token INT (2.1-3: )
Shifting token INT (2.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (2.1-3: )
-> $$ = nterm type_specifier (2.1-3: )
Stack now 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (2.5-8: main)
Shifting token IDENTIFIER (2.5-8: main)
Entering state 13
Reading a token: Next token is token '(' (2.9: )
Shifting token '(' (2.9: )
Entering state 16
Reading a token: Next token is token ')' (2.10: )
Shifting token ')' (2.10: )
Entering state 20
Reducing stack by rule 14 (line 244):
   $1 = token IDENTIFIER (2.5-8: main)
   $2 = token '(' (2.9: )
   $3 = token ')' (2.10: )
-> $$ = nterm fun_declarator (2.5-10: )
Stack now 8 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (2.11: )
Stack now 14 8 0
Entering state 17
Reading a token: Next token is token '{' (2.11: )
Shifting token '{' (2.11: )
Entering state 24
Reading a token: Next token is token FLOAT (3.2-6: )
Shifting token FLOAT (3.2-6: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (3.2-6: )
-> $$ = nterm type_specifier (3.2-6: )
Stack now 24 17 14 8 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (3.8: a)
Shifting token IDENTIFIER (3.8: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.8: a)
-> $$ = nterm declarator_arr (3.8: )
Stack now 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ',' (3.9: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.8: )
-> $$ = nterm declarator (3.8: )
Stack now 26 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (3.8: )
-> $$ = nterm declarator_list (3.8: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ',' (3.9: )
Shifting token ',' (3.9: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (3.10: b)
Shifting token IDENTIFIER (3.10: b)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.10: b)
-> $$ = nterm declarator_arr (3.10: )
Stack now 96 65 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ',' (3.11: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.10: )
-> $$ = nterm declarator (3.10: )
Stack now 96 65 26 24 17 14 8 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (3.8: )
   $2 = token ',' (3.9: )
   $3 = nterm declarator (3.10: )
-> $$ = nterm declarator_list (3.8-10: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ',' (3.11: )
Shifting token ',' (3.11: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (3.12: f)
Shifting token IDENTIFIER (3.12: f)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.12: f)
-> $$ = nterm declarator_arr (3.12: )
Stack now 96 65 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ',' (3.13: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.12: )
-> $$ = nterm declarator (3.12: )
Stack now 96 65 26 24 17 14 8 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (3.8-10: )
   $2 = token ',' (3.11: )
   $3 = nterm declarator (3.12: )
-> $$ = nterm declarator_list (3.8-12: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ',' (3.13: )
Shifting token ',' (3.13: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (3.14: g)
Shifting token IDENTIFIER (3.14: g)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.14: g)
-> $$ = nterm declarator_arr (3.14: )
Stack now 96 65 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ',' (3.15: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.14: )
-> $$ = nterm declarator (3.14: )
Stack now 96 65 26 24 17 14 8 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (3.8-12: )
   $2 = token ',' (3.13: )
   $3 = nterm declarator (3.14: )
-> $$ = nterm declarator_list (3.8-14: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ',' (3.15: )
Shifting token ',' (3.15: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (3.16: h)
Shifting token IDENTIFIER (3.16: h)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.16: h)
-> $$ = nterm declarator_arr (3.16: )
Stack now 96 65 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ',' (3.17: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.16: )
-> $$ = nterm declarator (3.16: )
Stack now 96 65 26 24 17 14 8 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (3.8-14: )
   $2 = token ',' (3.15: )
   $3 = nterm declarator (3.16: )
-> $$ = nterm declarator_list (3.8-16: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ',' (3.17: )
Shifting token ',' (3.17: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (3.18: i)
Shifting token IDENTIFIER (3.18: i)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.18: i)
-> $$ = nterm declarator_arr (3.18: )
Stack now 96 65 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ',' (3.19: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.18: )
-> $$ = nterm declarator (3.18: )
Stack now 96 65 26 24 17 14 8 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (3.8-16: )
   $2 = token ',' (3.17: )
   $3 = nterm declarator (3.18: )
-> $$ = nterm declarator_list (3.8-18: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ',' (3.19: )
Shifting token ',' (3.19: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (3.20: j)
Shifting token IDENTIFIER (3.20: j)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.20: j)
-> $$ = nterm declarator_arr (3.20: )
Stack now 96 65 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ',' (3.21: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.20: )
-> $$ = nterm declarator (3.20: )
Stack now 96 65 26 24 17 14 8 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (3.8-18: )
   $2 = token ',' (3.19: )
   $3 = nterm declarator (3.20: )
-> $$ = nterm declarator_list (3.8-20: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ',' (3.21: )
Shifting token ',' (3.21: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (3.22: k)
Shifting token IDENTIFIER (3.22: k)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.22: k)
-> $$ = nterm declarator_arr (3.22: )
Stack now 96 65 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token '[' (3.23: )
Shifting token '[' (3.23: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (3.24-25: 10)
Shifting token INT_CONSTANT (3.24-25: 10)
Entering state 99
Reading a token: Next token is token ']' (3.26: )
Shifting token ']' (3.26: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (3.22: )
   $2 = token '[' (3.23: )
   $3 = token INT_CONSTANT (3.24-25: 10)
   $4 = token ']' (3.26: )
-> $$ = nterm declarator_arr (3.22-26: )
Stack now 96 65 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (3.27: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.22-26: )
-> $$ = nterm declarator (3.22-26: )
Stack now 96 65 26 24 17 14 8 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (3.8-20: )
   $2 = token ',' (3.21: )
   $3 = nterm declarator (3.22-26: )
-> $$ = nterm declarator_list (3.8-26: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ';' (3.27: )
Shifting token ';' (3.27: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (3.2-6: )
   $2 = nterm declarator_list (3.8-26: )
   $3 = token ';' (3.27: )
-> $$ = nterm declaration (3.2-27: )
Stack now 24 17 14 8 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (3.2-27: )
-> $$ = nterm declaration_list (3.2-27: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token FLOAT (4.2-6: )
Shifting token FLOAT (4.2-6: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (4.2-6: )
-> $$ = nterm type_specifier (4.2-6: )
Stack now 52 24 17 14 8 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (4.8: c)
Shifting token IDENTIFIER (4.8: c)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (4.8: c)
-> $$ = nterm declarator_arr (4.8: )
Stack now 26 52 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (4.9: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (4.8: )
-> $$ = nterm declarator (4.8: )
Stack now 26 52 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (4.8: )
-> $$ = nterm declarator_list (4.8: )
Stack now 26 52 24 17 14 8 0
Entering state 65
Next token is token ';' (4.9: )
Shifting token ';' (4.9: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (4.2-6: )
   $2 = nterm declarator_list (4.8: )
   $3 = token ';' (4.9: )
-> $$ = nterm declaration (4.2-9: )
Stack now 52 24 17 14 8 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (3.2-27: )
   $2 = nterm declaration (4.2-9: )
-> $$ = nterm declaration_list (3.2-4.9: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token INT (5.2-4: )
Shifting token INT (5.2-4: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (5.2-4: )
-> $$ = nterm type_specifier (5.2-4: )
Stack now 52 24 17 14 8 0
Entering state 26
Reading a token: Next token is token '*' (5.5: )
Shifting token '*' (5.5: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (5.7: d)
Shifting token IDENTIFIER (5.7: d)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (5.7: d)
-> $$ = nterm declarator_arr (5.7: )
Stack now 31 26 52 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (5.8: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (5.7: )
-> $$ = nterm declarator (5.7: )
Stack now 31 26 52 24 17 14 8 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (5.5: )
   $2 = nterm declarator (5.7: )
-> $$ = nterm declarator (5.5-7: )
Stack now 26 52 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (5.5-7: )
-> $$ = nterm declarator_list (5.5-7: )
Stack now 26 52 24 17 14 8 0
Entering state 65
Next token is token ';' (5.8: )
Shifting token ';' (5.8: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (5.2-4: )
   $2 = nterm declarator_list (5.5-7: )
   $3 = token ';' (5.8: )
-> $$ = nterm declaration (5.2-8: )
Stack now 52 24 17 14 8 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (3.2-4.9: )
   $2 = nterm declaration (5.2-8: )
-> $$ = nterm declaration_list (3.2-5.8: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token FLOAT (6.2-6: )
Shifting token FLOAT (6.2-6: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (6.2-6: )
-> $$ = nterm type_specifier (6.2-6: )
Stack now 52 24 17 14 8 0
Entering state 26
Reading a token: Next token is token '*' (6.7: )
Shifting token '*' (6.7: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (6.9: e)
Shifting token IDENTIFIER (6.9: e)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (6.9: e)
-> $$ = nterm declarator_arr (6.9: )
Stack now 31 26 52 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (6.10: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (6.9: )
-> $$ = nterm declarator (6.9: )
Stack now 31 26 52 24 17 14 8 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (6.7: )
   $2 = nterm declarator (6.9: )
-> $$ = nterm declarator (6.7-9: )
Stack now 26 52 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (6.7-9: )
-> $$ = nterm declarator_list (6.7-9: )
Stack now 26 52 24 17 14 8 0
Entering state 65
Next token is token ';' (6.10: )
Shifting token ';' (6.10: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (6.2-6: )
   $2 = nterm declarator_list (6.7-9: )
   $3 = token ';' (6.10: )
-> $$ = nterm declaration (6.2-10: )
Stack now 52 24 17 14 8 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (3.2-5.8: )
   $2 = nterm declaration (6.2-10: )
-> $$ = nterm declaration_list (3.2-6.10: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (7.2: c)
Shifting token IDENTIFIER (7.2: c)
Entering state 40
Reading a token: Next token is token '=' (7.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (7.2: c)
-> $$ = nterm primary_expression (7.2: )
Stack now 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (7.2: )
-> $$ = nterm postfix_expression (7.2: )
Stack now 52 24 17 14 8 0
Entering state 58
Next token is token '=' (7.3: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (7.2: )
-> $$ = nterm unary_expression (7.2: )
Stack now 52 24 17 14 8 0
Entering state 57
Next token is token '=' (7.3: )
Shifting token '=' (7.3: )
Entering state 90
Reading a token: Next token is token '-' (7.4: )
Shifting token '-' (7.4: )
Entering state 49
Reducing stack by rule 78 (line 1404):
   $1 = token '-' (7.4: )
-> $$ = nterm unary_operator (7.4: )
Stack now 90 57 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token INT_CONSTANT (7.5-6: 34)
Shifting token INT_CONSTANT (7.5-6: 34)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (7.5-6: 34)
-> $$ = nterm primary_expression (7.5-6: )
Stack now 60 90 57 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (7.5-6: )
-> $$ = nterm postfix_expression (7.5-6: )
Stack now 60 90 57 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (7.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (7.5-6: )
-> $$ = nterm unary_expression (7.5-6: )
Stack now 60 90 57 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (7.4: )
   $2 = nterm unary_expression (7.5-6: )
-> $$ = nterm unary_expression (7.4-6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (7.4-6: )
-> $$ = nterm multiplicative_expression (7.4-6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 77
Next token is token ';' (7.7: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (7.4-6: )
-> $$ = nterm additive_expression (7.4-6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 76
Next token is token ';' (7.7: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (7.4-6: )
-> $$ = nterm relational_expression (7.4-6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 75
Next token is token ';' (7.7: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (7.4-6: )
-> $$ = nterm equality_expression (7.4-6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 74
Next token is token ';' (7.7: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (7.4-6: )
-> $$ = nterm logical_and_expression (7.4-6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 73
Next token is token ';' (7.7: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (7.4-6: )
-> $$ = nterm expression (7.4-6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 123
Next token is token ';' (7.7: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (7.2: )
   $2 = token '=' (7.3: )
   $3 = nterm expression (7.4-6: )
-> $$ = nterm assignment_expression (7.2-6: )
Stack now 52 24 17 14 8 0
Entering state 56
Next token is token ';' (7.7: )
Shifting token ';' (7.7: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (7.2-6: )
   $2 = token ';' (7.7: )
-> $$ = nterm assignment_statement (7.2-7: )
Stack now 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (7.2-7: )
-> $$ = nterm statement (7.2-7: )
Stack now 52 24 17 14 8 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (7.2-7: )
-> $$ = nterm statement_list (7.2-7: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (8.2: a)
Shifting token IDENTIFIER (8.2: a)
Entering state 40
Reading a token: Next token is token '=' (8.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (8.2: a)
-> $$ = nterm primary_expression (8.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (8.2: )
-> $$ = nterm postfix_expression (8.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (8.3: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (8.2: )
-> $$ = nterm unary_expression (8.2: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (8.3: )
Shifting token '=' (8.3: )
Entering state 90
Reading a token: Next token is token '-' (8.4: )
Shifting token '-' (8.4: )
Entering state 49
Reducing stack by rule 78 (line 1404):
   $1 = token '-' (8.4: )
-> $$ = nterm unary_operator (8.4: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token FLOAT_CONSTANT (8.5-7: 7.5)
Shifting token FLOAT_CONSTANT (8.5-7: 7.5)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (8.5-7: 7.5)
-> $$ = nterm primary_expression (8.5-7: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (8.5-7: )
-> $$ = nterm postfix_expression (8.5-7: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (8.8: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (8.5-7: )
-> $$ = nterm unary_expression (8.5-7: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (8.4: )
   $2 = nterm unary_expression (8.5-7: )
-> $$ = nterm unary_expression (8.4-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (8.4-7: )
-> $$ = nterm multiplicative_expression (8.4-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (8.8: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (8.4-7: )
-> $$ = nterm additive_expression (8.4-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (8.8: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (8.4-7: )
-> $$ = nterm relational_expression (8.4-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (8.8: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (8.4-7: )
-> $$ = nterm equality_expression (8.4-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (8.8: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (8.4-7: )
-> $$ = nterm logical_and_expression (8.4-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (8.8: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (8.4-7: )
-> $$ = nterm expression (8.4-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (8.8: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (8.2: )
   $2 = token '=' (8.3: )
   $3 = nterm expression (8.4-7: )
-> $$ = nterm assignment_expression (8.2-7: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (8.8: )
Shifting token ';' (8.8: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (8.2-7: )
   $2 = token ';' (8.8: )
-> $$ = nterm assignment_statement (8.2-8: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (8.2-8: )
-> $$ = nterm statement (8.2-8: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-7: )
   $2 = nterm statement (8.2-8: )
-> $$ = nterm statement_list (7.2-8.8: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (9.2: b)
Shifting token IDENTIFIER (9.2: b)
Entering state 40
Reading a token: Next token is token '=' (9.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (9.2: b)
-> $$ = nterm primary_expression (9.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (9.2: )
-> $$ = nterm postfix_expression (9.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (9.3: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (9.2: )
-> $$ = nterm unary_expression (9.2: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (9.3: )
Shifting token '=' (9.3: )
Entering state 90
Reading a token: Next token is token '-' (9.4: )
Shifting token '-' (9.4: )
Entering state 49
Reducing stack by rule 78 (line 1404):
   $1 = token '-' (9.4: )
-> $$ = nterm unary_operator (9.4: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (9.5: a)
Shifting token IDENTIFIER (9.5: a)
Entering state 71
Reading a token: Next token is token ';' (9.6: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (9.5: a)
-> $$ = nterm primary_expression (9.5: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (9.5: )
-> $$ = nterm postfix_expression (9.5: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 58
Next token is token ';' (9.6: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (9.5: )
-> $$ = nterm unary_expression (9.5: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (9.4: )
   $2 = nterm unary_expression (9.5: )
-> $$ = nterm unary_expression (9.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (9.4-5: )
-> $$ = nterm multiplicative_expression (9.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (9.6: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (9.4-5: )
-> $$ = nterm additive_expression (9.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (9.6: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (9.4-5: )
-> $$ = nterm relational_expression (9.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (9.6: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (9.4-5: )
-> $$ = nterm equality_expression (9.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (9.6: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (9.4-5: )
-> $$ = nterm logical_and_expression (9.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (9.6: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (9.4-5: )
-> $$ = nterm expression (9.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (9.6: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (9.2: )
   $2 = token '=' (9.3: )
   $3 = nterm expression (9.4-5: )
-> $$ = nterm assignment_expression (9.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (9.6: )
Shifting token ';' (9.6: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (9.2-5: )
   $2 = token ';' (9.6: )
-> $$ = nterm assignment_statement (9.2-6: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (9.2-6: )
-> $$ = nterm statement (9.2-6: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-8.8: )
   $2 = nterm statement (9.2-6: )
-> $$ = nterm statement_list (7.2-9.6: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (10.2: b)
Shifting token IDENTIFIER (10.2: b)
Entering state 40
Reading a token: Next token is token '=' (10.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (10.2: b)
-> $$ = nterm primary_expression (10.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (10.2: )
-> $$ = nterm postfix_expression (10.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (10.3: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (10.2: )
-> $$ = nterm unary_expression (10.2: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (10.3: )
Shifting token '=' (10.3: )
Entering state 90
Reading a token: Next token is token '-' (10.4: )
Shifting token '-' (10.4: )
Entering state 49
Reducing stack by rule 78 (line 1404):
   $1 = token '-' (10.4: )
-> $$ = nterm unary_operator (10.4: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (10.5: c)
Shifting token IDENTIFIER (10.5: c)
Entering state 71
Reading a token: Next token is token ';' (10.6: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (10.5: c)
-> $$ = nterm primary_expression (10.5: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (10.5: )
-> $$ = nterm postfix_expression (10.5: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 58
Next token is token ';' (10.6: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (10.5: )
-> $$ = nterm unary_expression (10.5: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (10.4: )
   $2 = nterm unary_expression (10.5: )
-> $$ = nterm unary_expression (10.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (10.4-5: )
-> $$ = nterm multiplicative_expression (10.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (10.6: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (10.4-5: )
-> $$ = nterm additive_expression (10.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (10.6: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (10.4-5: )
-> $$ = nterm relational_expression (10.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (10.6: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (10.4-5: )
-> $$ = nterm equality_expression (10.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (10.6: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (10.4-5: )
-> $$ = nterm logical_and_expression (10.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (10.6: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (10.4-5: )
-> $$ = nterm expression (10.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (10.6: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (10.2: )
   $2 = token '=' (10.3: )
   $3 = nterm expression (10.4-5: )
-> $$ = nterm assignment_expression (10.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (10.6: )
Shifting token ';' (10.6: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (10.2-5: )
   $2 = token ';' (10.6: )
-> $$ = nterm assignment_statement (10.2-6: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (10.2-6: )
-> $$ = nterm statement (10.2-6: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-9.6: )
   $2 = nterm statement (10.2-6: )
-> $$ = nterm statement_list (7.2-10.6: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (11.2: b)
Shifting token IDENTIFIER (11.2: b)
Entering state 40
Reading a token: Next token is token '=' (11.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (11.2: b)
-> $$ = nterm primary_expression (11.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (11.2: )
-> $$ = nterm postfix_expression (11.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (11.3: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (11.2: )
-> $$ = nterm unary_expression (11.2: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (11.3: )
Shifting token '=' (11.3: )
Entering state 90
Reading a token: Next token is token '!' (11.4: )
Shifting token '!' (11.4: )
Entering state 47
Reducing stack by rule 79 (line 1407):
   $1 = token '!' (11.4: )
-> $$ = nterm unary_operator (11.4: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token '(' (11.5: )
Shifting token '(' (11.5: )
Entering state 44
Reading a token: Next token is token '-' (11.6: )
Shifting token '-' (11.6: )
Entering state 49
Reducing stack by rule 78 (line 1404):
   $1 = token '-' (11.6: )
-> $$ = nterm unary_operator (11.6: )
Stack now 44 60 90 57 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token FLOAT_CONSTANT (11.7-9: 0.0)
Shifting token FLOAT_CONSTANT (11.7-9: 0.0)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (11.7-9: 0.0)
-> $$ = nterm primary_expression (11.7-9: )
Stack now 60 44 60 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (11.7-9: )
-> $$ = nterm postfix_expression (11.7-9: )
Stack now 60 44 60 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token '*' (11.10: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (11.7-9: )
-> $$ = nterm unary_expression (11.7-9: )
Stack now 60 44 60 90 57 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (11.6: )
   $2 = nterm unary_expression (11.7-9: )
-> $$ = nterm unary_expression (11.6-9: )
Stack now 44 60 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (11.6-9: )
-> $$ = nterm multiplicative_expression (11.6-9: )
Stack now 44 60 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token '*' (11.10: )
Shifting token '*' (11.10: )
Entering state 112
Reading a token: Next token is token FLOAT_CONSTANT (11.11-13: 2.3)
Shifting token FLOAT_CONSTANT (11.11-13: 2.3)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (11.11-13: 2.3)
-> $$ = nterm primary_expression (11.11-13: )
Stack now 112 77 44 60 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (11.11-13: )
-> $$ = nterm postfix_expression (11.11-13: )
Stack now 112 77 44 60 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ')' (11.14: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (11.11-13: )
-> $$ = nterm unary_expression (11.11-13: )
Stack now 112 77 44 60 90 57 86 52 24 17 14 8 0
Entering state 141
Reducing stack by rule 62 (line 1127):
   $1 = nterm multiplicative_expression (11.6-9: )
   $2 = token '*' (11.10: )
   $3 = nterm unary_expression (11.11-13: )
-> $$ = nterm multiplicative_expression (11.6-13: )
Stack now 44 60 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ')' (11.14: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (11.6-13: )
-> $$ = nterm additive_expression (11.6-13: )
Stack now 44 60 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ')' (11.14: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (11.6-13: )
-> $$ = nterm relational_expression (11.6-13: )
Stack now 44 60 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ')' (11.14: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (11.6-13: )
-> $$ = nterm equality_expression (11.6-13: )
Stack now 44 60 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ')' (11.14: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (11.6-13: )
-> $$ = nterm logical_and_expression (11.6-13: )
Stack now 44 60 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ')' (11.14: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (11.6-13: )
-> $$ = nterm expression (11.6-13: )
Stack now 44 60 90 57 86 52 24 17 14 8 0
Entering state 83
Next token is token ')' (11.14: )
Shifting token ')' (11.14: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (11.5: )
   $2 = nterm expression (11.6-13: )
   $3 = token ')' (11.14: )
-> $$ = nterm primary_expression (11.5-14: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (11.5-14: )
-> $$ = nterm postfix_expression (11.5-14: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (11.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (11.5-14: )
-> $$ = nterm unary_expression (11.5-14: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (11.4: )
   $2 = nterm unary_expression (11.5-14: )
-> $$ = nterm unary_expression (11.4-14: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (11.4-14: )
-> $$ = nterm multiplicative_expression (11.4-14: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (11.15: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (11.4-14: )
-> $$ = nterm additive_expression (11.4-14: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (11.15: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (11.4-14: )
-> $$ = nterm relational_expression (11.4-14: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (11.15: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (11.4-14: )
-> $$ = nterm equality_expression (11.4-14: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (11.15: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (11.4-14: )
-> $$ = nterm logical_and_expression (11.4-14: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (11.15: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (11.4-14: )
-> $$ = nterm expression (11.4-14: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (11.15: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (11.2: )
   $2 = token '=' (11.3: )
   $3 = nterm expression (11.4-14: )
-> $$ = nterm assignment_expression (11.2-14: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (11.15: )
Shifting token ';' (11.15: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (11.2-14: )
   $2 = token ';' (11.15: )
-> $$ = nterm assignment_statement (11.2-15: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (11.2-15: )
-> $$ = nterm statement (11.2-15: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-10.6: )
   $2 = nterm statement (11.2-15: )
-> $$ = nterm statement_list (7.2-11.15: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (12.2: e)
Shifting token IDENTIFIER (12.2: e)
Entering state 40
Reading a token: Next token is token '=' (12.4: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (12.2: e)
-> $$ = nterm primary_expression (12.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (12.2: )
-> $$ = nterm postfix_expression (12.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (12.4: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (12.2: )
-> $$ = nterm unary_expression (12.2: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (12.4: )
Shifting token '=' (12.4: )
Entering state 90
Reading a token: Next token is token '&' (12.6: )
Shifting token '&' (12.6: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (12.6: )
-> $$ = nterm unary_operator (12.6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (12.7: a)
Shifting token IDENTIFIER (12.7: a)
Entering state 71
Reading a token: Next token is token ';' (12.8: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (12.7: a)
-> $$ = nterm primary_expression (12.7: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (12.7: )
-> $$ = nterm postfix_expression (12.7: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 58
Next token is token ';' (12.8: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (12.7: )
-> $$ = nterm unary_expression (12.7: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (12.6: )
   $2 = nterm unary_expression (12.7: )
-> $$ = nterm unary_expression (12.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (12.6-7: )
-> $$ = nterm multiplicative_expression (12.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (12.8: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (12.6-7: )
-> $$ = nterm additive_expression (12.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (12.8: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (12.6-7: )
-> $$ = nterm relational_expression (12.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (12.8: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (12.6-7: )
-> $$ = nterm equality_expression (12.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (12.8: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (12.6-7: )
-> $$ = nterm logical_and_expression (12.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (12.8: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (12.6-7: )
-> $$ = nterm expression (12.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (12.8: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (12.2: )
   $2 = token '=' (12.4: )
   $3 = nterm expression (12.6-7: )
-> $$ = nterm assignment_expression (12.2-7: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (12.8: )
Shifting token ';' (12.8: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (12.2-7: )
   $2 = token ';' (12.8: )
-> $$ = nterm assignment_statement (12.2-8: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (12.2-8: )
-> $$ = nterm statement (12.2-8: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-11.15: )
   $2 = nterm statement (12.2-8: )
-> $$ = nterm statement_list (7.2-12.8: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (13.2: c)
Shifting token IDENTIFIER (13.2: c)
Entering state 40
Reading a token: Next token is token '=' (13.4: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (13.2: c)
-> $$ = nterm primary_expression (13.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (13.2: )
-> $$ = nterm postfix_expression (13.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (13.4: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (13.2: )
-> $$ = nterm unary_expression (13.2: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (13.4: )
Shifting token '=' (13.4: )
Entering state 90
Reading a token: Next token is token '*' (13.6: )
Shifting token '*' (13.6: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (13.6: )
-> $$ = nterm unary_operator (13.6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (13.7: e)
Shifting token IDENTIFIER (13.7: e)
Entering state 71
Reading a token: Next token is token ';' (13.8: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (13.7: e)
-> $$ = nterm primary_expression (13.7: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (13.7: )
-> $$ = nterm postfix_expression (13.7: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 58
Next token is token ';' (13.8: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (13.7: )
-> $$ = nterm unary_expression (13.7: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (13.6: )
   $2 = nterm unary_expression (13.7: )
-> $$ = nterm unary_expression (13.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (13.6-7: )
-> $$ = nterm multiplicative_expression (13.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (13.8: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (13.6-7: )
-> $$ = nterm additive_expression (13.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (13.8: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (13.6-7: )
-> $$ = nterm relational_expression (13.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (13.8: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (13.6-7: )
-> $$ = nterm equality_expression (13.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (13.8: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (13.6-7: )
-> $$ = nterm logical_and_expression (13.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (13.8: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (13.6-7: )
-> $$ = nterm expression (13.6-7: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (13.8: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (13.2: )
   $2 = token '=' (13.4: )
   $3 = nterm expression (13.6-7: )
-> $$ = nterm assignment_expression (13.2-7: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (13.8: )
Shifting token ';' (13.8: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (13.2-7: )
   $2 = token ';' (13.8: )
-> $$ = nterm assignment_statement (13.2-8: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (13.2-8: )
-> $$ = nterm statement (13.2-8: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-12.8: )
   $2 = nterm statement (13.2-8: )
-> $$ = nterm statement_list (7.2-13.8: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (14.2: b)
Shifting token IDENTIFIER (14.2: b)
Entering state 40
Reading a token: Next token is token '=' (14.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (14.2: b)
-> $$ = nterm primary_expression (14.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (14.2: )
-> $$ = nterm postfix_expression (14.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (14.3: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (14.2: )
-> $$ = nterm unary_expression (14.2: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (14.3: )
Shifting token '=' (14.3: )
Entering state 90
Reading a token: Next token is token '*' (14.4: )
Shifting token '*' (14.4: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (14.4: )
-> $$ = nterm unary_operator (14.4: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (14.5: e)
Shifting token IDENTIFIER (14.5: e)
Entering state 71
Reading a token: Next token is token ';' (14.6: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (14.5: e)
-> $$ = nterm primary_expression (14.5: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (14.5: )
-> $$ = nterm postfix_expression (14.5: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 58
Next token is token ';' (14.6: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (14.5: )
-> $$ = nterm unary_expression (14.5: )
Stack now 60 90 57 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (14.4: )
   $2 = nterm unary_expression (14.5: )
-> $$ = nterm unary_expression (14.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (14.4-5: )
-> $$ = nterm multiplicative_expression (14.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (14.6: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (14.4-5: )
-> $$ = nterm additive_expression (14.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (14.6: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (14.4-5: )
-> $$ = nterm relational_expression (14.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (14.6: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (14.4-5: )
-> $$ = nterm equality_expression (14.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (14.6: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (14.4-5: )
-> $$ = nterm logical_and_expression (14.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (14.6: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (14.4-5: )
-> $$ = nterm expression (14.4-5: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (14.6: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (14.2: )
   $2 = token '=' (14.3: )
   $3 = nterm expression (14.4-5: )
-> $$ = nterm assignment_expression (14.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (14.6: )
Shifting token ';' (14.6: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (14.2-5: )
   $2 = token ';' (14.6: )
-> $$ = nterm assignment_statement (14.2-6: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (14.2-6: )
-> $$ = nterm statement (14.2-6: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-13.8: )
   $2 = nterm statement (14.2-6: )
-> $$ = nterm statement_list (7.2-14.6: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (15.2: j)
Shifting token IDENTIFIER (15.2: j)
Entering state 40
Reading a token: Next token is token '=' (15.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (15.2: j)
-> $$ = nterm primary_expression (15.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (15.2: )
-> $$ = nterm postfix_expression (15.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (15.3: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (15.2: )
-> $$ = nterm unary_expression (15.2: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (15.3: )
Shifting token '=' (15.3: )
Entering state 90
Reading a token: Next token is token FLOAT_CONSTANT (15.4-6: 9.0)
Shifting token FLOAT_CONSTANT (15.4-6: 9.0)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (15.4-6: 9.0)
-> $$ = nterm primary_expression (15.4-6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (15.4-6: )
-> $$ = nterm postfix_expression (15.4-6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (15.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (15.4-6: )
-> $$ = nterm unary_expression (15.4-6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (15.4-6: )
-> $$ = nterm multiplicative_expression (15.4-6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (15.7: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (15.4-6: )
-> $$ = nterm additive_expression (15.4-6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (15.7: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (15.4-6: )
-> $$ = nterm relational_expression (15.4-6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (15.7: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (15.4-6: )
-> $$ = nterm equality_expression (15.4-6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (15.7: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (15.4-6: )
-> $$ = nterm logical_and_expression (15.4-6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (15.7: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (15.4-6: )
-> $$ = nterm expression (15.4-6: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (15.7: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (15.2: )
   $2 = token '=' (15.3: )
   $3 = nterm expression (15.4-6: )
-> $$ = nterm assignment_expression (15.2-6: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (15.7: )
Shifting token ';' (15.7: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (15.2-6: )
   $2 = token ';' (15.7: )
-> $$ = nterm assignment_statement (15.2-7: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (15.2-7: )
-> $$ = nterm statement (15.2-7: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-14.6: )
   $2 = nterm statement (15.2-7: )
-> $$ = nterm statement_list (7.2-15.7: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (16.2: k)
Shifting token IDENTIFIER (16.2: k)
Entering state 40
Reading a token: Next token is token '[' (16.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.2: k)
-> $$ = nterm primary_expression (16.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.2: )
-> $$ = nterm postfix_expression (16.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '[' (16.3: )
Shifting token '[' (16.3: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (16.4: 3)
Shifting token INT_CONSTANT (16.4: 3)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (16.4: 3)
-> $$ = nterm primary_expression (16.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.4: )
-> $$ = nterm postfix_expression (16.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ']' (16.5: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.4: )
-> $$ = nterm unary_expression (16.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.4: )
-> $$ = nterm multiplicative_expression (16.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 77
Next token is token ']' (16.5: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.4: )
-> $$ = nterm additive_expression (16.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 76
Next token is token ']' (16.5: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.4: )
-> $$ = nterm relational_expression (16.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 75
Next token is token ']' (16.5: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.4: )
-> $$ = nterm equality_expression (16.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 74
Next token is token ']' (16.5: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.4: )
-> $$ = nterm logical_and_expression (16.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 73
Next token is token ']' (16.5: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.4: )
-> $$ = nterm expression (16.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 124
Next token is token ']' (16.5: )
Shifting token ']' (16.5: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (16.2: )
   $2 = token '[' (16.3: )
   $3 = nterm expression (16.4: )
   $4 = token ']' (16.5: )
-> $$ = nterm postfix_expression (16.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token '=' (16.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.2-5: )
-> $$ = nterm unary_expression (16.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (16.7: )
Shifting token '=' (16.7: )
Entering state 90
Reading a token: Next token is token FLOAT_CONSTANT (16.9-11: 3.3)
Shifting token FLOAT_CONSTANT (16.9-11: 3.3)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (16.9-11: 3.3)
-> $$ = nterm primary_expression (16.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.9-11: )
-> $$ = nterm postfix_expression (16.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (16.12: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.9-11: )
-> $$ = nterm unary_expression (16.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.9-11: )
-> $$ = nterm multiplicative_expression (16.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (16.12: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.9-11: )
-> $$ = nterm additive_expression (16.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (16.12: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.9-11: )
-> $$ = nterm relational_expression (16.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (16.12: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.9-11: )
-> $$ = nterm equality_expression (16.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (16.12: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.9-11: )
-> $$ = nterm logical_and_expression (16.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (16.12: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.9-11: )
-> $$ = nterm expression (16.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (16.12: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (16.2-5: )
   $2 = token '=' (16.7: )
   $3 = nterm expression (16.9-11: )
-> $$ = nterm assignment_expression (16.2-11: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (16.12: )
Shifting token ';' (16.12: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (16.2-11: )
   $2 = token ';' (16.12: )
-> $$ = nterm assignment_statement (16.2-12: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (16.2-12: )
-> $$ = nterm statement (16.2-12: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-15.7: )
   $2 = nterm statement (16.2-12: )
-> $$ = nterm statement_list (7.2-16.12: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (17.2: k)
Shifting token IDENTIFIER (17.2: k)
Entering state 40
Reading a token: Next token is token '[' (17.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (17.2: k)
-> $$ = nterm primary_expression (17.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.2: )
-> $$ = nterm postfix_expression (17.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '[' (17.3: )
Shifting token '[' (17.3: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (17.4: 4)
Shifting token INT_CONSTANT (17.4: 4)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (17.4: 4)
-> $$ = nterm primary_expression (17.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.4: )
-> $$ = nterm postfix_expression (17.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ']' (17.5: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.4: )
-> $$ = nterm unary_expression (17.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (17.4: )
-> $$ = nterm multiplicative_expression (17.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 77
Next token is token ']' (17.5: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (17.4: )
-> $$ = nterm additive_expression (17.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 76
Next token is token ']' (17.5: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (17.4: )
-> $$ = nterm relational_expression (17.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 75
Next token is token ']' (17.5: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (17.4: )
-> $$ = nterm equality_expression (17.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 74
Next token is token ']' (17.5: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (17.4: )
-> $$ = nterm logical_and_expression (17.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 73
Next token is token ']' (17.5: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (17.4: )
-> $$ = nterm expression (17.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 124
Next token is token ']' (17.5: )
Shifting token ']' (17.5: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (17.2: )
   $2 = token '[' (17.3: )
   $3 = nterm expression (17.4: )
   $4 = token ']' (17.5: )
-> $$ = nterm postfix_expression (17.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token '=' (17.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.2-5: )
-> $$ = nterm unary_expression (17.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (17.7: )
Shifting token '=' (17.7: )
Entering state 90
Reading a token: Next token is token FLOAT_CONSTANT (17.9-11: 4.3)
Shifting token FLOAT_CONSTANT (17.9-11: 4.3)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (17.9-11: 4.3)
-> $$ = nterm primary_expression (17.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.9-11: )
-> $$ = nterm postfix_expression (17.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (17.12: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.9-11: )
-> $$ = nterm unary_expression (17.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (17.9-11: )
-> $$ = nterm multiplicative_expression (17.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (17.12: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (17.9-11: )
-> $$ = nterm additive_expression (17.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (17.12: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (17.9-11: )
-> $$ = nterm relational_expression (17.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (17.12: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (17.9-11: )
-> $$ = nterm equality_expression (17.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (17.12: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (17.9-11: )
-> $$ = nterm logical_and_expression (17.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (17.12: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (17.9-11: )
-> $$ = nterm expression (17.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (17.12: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (17.2-5: )
   $2 = token '=' (17.7: )
   $3 = nterm expression (17.9-11: )
-> $$ = nterm assignment_expression (17.2-11: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (17.12: )
Shifting token ';' (17.12: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (17.2-11: )
   $2 = token ';' (17.12: )
-> $$ = nterm assignment_statement (17.2-12: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (17.2-12: )
-> $$ = nterm statement (17.2-12: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-16.12: )
   $2 = nterm statement (17.2-12: )
-> $$ = nterm statement_list (7.2-17.12: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (18.2: k)
Shifting token IDENTIFIER (18.2: k)
Entering state 40
Reading a token: Next token is token '[' (18.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (18.2: k)
-> $$ = nterm primary_expression (18.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (18.2: )
-> $$ = nterm postfix_expression (18.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '[' (18.3: )
Shifting token '[' (18.3: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (18.4: 5)
Shifting token INT_CONSTANT (18.4: 5)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (18.4: 5)
-> $$ = nterm primary_expression (18.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (18.4: )
-> $$ = nterm postfix_expression (18.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ']' (18.5: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (18.4: )
-> $$ = nterm unary_expression (18.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (18.4: )
-> $$ = nterm multiplicative_expression (18.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 77
Next token is token ']' (18.5: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (18.4: )
-> $$ = nterm additive_expression (18.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 76
Next token is token ']' (18.5: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (18.4: )
-> $$ = nterm relational_expression (18.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 75
Next token is token ']' (18.5: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (18.4: )
-> $$ = nterm equality_expression (18.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 74
Next token is token ']' (18.5: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (18.4: )
-> $$ = nterm logical_and_expression (18.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 73
Next token is token ']' (18.5: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (18.4: )
-> $$ = nterm expression (18.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 124
Next token is token ']' (18.5: )
Shifting token ']' (18.5: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (18.2: )
   $2 = token '[' (18.3: )
   $3 = nterm expression (18.4: )
   $4 = token ']' (18.5: )
-> $$ = nterm postfix_expression (18.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token '=' (18.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (18.2-5: )
-> $$ = nterm unary_expression (18.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (18.7: )
Shifting token '=' (18.7: )
Entering state 90
Reading a token: Next token is token FLOAT_CONSTANT (18.9-11: 5.3)
Shifting token FLOAT_CONSTANT (18.9-11: 5.3)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (18.9-11: 5.3)
-> $$ = nterm primary_expression (18.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (18.9-11: )
-> $$ = nterm postfix_expression (18.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (18.12: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (18.9-11: )
-> $$ = nterm unary_expression (18.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (18.9-11: )
-> $$ = nterm multiplicative_expression (18.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (18.12: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (18.9-11: )
-> $$ = nterm additive_expression (18.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (18.12: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (18.9-11: )
-> $$ = nterm relational_expression (18.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (18.12: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (18.9-11: )
-> $$ = nterm equality_expression (18.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (18.12: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (18.9-11: )
-> $$ = nterm logical_and_expression (18.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (18.12: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (18.9-11: )
-> $$ = nterm expression (18.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (18.12: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (18.2-5: )
   $2 = token '=' (18.7: )
   $3 = nterm expression (18.9-11: )
-> $$ = nterm assignment_expression (18.2-11: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (18.12: )
Shifting token ';' (18.12: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (18.2-11: )
   $2 = token ';' (18.12: )
-> $$ = nterm assignment_statement (18.2-12: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (18.2-12: )
-> $$ = nterm statement (18.2-12: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-17.12: )
   $2 = nterm statement (18.2-12: )
-> $$ = nterm statement_list (7.2-18.12: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (19.2: k)
Shifting token IDENTIFIER (19.2: k)
Entering state 40
Reading a token: Next token is token '[' (19.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (19.2: k)
-> $$ = nterm primary_expression (19.2: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (19.2: )
-> $$ = nterm postfix_expression (19.2: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '[' (19.3: )
Shifting token '[' (19.3: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (19.4: 6)
Shifting token INT_CONSTANT (19.4: 6)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (19.4: 6)
-> $$ = nterm primary_expression (19.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (19.4: )
-> $$ = nterm postfix_expression (19.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ']' (19.5: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (19.4: )
-> $$ = nterm unary_expression (19.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (19.4: )
-> $$ = nterm multiplicative_expression (19.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 77
Next token is token ']' (19.5: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (19.4: )
-> $$ = nterm additive_expression (19.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 76
Next token is token ']' (19.5: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (19.4: )
-> $$ = nterm relational_expression (19.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 75
Next token is token ']' (19.5: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (19.4: )
-> $$ = nterm equality_expression (19.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 74
Next token is token ']' (19.5: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (19.4: )
-> $$ = nterm logical_and_expression (19.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 73
Next token is token ']' (19.5: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (19.4: )
-> $$ = nterm expression (19.4: )
Stack now 91 58 86 52 24 17 14 8 0
Entering state 124
Next token is token ']' (19.5: )
Shifting token ']' (19.5: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (19.2: )
   $2 = token '[' (19.3: )
   $3 = nterm expression (19.4: )
   $4 = token ']' (19.5: )
-> $$ = nterm postfix_expression (19.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token '=' (19.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (19.2-5: )
-> $$ = nterm unary_expression (19.2-5: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (19.7: )
Shifting token '=' (19.7: )
Entering state 90
Reading a token: Next token is token FLOAT_CONSTANT (19.9-11: 6.3)
Shifting token FLOAT_CONSTANT (19.9-11: 6.3)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (19.9-11: 6.3)
-> $$ = nterm primary_expression (19.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (19.9-11: )
-> $$ = nterm postfix_expression (19.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (19.12: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (19.9-11: )
-> $$ = nterm unary_expression (19.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (19.9-11: )
-> $$ = nterm multiplicative_expression (19.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (19.12: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (19.9-11: )
-> $$ = nterm additive_expression (19.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (19.12: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (19.9-11: )
-> $$ = nterm relational_expression (19.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (19.12: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (19.9-11: )
-> $$ = nterm equality_expression (19.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (19.12: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (19.9-11: )
-> $$ = nterm logical_and_expression (19.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (19.12: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (19.9-11: )
-> $$ = nterm expression (19.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (19.12: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (19.2-5: )
   $2 = token '=' (19.7: )
   $3 = nterm expression (19.9-11: )
-> $$ = nterm assignment_expression (19.2-11: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (19.12: )
Shifting token ';' (19.12: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (19.2-11: )
   $2 = token ';' (19.12: )
-> $$ = nterm assignment_statement (19.2-12: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (19.2-12: )
-> $$ = nterm statement (19.2-12: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-18.12: )
   $2 = nterm statement (19.2-12: )
-> $$ = nterm statement_list (7.2-19.12: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token '*' (20.2: )
Shifting token '*' (20.2: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (20.2: )
-> $$ = nterm unary_operator (20.2: )
Stack now 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (20.3: e)
Shifting token IDENTIFIER (20.3: e)
Entering state 71
Reading a token: Next token is token '=' (20.5: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (20.3: e)
-> $$ = nterm primary_expression (20.3: )
Stack now 60 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.3: )
-> $$ = nterm postfix_expression (20.3: )
Stack now 60 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (20.5: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.3: )
-> $$ = nterm unary_expression (20.3: )
Stack now 60 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (20.2: )
   $2 = nterm unary_expression (20.3: )
-> $$ = nterm unary_expression (20.2-3: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (20.5: )
Shifting token '=' (20.5: )
Entering state 90
Reading a token: Next token is token FLOAT_CONSTANT (20.7-11: 10.23)
Shifting token FLOAT_CONSTANT (20.7-11: 10.23)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (20.7-11: 10.23)
-> $$ = nterm primary_expression (20.7-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.7-11: )
-> $$ = nterm postfix_expression (20.7-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (20.12: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.7-11: )
-> $$ = nterm unary_expression (20.7-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (20.7-11: )
-> $$ = nterm multiplicative_expression (20.7-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (20.12: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (20.7-11: )
-> $$ = nterm additive_expression (20.7-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (20.12: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (20.7-11: )
-> $$ = nterm relational_expression (20.7-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (20.12: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (20.7-11: )
-> $$ = nterm equality_expression (20.7-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (20.12: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (20.7-11: )
-> $$ = nterm logical_and_expression (20.7-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (20.12: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (20.7-11: )
-> $$ = nterm expression (20.7-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (20.12: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (20.2-3: )
   $2 = token '=' (20.5: )
   $3 = nterm expression (20.7-11: )
-> $$ = nterm assignment_expression (20.2-11: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (20.12: )
Shifting token ';' (20.12: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (20.2-11: )
   $2 = token ';' (20.12: )
-> $$ = nterm assignment_statement (20.2-12: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (20.2-12: )
-> $$ = nterm statement (20.2-12: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-19.12: )
   $2 = nterm statement (20.2-12: )
-> $$ = nterm statement_list (7.2-20.12: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (21.2-7: printf)
Shifting token IDENTIFIER (21.2-7: printf)
Entering state 40
Reading a token: Next token is token '(' (21.8: )
Shifting token '(' (21.8: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (21.9-16: "%d%f\n")
Shifting token STRING_LITERAL (21.9-16: "%d%f\n")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (21.9-16: "%d%f\n")
-> $$ = nterm primary_expression (21.9-16: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.9-16: )
-> $$ = nterm postfix_expression (21.9-16: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ',' (21.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.9-16: )
-> $$ = nterm unary_expression (21.9-16: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.9-16: )
-> $$ = nterm multiplicative_expression (21.9-16: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token ',' (21.17: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.9-16: )
-> $$ = nterm additive_expression (21.9-16: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token ',' (21.17: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.9-16: )
-> $$ = nterm relational_expression (21.9-16: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 75
Next token is token ',' (21.17: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.9-16: )
-> $$ = nterm equality_expression (21.9-16: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token ',' (21.17: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.9-16: )
-> $$ = nterm logical_and_expression (21.9-16: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 73
Next token is token ',' (21.17: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.9-16: )
-> $$ = nterm expression (21.9-16: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 118
Next token is token ',' (21.17: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (21.9-16: )
-> $$ = nterm expression_list (21.9-16: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 119
Next token is token ',' (21.17: )
Shifting token ',' (21.17: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (21.18: b)
Shifting token IDENTIFIER (21.18: b)
Entering state 71
Reading a token: Next token is token EQ_OP (21.19-20: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (21.18: b)
-> $$ = nterm primary_expression (21.18: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.18: )
-> $$ = nterm postfix_expression (21.18: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Next token is token EQ_OP (21.19-20: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.18: )
-> $$ = nterm unary_expression (21.18: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.18: )
-> $$ = nterm multiplicative_expression (21.18: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token EQ_OP (21.19-20: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.18: )
-> $$ = nterm additive_expression (21.18: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token EQ_OP (21.19-20: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.18: )
-> $$ = nterm relational_expression (21.18: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 75
Next token is token EQ_OP (21.19-20: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.18: )
-> $$ = nterm equality_expression (21.18: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token EQ_OP (21.19-20: )
Shifting token EQ_OP (21.19-20: )
Entering state 104
Reading a token: Next token is token '*' (21.21: )
Shifting token '*' (21.21: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (21.21: )
-> $$ = nterm unary_operator (21.21: )
Stack now 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token '(' (21.22: )
Shifting token '(' (21.22: )
Entering state 44
Reading a token: Next token is token '&' (21.23: )
Shifting token '&' (21.23: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (21.23: )
-> $$ = nterm unary_operator (21.23: )
Stack now 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token '(' (21.24: )
Shifting token '(' (21.24: )
Entering state 44
Reading a token: Next token is token '*' (21.25: )
Shifting token '*' (21.25: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (21.25: )
-> $$ = nterm unary_operator (21.25: )
Stack now 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token '(' (21.26: )
Shifting token '(' (21.26: )
Entering state 44
Reading a token: Next token is token '&' (21.27: )
Shifting token '&' (21.27: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (21.27: )
-> $$ = nterm unary_operator (21.27: )
Stack now 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token '(' (21.28: )
Shifting token '(' (21.28: )
Entering state 44
Reading a token: Next token is token '*' (21.29: )
Shifting token '*' (21.29: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (21.29: )
-> $$ = nterm unary_operator (21.29: )
Stack now 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token '(' (21.30: )
Shifting token '(' (21.30: )
Entering state 44
Reading a token: Next token is token '&' (21.31: )
Shifting token '&' (21.31: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (21.31: )
-> $$ = nterm unary_operator (21.31: )
Stack now 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token '(' (21.32: )
Shifting token '(' (21.32: )
Entering state 44
Reading a token: Next token is token IDENTIFIER (21.33: k)
Shifting token IDENTIFIER (21.33: k)
Entering state 71
Reading a token: Next token is token '[' (21.34: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (21.33: k)
-> $$ = nterm primary_expression (21.33: )
Stack now 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.33: )
-> $$ = nterm postfix_expression (21.33: )
Stack now 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Next token is token '[' (21.34: )
Shifting token '[' (21.34: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (21.35: 4)
Shifting token INT_CONSTANT (21.35: 4)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (21.35: 4)
-> $$ = nterm primary_expression (21.35: )
Stack now 91 58 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.35: )
-> $$ = nterm postfix_expression (21.35: )
Stack now 91 58 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ']' (21.36: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.35: )
-> $$ = nterm unary_expression (21.35: )
Stack now 91 58 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.35: )
-> $$ = nterm multiplicative_expression (21.35: )
Stack now 91 58 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token ']' (21.36: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.35: )
-> $$ = nterm additive_expression (21.35: )
Stack now 91 58 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token ']' (21.36: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.35: )
-> $$ = nterm relational_expression (21.35: )
Stack now 91 58 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 75
Next token is token ']' (21.36: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.35: )
-> $$ = nterm equality_expression (21.35: )
Stack now 91 58 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token ']' (21.36: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.35: )
-> $$ = nterm logical_and_expression (21.35: )
Stack now 91 58 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 73
Next token is token ']' (21.36: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.35: )
-> $$ = nterm expression (21.35: )
Stack now 91 58 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 124
Next token is token ']' (21.36: )
Shifting token ']' (21.36: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (21.33: )
   $2 = token '[' (21.34: )
   $3 = nterm expression (21.35: )
   $4 = token ']' (21.36: )
-> $$ = nterm postfix_expression (21.33-36: )
Stack now 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ')' (21.37: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.33-36: )
-> $$ = nterm unary_expression (21.33-36: )
Stack now 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.33-36: )
-> $$ = nterm multiplicative_expression (21.33-36: )
Stack now 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token ')' (21.37: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.33-36: )
-> $$ = nterm additive_expression (21.33-36: )
Stack now 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token ')' (21.37: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.33-36: )
-> $$ = nterm relational_expression (21.33-36: )
Stack now 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 75
Next token is token ')' (21.37: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.33-36: )
-> $$ = nterm equality_expression (21.33-36: )
Stack now 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token ')' (21.37: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.33-36: )
-> $$ = nterm logical_and_expression (21.33-36: )
Stack now 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 73
Next token is token ')' (21.37: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.33-36: )
-> $$ = nterm expression (21.33-36: )
Stack now 44 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 83
Next token is token ')' (21.37: )
Shifting token ')' (21.37: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (21.32: )
   $2 = nterm expression (21.33-36: )
   $3 = token ')' (21.37: )
-> $$ = nterm primary_expression (21.32-37: )
Stack now 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.32-37: )
-> $$ = nterm postfix_expression (21.32-37: )
Stack now 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ')' (21.38: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.32-37: )
-> $$ = nterm unary_expression (21.32-37: )
Stack now 60 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (21.31: )
   $2 = nterm unary_expression (21.32-37: )
-> $$ = nterm unary_expression (21.31-37: )
Stack now 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.31-37: )
-> $$ = nterm multiplicative_expression (21.31-37: )
Stack now 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token ')' (21.38: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.31-37: )
-> $$ = nterm additive_expression (21.31-37: )
Stack now 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token ')' (21.38: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.31-37: )
-> $$ = nterm relational_expression (21.31-37: )
Stack now 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 75
Next token is token ')' (21.38: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.31-37: )
-> $$ = nterm equality_expression (21.31-37: )
Stack now 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token ')' (21.38: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.31-37: )
-> $$ = nterm logical_and_expression (21.31-37: )
Stack now 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 73
Next token is token ')' (21.38: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.31-37: )
-> $$ = nterm expression (21.31-37: )
Stack now 44 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 83
Next token is token ')' (21.38: )
Shifting token ')' (21.38: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (21.30: )
   $2 = nterm expression (21.31-37: )
   $3 = token ')' (21.38: )
-> $$ = nterm primary_expression (21.30-38: )
Stack now 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.30-38: )
-> $$ = nterm postfix_expression (21.30-38: )
Stack now 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ')' (21.39: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.30-38: )
-> $$ = nterm unary_expression (21.30-38: )
Stack now 60 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (21.29: )
   $2 = nterm unary_expression (21.30-38: )
-> $$ = nterm unary_expression (21.29-38: )
Stack now 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.29-38: )
-> $$ = nterm multiplicative_expression (21.29-38: )
Stack now 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token ')' (21.39: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.29-38: )
-> $$ = nterm additive_expression (21.29-38: )
Stack now 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token ')' (21.39: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.29-38: )
-> $$ = nterm relational_expression (21.29-38: )
Stack now 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 75
Next token is token ')' (21.39: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.29-38: )
-> $$ = nterm equality_expression (21.29-38: )
Stack now 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token ')' (21.39: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.29-38: )
-> $$ = nterm logical_and_expression (21.29-38: )
Stack now 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 73
Next token is token ')' (21.39: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.29-38: )
-> $$ = nterm expression (21.29-38: )
Stack now 44 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 83
Next token is token ')' (21.39: )
Shifting token ')' (21.39: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (21.28: )
   $2 = nterm expression (21.29-38: )
   $3 = token ')' (21.39: )
-> $$ = nterm primary_expression (21.28-39: )
Stack now 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.28-39: )
-> $$ = nterm postfix_expression (21.28-39: )
Stack now 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ')' (21.40: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.28-39: )
-> $$ = nterm unary_expression (21.28-39: )
Stack now 60 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (21.27: )
   $2 = nterm unary_expression (21.28-39: )
-> $$ = nterm unary_expression (21.27-39: )
Stack now 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.27-39: )
-> $$ = nterm multiplicative_expression (21.27-39: )
Stack now 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token ')' (21.40: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.27-39: )
-> $$ = nterm additive_expression (21.27-39: )
Stack now 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token ')' (21.40: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.27-39: )
-> $$ = nterm relational_expression (21.27-39: )
Stack now 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 75
Next token is token ')' (21.40: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.27-39: )
-> $$ = nterm equality_expression (21.27-39: )
Stack now 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token ')' (21.40: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.27-39: )
-> $$ = nterm logical_and_expression (21.27-39: )
Stack now 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 73
Next token is token ')' (21.40: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.27-39: )
-> $$ = nterm expression (21.27-39: )
Stack now 44 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 83
Next token is token ')' (21.40: )
Shifting token ')' (21.40: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (21.26: )
   $2 = nterm expression (21.27-39: )
   $3 = token ')' (21.40: )
-> $$ = nterm primary_expression (21.26-40: )
Stack now 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.26-40: )
-> $$ = nterm postfix_expression (21.26-40: )
Stack now 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ')' (21.41: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.26-40: )
-> $$ = nterm unary_expression (21.26-40: )
Stack now 60 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (21.25: )
   $2 = nterm unary_expression (21.26-40: )
-> $$ = nterm unary_expression (21.25-40: )
Stack now 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.25-40: )
-> $$ = nterm multiplicative_expression (21.25-40: )
Stack now 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token ')' (21.41: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.25-40: )
-> $$ = nterm additive_expression (21.25-40: )
Stack now 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token ')' (21.41: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.25-40: )
-> $$ = nterm relational_expression (21.25-40: )
Stack now 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 75
Next token is token ')' (21.41: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.25-40: )
-> $$ = nterm equality_expression (21.25-40: )
Stack now 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token ')' (21.41: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.25-40: )
-> $$ = nterm logical_and_expression (21.25-40: )
Stack now 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 73
Next token is token ')' (21.41: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.25-40: )
-> $$ = nterm expression (21.25-40: )
Stack now 44 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 83
Next token is token ')' (21.41: )
Shifting token ')' (21.41: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (21.24: )
   $2 = nterm expression (21.25-40: )
   $3 = token ')' (21.41: )
-> $$ = nterm primary_expression (21.24-41: )
Stack now 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.24-41: )
-> $$ = nterm postfix_expression (21.24-41: )
Stack now 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ')' (21.42: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.24-41: )
-> $$ = nterm unary_expression (21.24-41: )
Stack now 60 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (21.23: )
   $2 = nterm unary_expression (21.24-41: )
-> $$ = nterm unary_expression (21.23-41: )
Stack now 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.23-41: )
-> $$ = nterm multiplicative_expression (21.23-41: )
Stack now 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token ')' (21.42: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.23-41: )
-> $$ = nterm additive_expression (21.23-41: )
Stack now 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token ')' (21.42: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.23-41: )
-> $$ = nterm relational_expression (21.23-41: )
Stack now 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 75
Next token is token ')' (21.42: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.23-41: )
-> $$ = nterm equality_expression (21.23-41: )
Stack now 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token ')' (21.42: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.23-41: )
-> $$ = nterm logical_and_expression (21.23-41: )
Stack now 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 73
Next token is token ')' (21.42: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.23-41: )
-> $$ = nterm expression (21.23-41: )
Stack now 44 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 83
Next token is token ')' (21.42: )
Shifting token ')' (21.42: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (21.22: )
   $2 = nterm expression (21.23-41: )
   $3 = token ')' (21.42: )
-> $$ = nterm primary_expression (21.22-42: )
Stack now 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.22-42: )
-> $$ = nterm postfix_expression (21.22-42: )
Stack now 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ',' (21.43: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.22-42: )
-> $$ = nterm unary_expression (21.22-42: )
Stack now 60 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (21.21: )
   $2 = nterm unary_expression (21.22-42: )
-> $$ = nterm unary_expression (21.21-42: )
Stack now 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.21-42: )
-> $$ = nterm multiplicative_expression (21.21-42: )
Stack now 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token ',' (21.43: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.21-42: )
-> $$ = nterm additive_expression (21.21-42: )
Stack now 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token ',' (21.43: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.21-42: )
-> $$ = nterm relational_expression (21.21-42: )
Stack now 104 74 148 119 82 40 86 52 24 17 14 8 0
Entering state 133
Next token is token ',' (21.43: )
Reducing stack by rule 49 (line 701):
   $1 = nterm equality_expression (21.18: )
   $2 = token EQ_OP (21.19-20: )
   $3 = nterm relational_expression (21.21-42: )
-> $$ = nterm equality_expression (21.18-42: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token ',' (21.43: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.18-42: )
-> $$ = nterm logical_and_expression (21.18-42: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 73
Next token is token ',' (21.43: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.18-42: )
-> $$ = nterm expression (21.18-42: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 155
Next token is token ',' (21.43: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (21.9-16: )
   $2 = token ',' (21.17: )
   $3 = nterm expression (21.18-42: )
-> $$ = nterm expression_list (21.9-42: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 119
Next token is token ',' (21.43: )
Shifting token ',' (21.43: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (21.44: c)
Shifting token IDENTIFIER (21.44: c)
Entering state 71
Reading a token: Next token is token ')' (21.45: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (21.44: c)
-> $$ = nterm primary_expression (21.44: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.44: )
-> $$ = nterm postfix_expression (21.44: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 58
Next token is token ')' (21.45: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.44: )
-> $$ = nterm unary_expression (21.44: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.44: )
-> $$ = nterm multiplicative_expression (21.44: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 77
Next token is token ')' (21.45: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.44: )
-> $$ = nterm additive_expression (21.44: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 76
Next token is token ')' (21.45: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.44: )
-> $$ = nterm relational_expression (21.44: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 75
Next token is token ')' (21.45: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.44: )
-> $$ = nterm equality_expression (21.44: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 74
Next token is token ')' (21.45: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.44: )
-> $$ = nterm logical_and_expression (21.44: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 73
Next token is token ')' (21.45: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.44: )
-> $$ = nterm expression (21.44: )
Stack now 148 119 82 40 86 52 24 17 14 8 0
Entering state 155
Next token is token ')' (21.45: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (21.9-42: )
   $2 = token ',' (21.43: )
   $3 = nterm expression (21.44: )
-> $$ = nterm expression_list (21.9-44: )
Stack now 82 40 86 52 24 17 14 8 0
Entering state 119
Next token is token ')' (21.45: )
Shifting token ')' (21.45: )
Entering state 147
Reading a token: Next token is token ';' (21.46: )
Shifting token ';' (21.46: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (21.2-7: printf)
   $2 = token '(' (21.8: )
   $3 = nterm expression_list (21.9-44: )
   $4 = token ')' (21.45: )
   $5 = token ';' (21.46: )
-> $$ = nterm procedure_call (21.2-46: )
Stack now 86 52 24 17 14 8 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (21.2-46: )
-> $$ = nterm statement (21.2-46: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (7.2-20.12: )
   $2 = nterm statement (21.2-46: )
-> $$ = nterm statement_list (7.2-21.46: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token '}' (22.1: )
Shifting token '}' (22.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (2.11: )
   $2 = nterm declaration_list (3.2-6.10: )
   $3 = nterm statement_list (7.2-21.46: )
   $4 = token '}' (22.1: )
-> $$ = nterm compound_statement (2.11-22.1: )
Stack now 17 14 8 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (2.1-3: )
   $2 = nterm fun_declarator (2.5-10: )
   $3 = nterm $@2 (2.11: )
   $4 = nterm compound_statement (2.11-22.1: )
-> $$ = nterm function_definition (2.1-22.1: )
Stack now 0
Entering state 7
Reducing stack by rule 2 (line 126):
   $1 = nterm function_definition (2.1-22.1: )
-> $$ = nterm translation_unit (2.1-22.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token $end (22.1: )
Shifting token $end (22.1: )
Entering state 10
Cleanup: popping token $end (22.1: )
Cleanup: popping nterm translation_unit (2.1-22.1: )
