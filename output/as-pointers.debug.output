Starting parse
Entering state 0
Reading a token: Next token is token STRUCT (2.1-6: )
Shifting token STRUCT (2.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (2.8-13: person)
Shifting token IDENTIFIER (2.8-13: person)
Entering state 9
Reading a token: Next token is token '{' (2.15: )
Reducing stack by rule 5 (line 138):
-> $$ = nterm $@1 (2.14: )
Stack now 9 4 0
Entering state 15
Next token is token '{' (2.15: )
Shifting token '{' (2.15: )
Entering state 18
Reading a token: Next token is token INT (3.4-6: )
Shifting token INT (3.4-6: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (3.4-6: )
-> $$ = nterm type_specifier (3.4-6: )
Stack now 18 15 9 4 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (3.8-9: id)
Shifting token IDENTIFIER (3.8-9: id)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.8-9: id)
-> $$ = nterm declarator_arr (3.8-9: )
Stack now 26 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (3.10: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.8-9: )
-> $$ = nterm declarator (3.8-9: )
Stack now 26 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (3.8-9: )
-> $$ = nterm declarator_list (3.8-9: )
Stack now 26 18 15 9 4 0
Entering state 65
Next token is token ';' (3.10: )
Shifting token ';' (3.10: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (3.4-6: )
   $2 = nterm declarator_list (3.8-9: )
   $3 = token ';' (3.10: )
-> $$ = nterm declaration (3.4-10: )
Stack now 18 15 9 4 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (3.4-10: )
-> $$ = nterm declaration_list (3.4-10: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token FLOAT (4.4-8: )
Shifting token FLOAT (4.4-8: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (4.4-8: )
-> $$ = nterm type_specifier (4.4-8: )
Stack now 28 18 15 9 4 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (4.10-15: weight)
Shifting token IDENTIFIER (4.10-15: weight)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (4.10-15: weight)
-> $$ = nterm declarator_arr (4.10-15: )
Stack now 26 28 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (4.16: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (4.10-15: )
-> $$ = nterm declarator (4.10-15: )
Stack now 26 28 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (4.10-15: )
-> $$ = nterm declarator_list (4.10-15: )
Stack now 26 28 18 15 9 4 0
Entering state 65
Next token is token ';' (4.16: )
Shifting token ';' (4.16: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (4.4-8: )
   $2 = nterm declarator_list (4.10-15: )
   $3 = token ';' (4.16: )
-> $$ = nterm declaration (4.4-16: )
Stack now 28 18 15 9 4 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (3.4-10: )
   $2 = nterm declaration (4.4-16: )
-> $$ = nterm declaration_list (3.4-4.16: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token INT (5.4-6: )
Shifting token INT (5.4-6: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (5.4-6: )
-> $$ = nterm type_specifier (5.4-6: )
Stack now 28 18 15 9 4 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (5.8-10: age)
Shifting token IDENTIFIER (5.8-10: age)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (5.8-10: age)
-> $$ = nterm declarator_arr (5.8-10: )
Stack now 26 28 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (5.11: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (5.8-10: )
-> $$ = nterm declarator (5.8-10: )
Stack now 26 28 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (5.8-10: )
-> $$ = nterm declarator_list (5.8-10: )
Stack now 26 28 18 15 9 4 0
Entering state 65
Next token is token ';' (5.11: )
Shifting token ';' (5.11: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (5.4-6: )
   $2 = nterm declarator_list (5.8-10: )
   $3 = token ';' (5.11: )
-> $$ = nterm declaration (5.4-11: )
Stack now 28 18 15 9 4 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (3.4-4.16: )
   $2 = nterm declaration (5.4-11: )
-> $$ = nterm declaration_list (3.4-5.11: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token '}' (6.1: )
Shifting token '}' (6.1: )
Entering state 66
Reading a token: Next token is token ';' (6.2: )
Shifting token ';' (6.2: )
Entering state 98
Reducing stack by rule 6 (line 137):
   $1 = token STRUCT (2.1-6: )
   $2 = token IDENTIFIER (2.8-13: person)
   $3 = nterm $@1 (2.14: )
   $4 = token '{' (2.15: )
   $5 = nterm declaration_list (3.4-5.11: )
   $6 = token '}' (6.1: )
   $7 = token ';' (6.2: )
-> $$ = nterm struct_specifier (2.1-6.2: )
Stack now 0
Entering state 6
Reducing stack by rule 1 (line 122):
   $1 = nterm struct_specifier (2.1-6.2: )
-> $$ = nterm translation_unit (2.1-6.2: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (8.1-3: )
Shifting token INT (8.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (8.1-3: )
-> $$ = nterm type_specifier (8.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (8.5-8: main)
Shifting token IDENTIFIER (8.5-8: main)
Entering state 13
Reading a token: Next token is token '(' (8.9: )
Shifting token '(' (8.9: )
Entering state 16
Reading a token: Next token is token ')' (8.10: )
Shifting token ')' (8.10: )
Entering state 20
Reducing stack by rule 14 (line 244):
   $1 = token IDENTIFIER (8.5-8: main)
   $2 = token '(' (8.9: )
   $3 = token ')' (8.10: )
-> $$ = nterm fun_declarator (8.5-10: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (8.11: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (9.1: )
Shifting token '{' (9.1: )
Entering state 24
Reading a token: Next token is token INT (10.3-5: )
Shifting token INT (10.3-5: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (10.3-5: )
-> $$ = nterm type_specifier (10.3-5: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (10.7: n)
Shifting token IDENTIFIER (10.7: n)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (10.7: n)
-> $$ = nterm declarator_arr (10.7: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ',' (10.8: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (10.7: )
-> $$ = nterm declarator (10.7: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (10.7: )
-> $$ = nterm declarator_list (10.7: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ',' (10.8: )
Shifting token ',' (10.8: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (10.9: i)
Shifting token IDENTIFIER (10.9: i)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (10.9: i)
-> $$ = nterm declarator_arr (10.9: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (10.10: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (10.9: )
-> $$ = nterm declarator (10.9: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (10.7: )
   $2 = token ',' (10.8: )
   $3 = nterm declarator (10.9: )
-> $$ = nterm declarator_list (10.7-9: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (10.10: )
Shifting token ';' (10.10: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (10.3-5: )
   $2 = nterm declarator_list (10.7-9: )
   $3 = token ';' (10.10: )
-> $$ = nterm declaration (10.3-10: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (10.3-10: )
-> $$ = nterm declaration_list (10.3-10: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token STRUCT (11.3-8: )
Shifting token STRUCT (11.3-8: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (11.10-15: person)
Shifting token IDENTIFIER (11.10-15: person)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (11.3-8: )
   $2 = token IDENTIFIER (11.10-15: person)
-> $$ = nterm type_specifier (11.3-15: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token '*' (11.17: )
Shifting token '*' (11.17: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (11.18-20: ptr)
Shifting token IDENTIFIER (11.18-20: ptr)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (11.18-20: ptr)
-> $$ = nterm declarator_arr (11.18-20: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (11.21: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (11.18-20: )
-> $$ = nterm declarator (11.18-20: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (11.17: )
   $2 = nterm declarator (11.18-20: )
-> $$ = nterm declarator (11.17-20: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (11.17-20: )
-> $$ = nterm declarator_list (11.17-20: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (11.21: )
Shifting token ';' (11.21: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (11.3-15: )
   $2 = nterm declarator_list (11.17-20: )
   $3 = token ';' (11.21: )
-> $$ = nterm declaration (11.3-21: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (10.3-10: )
   $2 = nterm declaration (11.3-21: )
-> $$ = nterm declaration_list (10.3-11.21: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token STRUCT (12.3-8: )
Shifting token STRUCT (12.3-8: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (12.10-15: person)
Shifting token IDENTIFIER (12.10-15: person)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (12.3-8: )
   $2 = token IDENTIFIER (12.10-15: person)
-> $$ = nterm type_specifier (12.3-15: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (12.17-23: persons)
Shifting token IDENTIFIER (12.17-23: persons)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (12.17-23: persons)
-> $$ = nterm declarator_arr (12.17-23: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (12.24: )
Shifting token '[' (12.24: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (12.25-26: 30)
Shifting token INT_CONSTANT (12.25-26: 30)
Entering state 99
Reading a token: Next token is token ']' (12.27: )
Shifting token ']' (12.27: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (12.17-23: )
   $2 = token '[' (12.24: )
   $3 = token INT_CONSTANT (12.25-26: 30)
   $4 = token ']' (12.27: )
-> $$ = nterm declarator_arr (12.17-27: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (12.28: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (12.17-27: )
-> $$ = nterm declarator (12.17-27: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (12.17-27: )
-> $$ = nterm declarator_list (12.17-27: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (12.28: )
Shifting token ';' (12.28: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (12.3-15: )
   $2 = nterm declarator_list (12.17-27: )
   $3 = token ';' (12.28: )
-> $$ = nterm declaration (12.3-28: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (10.3-11.21: )
   $2 = nterm declaration (12.3-28: )
-> $$ = nterm declaration_list (10.3-12.28: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (15.3-8: printf)
Shifting token IDENTIFIER (15.3-8: printf)
Entering state 40
Reading a token: Next token is token '(' (15.9: )
Shifting token '(' (15.9: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (15.10-48: "Enter the number of persons (<= 30): ")
Shifting token STRING_LITERAL (15.10-48: "Enter the number of persons (<= 30): ")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (15.10-48: "Enter the number of persons (<= 30): ")
-> $$ = nterm primary_expression (15.10-48: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (15.10-48: )
-> $$ = nterm postfix_expression (15.10-48: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (15.49: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (15.10-48: )
-> $$ = nterm unary_expression (15.10-48: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (15.10-48: )
-> $$ = nterm multiplicative_expression (15.10-48: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (15.49: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (15.10-48: )
-> $$ = nterm additive_expression (15.10-48: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (15.49: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (15.10-48: )
-> $$ = nterm relational_expression (15.10-48: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (15.49: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (15.10-48: )
-> $$ = nterm equality_expression (15.10-48: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (15.49: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (15.10-48: )
-> $$ = nterm logical_and_expression (15.10-48: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (15.49: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (15.10-48: )
-> $$ = nterm expression (15.10-48: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 118
Next token is token ')' (15.49: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (15.10-48: )
-> $$ = nterm expression_list (15.10-48: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (15.49: )
Shifting token ')' (15.49: )
Entering state 147
Reading a token: Next token is token ';' (15.50: )
Shifting token ';' (15.50: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (15.3-8: printf)
   $2 = token '(' (15.9: )
   $3 = nterm expression_list (15.10-48: )
   $4 = token ')' (15.49: )
   $5 = token ';' (15.50: )
-> $$ = nterm procedure_call (15.3-50: )
Stack now 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (15.3-50: )
-> $$ = nterm statement (15.3-50: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (15.3-50: )
-> $$ = nterm statement_list (15.3-50: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (16.3-7: scanf)
Shifting token IDENTIFIER (16.3-7: scanf)
Entering state 40
Reading a token: Next token is token '(' (16.8: )
Shifting token '(' (16.8: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (16.9-12: "%d")
Shifting token STRING_LITERAL (16.9-12: "%d")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (16.9-12: "%d")
-> $$ = nterm primary_expression (16.9-12: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.9-12: )
-> $$ = nterm postfix_expression (16.9-12: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (16.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.9-12: )
-> $$ = nterm unary_expression (16.9-12: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.9-12: )
-> $$ = nterm multiplicative_expression (16.9-12: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (16.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.9-12: )
-> $$ = nterm additive_expression (16.9-12: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (16.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.9-12: )
-> $$ = nterm relational_expression (16.9-12: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (16.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.9-12: )
-> $$ = nterm equality_expression (16.9-12: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (16.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.9-12: )
-> $$ = nterm logical_and_expression (16.9-12: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (16.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.9-12: )
-> $$ = nterm expression (16.9-12: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (16.13: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (16.9-12: )
-> $$ = nterm expression_list (16.9-12: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (16.13: )
Shifting token ',' (16.13: )
Entering state 148
Reading a token: Next token is token '&' (16.15: )
Shifting token '&' (16.15: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (16.15: )
-> $$ = nterm unary_operator (16.15: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (16.16: n)
Shifting token IDENTIFIER (16.16: n)
Entering state 71
Reading a token: Next token is token ')' (16.17: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.16: n)
-> $$ = nterm primary_expression (16.16: )
Stack now 60 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.16: )
-> $$ = nterm postfix_expression (16.16: )
Stack now 60 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (16.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.16: )
-> $$ = nterm unary_expression (16.16: )
Stack now 60 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (16.15: )
   $2 = nterm unary_expression (16.16: )
-> $$ = nterm unary_expression (16.15-16: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.15-16: )
-> $$ = nterm multiplicative_expression (16.15-16: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (16.17: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.15-16: )
-> $$ = nterm additive_expression (16.15-16: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (16.17: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.15-16: )
-> $$ = nterm relational_expression (16.15-16: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (16.17: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.15-16: )
-> $$ = nterm equality_expression (16.15-16: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (16.17: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.15-16: )
-> $$ = nterm logical_and_expression (16.15-16: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (16.17: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.15-16: )
-> $$ = nterm expression (16.15-16: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (16.17: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (16.9-12: )
   $2 = token ',' (16.13: )
   $3 = nterm expression (16.15-16: )
-> $$ = nterm expression_list (16.9-16: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (16.17: )
Shifting token ')' (16.17: )
Entering state 147
Reading a token: Next token is token ';' (16.18: )
Shifting token ';' (16.18: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (16.3-7: scanf)
   $2 = token '(' (16.8: )
   $3 = nterm expression_list (16.9-16: )
   $4 = token ')' (16.17: )
   $5 = token ';' (16.18: )
-> $$ = nterm procedure_call (16.3-18: )
Stack now 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (16.3-18: )
-> $$ = nterm statement (16.3-18: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (15.3-50: )
   $2 = nterm statement (16.3-18: )
-> $$ = nterm statement_list (15.3-16.18: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (17.3-5: ptr)
Shifting token IDENTIFIER (17.3-5: ptr)
Entering state 40
Reading a token: Next token is token '=' (17.7: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (17.3-5: ptr)
-> $$ = nterm primary_expression (17.3-5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.3-5: )
-> $$ = nterm postfix_expression (17.3-5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (17.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.3-5: )
-> $$ = nterm unary_expression (17.3-5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (17.7: )
Shifting token '=' (17.7: )
Entering state 90
Reading a token: Next token is token '&' (17.9: )
Shifting token '&' (17.9: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (17.9: )
-> $$ = nterm unary_operator (17.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (17.10-16: persons)
Shifting token IDENTIFIER (17.10-16: persons)
Entering state 71
Reading a token: Next token is token '[' (17.17: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (17.10-16: persons)
-> $$ = nterm primary_expression (17.10-16: )
Stack now 60 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.10-16: )
-> $$ = nterm postfix_expression (17.10-16: )
Stack now 60 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '[' (17.17: )
Shifting token '[' (17.17: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (17.18: 0)
Shifting token INT_CONSTANT (17.18: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (17.18: 0)
-> $$ = nterm primary_expression (17.18: )
Stack now 91 58 60 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.18: )
-> $$ = nterm postfix_expression (17.18: )
Stack now 91 58 60 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ']' (17.19: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.18: )
-> $$ = nterm unary_expression (17.18: )
Stack now 91 58 60 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (17.18: )
-> $$ = nterm multiplicative_expression (17.18: )
Stack now 91 58 60 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (17.19: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (17.18: )
-> $$ = nterm additive_expression (17.18: )
Stack now 91 58 60 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (17.19: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (17.18: )
-> $$ = nterm relational_expression (17.18: )
Stack now 91 58 60 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (17.19: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (17.18: )
-> $$ = nterm equality_expression (17.18: )
Stack now 91 58 60 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (17.19: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (17.18: )
-> $$ = nterm logical_and_expression (17.18: )
Stack now 91 58 60 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (17.19: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (17.18: )
-> $$ = nterm expression (17.18: )
Stack now 91 58 60 90 57 86 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (17.19: )
Shifting token ']' (17.19: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (17.10-16: )
   $2 = token '[' (17.17: )
   $3 = nterm expression (17.18: )
   $4 = token ']' (17.19: )
-> $$ = nterm postfix_expression (17.10-19: )
Stack now 60 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (17.20: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.10-19: )
-> $$ = nterm unary_expression (17.10-19: )
Stack now 60 90 57 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (17.9: )
   $2 = nterm unary_expression (17.10-19: )
-> $$ = nterm unary_expression (17.9-19: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (17.9-19: )
-> $$ = nterm multiplicative_expression (17.9-19: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (17.20: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (17.9-19: )
-> $$ = nterm additive_expression (17.9-19: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (17.20: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (17.9-19: )
-> $$ = nterm relational_expression (17.9-19: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (17.20: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (17.9-19: )
-> $$ = nterm equality_expression (17.9-19: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (17.20: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (17.9-19: )
-> $$ = nterm logical_and_expression (17.9-19: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (17.20: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (17.9-19: )
-> $$ = nterm expression (17.9-19: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (17.20: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (17.3-5: )
   $2 = token '=' (17.7: )
   $3 = nterm expression (17.9-19: )
-> $$ = nterm assignment_expression (17.3-19: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (17.20: )
Shifting token ';' (17.20: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (17.3-19: )
   $2 = token ';' (17.20: )
-> $$ = nterm assignment_statement (17.3-20: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (17.3-20: )
-> $$ = nterm statement (17.3-20: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (15.3-16.18: )
   $2 = nterm statement (17.3-20: )
-> $$ = nterm statement_list (15.3-17.20: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token FOR (20.3-5: )
Shifting token FOR (20.3-5: )
Entering state 38
Reading a token: Next token is token '(' (20.6: )
Shifting token '(' (20.6: )
Entering state 80
Reading a token: Next token is token IDENTIFIER (20.7: i)
Shifting token IDENTIFIER (20.7: i)
Entering state 71
Reading a token: Next token is token '=' (20.9: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (20.7: i)
-> $$ = nterm primary_expression (20.7: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.7: )
-> $$ = nterm postfix_expression (20.7: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (20.9: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.7: )
-> $$ = nterm unary_expression (20.7: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (20.9: )
Shifting token '=' (20.9: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (20.11: 0)
Shifting token INT_CONSTANT (20.11: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (20.11: 0)
-> $$ = nterm primary_expression (20.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.11: )
-> $$ = nterm postfix_expression (20.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (20.12: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.11: )
-> $$ = nterm unary_expression (20.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (20.11: )
-> $$ = nterm multiplicative_expression (20.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (20.12: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (20.11: )
-> $$ = nterm additive_expression (20.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (20.12: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (20.11: )
-> $$ = nterm relational_expression (20.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (20.12: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (20.11: )
-> $$ = nterm equality_expression (20.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (20.12: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (20.11: )
-> $$ = nterm logical_and_expression (20.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (20.12: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (20.11: )
-> $$ = nterm expression (20.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (20.12: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (20.7: )
   $2 = token '=' (20.9: )
   $3 = nterm expression (20.11: )
-> $$ = nterm assignment_expression (20.7-11: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 115
Next token is token ';' (20.12: )
Shifting token ';' (20.12: )
Entering state 144
Reading a token: Next token is token IDENTIFIER (20.14: i)
Shifting token IDENTIFIER (20.14: i)
Entering state 71
Reading a token: Next token is token '<' (20.16: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (20.14: i)
-> $$ = nterm primary_expression (20.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.14: )
-> $$ = nterm postfix_expression (20.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '<' (20.16: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.14: )
-> $$ = nterm unary_expression (20.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (20.14: )
-> $$ = nterm multiplicative_expression (20.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '<' (20.16: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (20.14: )
-> $$ = nterm additive_expression (20.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '<' (20.16: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (20.14: )
-> $$ = nterm relational_expression (20.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token '<' (20.16: )
Shifting token '<' (20.16: )
Entering state 106
Reading a token: Next token is token IDENTIFIER (20.18: n)
Shifting token IDENTIFIER (20.18: n)
Entering state 71
Reading a token: Next token is token ';' (20.19: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (20.18: n)
-> $$ = nterm primary_expression (20.18: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.18: )
-> $$ = nterm postfix_expression (20.18: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (20.19: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.18: )
-> $$ = nterm unary_expression (20.18: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (20.18: )
-> $$ = nterm multiplicative_expression (20.18: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (20.19: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (20.18: )
-> $$ = nterm additive_expression (20.18: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 135
Next token is token ';' (20.19: )
Reducing stack by rule 52 (line 779):
   $1 = nterm relational_expression (20.14: )
   $2 = token '<' (20.16: )
   $3 = nterm additive_expression (20.18: )
-> $$ = nterm relational_expression (20.14-18: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (20.19: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (20.14-18: )
-> $$ = nterm equality_expression (20.14-18: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (20.19: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (20.14-18: )
-> $$ = nterm logical_and_expression (20.14-18: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (20.19: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (20.14-18: )
-> $$ = nterm expression (20.14-18: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 152
Next token is token ';' (20.19: )
Shifting token ';' (20.19: )
Entering state 156
Reading a token: Next token is token IDENTIFIER (20.21: i)
Shifting token IDENTIFIER (20.21: i)
Entering state 71
Reading a token: Next token is token '=' (20.23: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (20.21: i)
-> $$ = nterm primary_expression (20.21: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.21: )
-> $$ = nterm postfix_expression (20.21: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (20.23: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.21: )
-> $$ = nterm unary_expression (20.21: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (20.23: )
Shifting token '=' (20.23: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (20.25: i)
Shifting token IDENTIFIER (20.25: i)
Entering state 71
Reading a token: Next token is token '+' (20.27: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (20.25: i)
-> $$ = nterm primary_expression (20.25: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.25: )
-> $$ = nterm postfix_expression (20.25: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (20.27: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.25: )
-> $$ = nterm unary_expression (20.25: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (20.25: )
-> $$ = nterm multiplicative_expression (20.25: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (20.27: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (20.25: )
-> $$ = nterm additive_expression (20.25: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (20.27: )
Shifting token '+' (20.27: )
Entering state 110
Reading a token: Next token is token INT_CONSTANT (20.29: 1)
Shifting token INT_CONSTANT (20.29: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (20.29: 1)
-> $$ = nterm primary_expression (20.29: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.29: )
-> $$ = nterm postfix_expression (20.29: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (20.30: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.29: )
-> $$ = nterm unary_expression (20.29: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (20.29: )
-> $$ = nterm multiplicative_expression (20.29: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ')' (20.30: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (20.25: )
   $2 = token '+' (20.27: )
   $3 = nterm multiplicative_expression (20.29: )
-> $$ = nterm additive_expression (20.25-29: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (20.30: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (20.25-29: )
-> $$ = nterm relational_expression (20.25-29: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (20.30: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (20.25-29: )
-> $$ = nterm equality_expression (20.25-29: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (20.30: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (20.25-29: )
-> $$ = nterm logical_and_expression (20.25-29: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (20.30: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (20.25-29: )
-> $$ = nterm expression (20.25-29: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ')' (20.30: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (20.21: )
   $2 = token '=' (20.23: )
   $3 = nterm expression (20.25-29: )
-> $$ = nterm assignment_expression (20.21-29: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 158
Next token is token ')' (20.30: )
Shifting token ')' (20.30: )
Entering state 160
Reading a token: Next token is token '{' (21.5: )
Shifting token '{' (21.5: )
Entering state 45
Reading a token: Next token is token IDENTIFIER (22.7-12: printf)
Shifting token IDENTIFIER (22.7-12: printf)
Entering state 40
Reading a token: Next token is token '(' (22.13: )
Shifting token '(' (22.13: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (22.14-63: "Enter person's Id, weight and age respectively: ")
Shifting token STRING_LITERAL (22.14-63: "Enter person's Id, weight and age respectively: ")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (22.14-63: "Enter person's Id, weight and age respectively: ")
-> $$ = nterm primary_expression (22.14-63: )
Stack now 82 40 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (22.14-63: )
-> $$ = nterm postfix_expression (22.14-63: )
Stack now 82 40 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (22.64: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (22.14-63: )
-> $$ = nterm unary_expression (22.14-63: )
Stack now 82 40 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (22.14-63: )
-> $$ = nterm multiplicative_expression (22.14-63: )
Stack now 82 40 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (22.64: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (22.14-63: )
-> $$ = nterm additive_expression (22.14-63: )
Stack now 82 40 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (22.64: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (22.14-63: )
-> $$ = nterm relational_expression (22.14-63: )
Stack now 82 40 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (22.64: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (22.14-63: )
-> $$ = nterm equality_expression (22.14-63: )
Stack now 82 40 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (22.64: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (22.14-63: )
-> $$ = nterm logical_and_expression (22.14-63: )
Stack now 82 40 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (22.64: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (22.14-63: )
-> $$ = nterm expression (22.14-63: )
Stack now 82 40 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ')' (22.64: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (22.14-63: )
-> $$ = nterm expression_list (22.14-63: )
Stack now 82 40 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (22.64: )
Shifting token ')' (22.64: )
Entering state 147
Reading a token: Next token is token ';' (22.65: )
Shifting token ';' (22.65: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (22.7-12: printf)
   $2 = token '(' (22.13: )
   $3 = nterm expression_list (22.14-63: )
   $4 = token ')' (22.64: )
   $5 = token ';' (22.65: )
-> $$ = nterm procedure_call (22.7-65: )
Stack now 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (22.7-65: )
-> $$ = nterm statement (22.7-65: )
Stack now 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (22.7-65: )
-> $$ = nterm statement_list (22.7-65: )
Stack now 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token IDENTIFIER (23.7-11: scanf)
Shifting token IDENTIFIER (23.7-11: scanf)
Entering state 40
Reading a token: Next token is token '(' (23.12: )
Shifting token '(' (23.12: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (23.13-22: "%d %f %d")
Shifting token STRING_LITERAL (23.13-22: "%d %f %d")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (23.13-22: "%d %f %d")
-> $$ = nterm primary_expression (23.13-22: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.13-22: )
-> $$ = nterm postfix_expression (23.13-22: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (23.23: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.13-22: )
-> $$ = nterm unary_expression (23.13-22: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.13-22: )
-> $$ = nterm multiplicative_expression (23.13-22: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (23.23: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.13-22: )
-> $$ = nterm additive_expression (23.13-22: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (23.23: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (23.13-22: )
-> $$ = nterm relational_expression (23.13-22: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (23.23: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (23.13-22: )
-> $$ = nterm equality_expression (23.13-22: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (23.23: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (23.13-22: )
-> $$ = nterm logical_and_expression (23.13-22: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (23.23: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (23.13-22: )
-> $$ = nterm expression (23.13-22: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (23.23: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (23.13-22: )
-> $$ = nterm expression_list (23.13-22: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (23.23: )
Shifting token ',' (23.23: )
Entering state 148
Reading a token: Next token is token '&' (23.25: )
Shifting token '&' (23.25: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (23.25: )
-> $$ = nterm unary_operator (23.25: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token '(' (23.26: )
Shifting token '(' (23.26: )
Entering state 44
Reading a token: Next token is token IDENTIFIER (23.27-29: ptr)
Shifting token IDENTIFIER (23.27-29: ptr)
Entering state 71
Reading a token: Next token is token '+' (23.30: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (23.27-29: ptr)
-> $$ = nterm primary_expression (23.27-29: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.27-29: )
-> $$ = nterm postfix_expression (23.27-29: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (23.30: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.27-29: )
-> $$ = nterm unary_expression (23.27-29: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.27-29: )
-> $$ = nterm multiplicative_expression (23.27-29: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (23.30: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.27-29: )
-> $$ = nterm additive_expression (23.27-29: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (23.30: )
Shifting token '+' (23.30: )
Entering state 110
Reading a token: Next token is token IDENTIFIER (23.31: i)
Shifting token IDENTIFIER (23.31: i)
Entering state 71
Reading a token: Next token is token ')' (23.32: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (23.31: i)
-> $$ = nterm primary_expression (23.31: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.31: )
-> $$ = nterm postfix_expression (23.31: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (23.32: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.31: )
-> $$ = nterm unary_expression (23.31: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.31: )
-> $$ = nterm multiplicative_expression (23.31: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ')' (23.32: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (23.27-29: )
   $2 = token '+' (23.30: )
   $3 = nterm multiplicative_expression (23.31: )
-> $$ = nterm additive_expression (23.27-31: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (23.32: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (23.27-31: )
-> $$ = nterm relational_expression (23.27-31: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (23.32: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (23.27-31: )
-> $$ = nterm equality_expression (23.27-31: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (23.32: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (23.27-31: )
-> $$ = nterm logical_and_expression (23.27-31: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (23.32: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (23.27-31: )
-> $$ = nterm expression (23.27-31: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (23.32: )
Shifting token ')' (23.32: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (23.26: )
   $2 = nterm expression (23.27-31: )
   $3 = token ')' (23.32: )
-> $$ = nterm primary_expression (23.26-32: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.26-32: )
-> $$ = nterm postfix_expression (23.26-32: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token PTR_OP (23.33-34: )
Shifting token PTR_OP (23.33-34: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (23.35-36: id)
Shifting token IDENTIFIER (23.35-36: id)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (23.26-32: )
   $2 = token PTR_OP (23.33-34: )
   $3 = token IDENTIFIER (23.35-36: id)
-> $$ = nterm postfix_expression (23.26-36: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (23.37: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.26-36: )
-> $$ = nterm unary_expression (23.26-36: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (23.25: )
   $2 = nterm unary_expression (23.26-36: )
-> $$ = nterm unary_expression (23.25-36: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.25-36: )
-> $$ = nterm multiplicative_expression (23.25-36: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (23.37: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.25-36: )
-> $$ = nterm additive_expression (23.25-36: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (23.37: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (23.25-36: )
-> $$ = nterm relational_expression (23.25-36: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (23.37: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (23.25-36: )
-> $$ = nterm equality_expression (23.25-36: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (23.37: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (23.25-36: )
-> $$ = nterm logical_and_expression (23.25-36: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (23.37: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (23.25-36: )
-> $$ = nterm expression (23.25-36: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (23.37: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (23.13-22: )
   $2 = token ',' (23.23: )
   $3 = nterm expression (23.25-36: )
-> $$ = nterm expression_list (23.13-36: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (23.37: )
Shifting token ',' (23.37: )
Entering state 148
Reading a token: Next token is token '&' (23.39: )
Shifting token '&' (23.39: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (23.39: )
-> $$ = nterm unary_operator (23.39: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token '(' (23.40: )
Shifting token '(' (23.40: )
Entering state 44
Reading a token: Next token is token IDENTIFIER (23.41-43: ptr)
Shifting token IDENTIFIER (23.41-43: ptr)
Entering state 71
Reading a token: Next token is token '+' (23.44: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (23.41-43: ptr)
-> $$ = nterm primary_expression (23.41-43: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.41-43: )
-> $$ = nterm postfix_expression (23.41-43: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (23.44: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.41-43: )
-> $$ = nterm unary_expression (23.41-43: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.41-43: )
-> $$ = nterm multiplicative_expression (23.41-43: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (23.44: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.41-43: )
-> $$ = nterm additive_expression (23.41-43: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (23.44: )
Shifting token '+' (23.44: )
Entering state 110
Reading a token: Next token is token IDENTIFIER (23.45: i)
Shifting token IDENTIFIER (23.45: i)
Entering state 71
Reading a token: Next token is token ')' (23.46: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (23.45: i)
-> $$ = nterm primary_expression (23.45: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.45: )
-> $$ = nterm postfix_expression (23.45: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (23.46: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.45: )
-> $$ = nterm unary_expression (23.45: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.45: )
-> $$ = nterm multiplicative_expression (23.45: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ')' (23.46: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (23.41-43: )
   $2 = token '+' (23.44: )
   $3 = nterm multiplicative_expression (23.45: )
-> $$ = nterm additive_expression (23.41-45: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (23.46: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (23.41-45: )
-> $$ = nterm relational_expression (23.41-45: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (23.46: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (23.41-45: )
-> $$ = nterm equality_expression (23.41-45: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (23.46: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (23.41-45: )
-> $$ = nterm logical_and_expression (23.41-45: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (23.46: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (23.41-45: )
-> $$ = nterm expression (23.41-45: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (23.46: )
Shifting token ')' (23.46: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (23.40: )
   $2 = nterm expression (23.41-45: )
   $3 = token ')' (23.46: )
-> $$ = nterm primary_expression (23.40-46: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.40-46: )
-> $$ = nterm postfix_expression (23.40-46: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token PTR_OP (23.47-48: )
Shifting token PTR_OP (23.47-48: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (23.49-54: weight)
Shifting token IDENTIFIER (23.49-54: weight)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (23.40-46: )
   $2 = token PTR_OP (23.47-48: )
   $3 = token IDENTIFIER (23.49-54: weight)
-> $$ = nterm postfix_expression (23.40-54: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (23.55: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.40-54: )
-> $$ = nterm unary_expression (23.40-54: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (23.39: )
   $2 = nterm unary_expression (23.40-54: )
-> $$ = nterm unary_expression (23.39-54: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.39-54: )
-> $$ = nterm multiplicative_expression (23.39-54: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (23.55: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.39-54: )
-> $$ = nterm additive_expression (23.39-54: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (23.55: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (23.39-54: )
-> $$ = nterm relational_expression (23.39-54: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (23.55: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (23.39-54: )
-> $$ = nterm equality_expression (23.39-54: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (23.55: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (23.39-54: )
-> $$ = nterm logical_and_expression (23.39-54: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (23.55: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (23.39-54: )
-> $$ = nterm expression (23.39-54: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (23.55: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (23.13-36: )
   $2 = token ',' (23.37: )
   $3 = nterm expression (23.39-54: )
-> $$ = nterm expression_list (23.13-54: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (23.55: )
Shifting token ',' (23.55: )
Entering state 148
Reading a token: Next token is token '&' (23.57: )
Shifting token '&' (23.57: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (23.57: )
-> $$ = nterm unary_operator (23.57: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token '(' (23.58: )
Shifting token '(' (23.58: )
Entering state 44
Reading a token: Next token is token IDENTIFIER (23.59-61: ptr)
Shifting token IDENTIFIER (23.59-61: ptr)
Entering state 71
Reading a token: Next token is token '+' (23.62: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (23.59-61: ptr)
-> $$ = nterm primary_expression (23.59-61: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.59-61: )
-> $$ = nterm postfix_expression (23.59-61: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (23.62: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.59-61: )
-> $$ = nterm unary_expression (23.59-61: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.59-61: )
-> $$ = nterm multiplicative_expression (23.59-61: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (23.62: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.59-61: )
-> $$ = nterm additive_expression (23.59-61: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (23.62: )
Shifting token '+' (23.62: )
Entering state 110
Reading a token: Next token is token IDENTIFIER (23.63: i)
Shifting token IDENTIFIER (23.63: i)
Entering state 71
Reading a token: Next token is token ')' (23.64: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (23.63: i)
-> $$ = nterm primary_expression (23.63: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.63: )
-> $$ = nterm postfix_expression (23.63: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (23.64: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.63: )
-> $$ = nterm unary_expression (23.63: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.63: )
-> $$ = nterm multiplicative_expression (23.63: )
Stack now 110 76 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ')' (23.64: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (23.59-61: )
   $2 = token '+' (23.62: )
   $3 = nterm multiplicative_expression (23.63: )
-> $$ = nterm additive_expression (23.59-63: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (23.64: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (23.59-63: )
-> $$ = nterm relational_expression (23.59-63: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (23.64: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (23.59-63: )
-> $$ = nterm equality_expression (23.59-63: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (23.64: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (23.59-63: )
-> $$ = nterm logical_and_expression (23.59-63: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (23.64: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (23.59-63: )
-> $$ = nterm expression (23.59-63: )
Stack now 44 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (23.64: )
Shifting token ')' (23.64: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (23.58: )
   $2 = nterm expression (23.59-63: )
   $3 = token ')' (23.64: )
-> $$ = nterm primary_expression (23.58-64: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.58-64: )
-> $$ = nterm postfix_expression (23.58-64: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token PTR_OP (23.65-66: )
Shifting token PTR_OP (23.65-66: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (23.67-69: age)
Shifting token IDENTIFIER (23.67-69: age)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (23.58-64: )
   $2 = token PTR_OP (23.65-66: )
   $3 = token IDENTIFIER (23.67-69: age)
-> $$ = nterm postfix_expression (23.58-69: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (23.70: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.58-69: )
-> $$ = nterm unary_expression (23.58-69: )
Stack now 60 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (23.57: )
   $2 = nterm unary_expression (23.58-69: )
-> $$ = nterm unary_expression (23.57-69: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.57-69: )
-> $$ = nterm multiplicative_expression (23.57-69: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (23.70: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.57-69: )
-> $$ = nterm additive_expression (23.57-69: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (23.70: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (23.57-69: )
-> $$ = nterm relational_expression (23.57-69: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (23.70: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (23.57-69: )
-> $$ = nterm equality_expression (23.57-69: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (23.70: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (23.57-69: )
-> $$ = nterm logical_and_expression (23.57-69: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (23.70: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (23.57-69: )
-> $$ = nterm expression (23.57-69: )
Stack now 148 119 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (23.70: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (23.13-54: )
   $2 = token ',' (23.55: )
   $3 = nterm expression (23.57-69: )
-> $$ = nterm expression_list (23.13-69: )
Stack now 82 40 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (23.70: )
Shifting token ')' (23.70: )
Entering state 147
Reading a token: Next token is token ';' (23.71: )
Shifting token ';' (23.71: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (23.7-11: scanf)
   $2 = token '(' (23.12: )
   $3 = nterm expression_list (23.13-69: )
   $4 = token ')' (23.70: )
   $5 = token ';' (23.71: )
-> $$ = nterm procedure_call (23.7-71: )
Stack now 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (23.7-71: )
-> $$ = nterm statement (23.7-71: )
Stack now 84 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (22.7-65: )
   $2 = nterm statement (23.7-71: )
-> $$ = nterm statement_list (22.7-23.71: )
Stack now 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (24.5: )
Shifting token '}' (24.5: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (21.5: )
   $2 = nterm statement_list (22.7-23.71: )
   $3 = token '}' (24.5: )
-> $$ = nterm statement (21.5-24.5: )
Stack now 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 161
Reducing stack by rule 84 (line 1432):
   $1 = token FOR (20.3-5: )
   $2 = token '(' (20.6: )
   $3 = nterm assignment_expression (20.7-11: )
   $4 = token ';' (20.12: )
   $5 = nterm expression (20.14-18: )
   $6 = token ';' (20.19: )
   $7 = nterm assignment_expression (20.21-29: )
   $8 = token ')' (20.30: )
   $9 = nterm statement (21.5-24.5: )
-> $$ = nterm iteration_statement (20.3-24.5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 63
Reducing stack by rule 36 (line 466):
   $1 = nterm iteration_statement (20.3-24.5: )
-> $$ = nterm statement (20.3-24.5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (15.3-17.20: )
   $2 = nterm statement (20.3-24.5: )
-> $$ = nterm statement_list (15.3-24.5: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (26.3-8: printf)
Shifting token IDENTIFIER (26.3-8: printf)
Entering state 40
Reading a token: Next token is token '(' (26.9: )
Shifting token '(' (26.9: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (26.10-36: "Displaying Information:\n")
Shifting token STRING_LITERAL (26.10-36: "Displaying Information:\n")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (26.10-36: "Displaying Information:\n")
-> $$ = nterm primary_expression (26.10-36: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (26.10-36: )
-> $$ = nterm postfix_expression (26.10-36: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (26.37: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (26.10-36: )
-> $$ = nterm unary_expression (26.10-36: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (26.10-36: )
-> $$ = nterm multiplicative_expression (26.10-36: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (26.37: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (26.10-36: )
-> $$ = nterm additive_expression (26.10-36: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (26.37: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (26.10-36: )
-> $$ = nterm relational_expression (26.10-36: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (26.37: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (26.10-36: )
-> $$ = nterm equality_expression (26.10-36: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (26.37: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (26.10-36: )
-> $$ = nterm logical_and_expression (26.10-36: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (26.37: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (26.10-36: )
-> $$ = nterm expression (26.10-36: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ')' (26.37: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (26.10-36: )
-> $$ = nterm expression_list (26.10-36: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (26.37: )
Shifting token ')' (26.37: )
Entering state 147
Reading a token: Next token is token ';' (26.38: )
Shifting token ';' (26.38: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (26.3-8: printf)
   $2 = token '(' (26.9: )
   $3 = nterm expression_list (26.10-36: )
   $4 = token ')' (26.37: )
   $5 = token ';' (26.38: )
-> $$ = nterm procedure_call (26.3-38: )
Stack now 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (26.3-38: )
-> $$ = nterm statement (26.3-38: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (15.3-24.5: )
   $2 = nterm statement (26.3-38: )
-> $$ = nterm statement_list (15.3-26.38: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token FOR (27.3-5: )
Shifting token FOR (27.3-5: )
Entering state 38
Reading a token: Next token is token '(' (27.6: )
Shifting token '(' (27.6: )
Entering state 80
Reading a token: Next token is token IDENTIFIER (27.7: i)
Shifting token IDENTIFIER (27.7: i)
Entering state 71
Reading a token: Next token is token '=' (27.9: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (27.7: i)
-> $$ = nterm primary_expression (27.7: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.7: )
-> $$ = nterm postfix_expression (27.7: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (27.9: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.7: )
-> $$ = nterm unary_expression (27.7: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (27.9: )
Shifting token '=' (27.9: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (27.11: 0)
Shifting token INT_CONSTANT (27.11: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (27.11: 0)
-> $$ = nterm primary_expression (27.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.11: )
-> $$ = nterm postfix_expression (27.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (27.12: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.11: )
-> $$ = nterm unary_expression (27.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (27.11: )
-> $$ = nterm multiplicative_expression (27.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (27.12: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (27.11: )
-> $$ = nterm additive_expression (27.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (27.12: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (27.11: )
-> $$ = nterm relational_expression (27.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (27.12: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (27.11: )
-> $$ = nterm equality_expression (27.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (27.12: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (27.11: )
-> $$ = nterm logical_and_expression (27.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (27.12: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (27.11: )
-> $$ = nterm expression (27.11: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (27.12: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (27.7: )
   $2 = token '=' (27.9: )
   $3 = nterm expression (27.11: )
-> $$ = nterm assignment_expression (27.7-11: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 115
Next token is token ';' (27.12: )
Shifting token ';' (27.12: )
Entering state 144
Reading a token: Next token is token IDENTIFIER (27.14: i)
Shifting token IDENTIFIER (27.14: i)
Entering state 71
Reading a token: Next token is token '<' (27.16: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (27.14: i)
-> $$ = nterm primary_expression (27.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.14: )
-> $$ = nterm postfix_expression (27.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '<' (27.16: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.14: )
-> $$ = nterm unary_expression (27.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (27.14: )
-> $$ = nterm multiplicative_expression (27.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '<' (27.16: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (27.14: )
-> $$ = nterm additive_expression (27.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '<' (27.16: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (27.14: )
-> $$ = nterm relational_expression (27.14: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token '<' (27.16: )
Shifting token '<' (27.16: )
Entering state 106
Reading a token: Next token is token IDENTIFIER (27.18: n)
Shifting token IDENTIFIER (27.18: n)
Entering state 71
Reading a token: Next token is token ';' (27.19: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (27.18: n)
-> $$ = nterm primary_expression (27.18: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.18: )
-> $$ = nterm postfix_expression (27.18: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (27.19: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.18: )
-> $$ = nterm unary_expression (27.18: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (27.18: )
-> $$ = nterm multiplicative_expression (27.18: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (27.19: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (27.18: )
-> $$ = nterm additive_expression (27.18: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 135
Next token is token ';' (27.19: )
Reducing stack by rule 52 (line 779):
   $1 = nterm relational_expression (27.14: )
   $2 = token '<' (27.16: )
   $3 = nterm additive_expression (27.18: )
-> $$ = nterm relational_expression (27.14-18: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (27.19: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (27.14-18: )
-> $$ = nterm equality_expression (27.14-18: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (27.19: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (27.14-18: )
-> $$ = nterm logical_and_expression (27.14-18: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (27.19: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (27.14-18: )
-> $$ = nterm expression (27.14-18: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 152
Next token is token ';' (27.19: )
Shifting token ';' (27.19: )
Entering state 156
Reading a token: Next token is token IDENTIFIER (27.21: i)
Shifting token IDENTIFIER (27.21: i)
Entering state 71
Reading a token: Next token is token '=' (27.22: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (27.21: i)
-> $$ = nterm primary_expression (27.21: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.21: )
-> $$ = nterm postfix_expression (27.21: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (27.22: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.21: )
-> $$ = nterm unary_expression (27.21: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (27.22: )
Shifting token '=' (27.22: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (27.23: i)
Shifting token IDENTIFIER (27.23: i)
Entering state 71
Reading a token: Next token is token '+' (27.24: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (27.23: i)
-> $$ = nterm primary_expression (27.23: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.23: )
-> $$ = nterm postfix_expression (27.23: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (27.24: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.23: )
-> $$ = nterm unary_expression (27.23: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (27.23: )
-> $$ = nterm multiplicative_expression (27.23: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (27.24: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (27.23: )
-> $$ = nterm additive_expression (27.23: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (27.24: )
Shifting token '+' (27.24: )
Entering state 110
Reading a token: Next token is token INT_CONSTANT (27.25: 1)
Shifting token INT_CONSTANT (27.25: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (27.25: 1)
-> $$ = nterm primary_expression (27.25: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.25: )
-> $$ = nterm postfix_expression (27.25: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (27.26: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.25: )
-> $$ = nterm unary_expression (27.25: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (27.25: )
-> $$ = nterm multiplicative_expression (27.25: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ')' (27.26: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (27.23: )
   $2 = token '+' (27.24: )
   $3 = nterm multiplicative_expression (27.25: )
-> $$ = nterm additive_expression (27.23-25: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (27.26: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (27.23-25: )
-> $$ = nterm relational_expression (27.23-25: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (27.26: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (27.23-25: )
-> $$ = nterm equality_expression (27.23-25: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (27.26: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (27.23-25: )
-> $$ = nterm logical_and_expression (27.23-25: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (27.26: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (27.23-25: )
-> $$ = nterm expression (27.23-25: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ')' (27.26: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (27.21: )
   $2 = token '=' (27.22: )
   $3 = nterm expression (27.23-25: )
-> $$ = nterm assignment_expression (27.21-25: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 158
Next token is token ')' (27.26: )
Shifting token ')' (27.26: )
Entering state 160
Reading a token: Next token is token IDENTIFIER (28.5-10: printf)
Shifting token IDENTIFIER (28.5-10: printf)
Entering state 40
Reading a token: Next token is token '(' (28.11: )
Shifting token '(' (28.11: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (28.12-42: "Id: %d\tWeight: %f\tAge: %d\n")
Shifting token STRING_LITERAL (28.12-42: "Id: %d\tWeight: %f\tAge: %d\n")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (28.12-42: "Id: %d\tWeight: %f\tAge: %d\n")
-> $$ = nterm primary_expression (28.12-42: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.12-42: )
-> $$ = nterm postfix_expression (28.12-42: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (28.43: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.12-42: )
-> $$ = nterm unary_expression (28.12-42: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.12-42: )
-> $$ = nterm multiplicative_expression (28.12-42: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (28.43: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (28.12-42: )
-> $$ = nterm additive_expression (28.12-42: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (28.43: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (28.12-42: )
-> $$ = nterm relational_expression (28.12-42: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (28.43: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (28.12-42: )
-> $$ = nterm equality_expression (28.12-42: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (28.43: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (28.12-42: )
-> $$ = nterm logical_and_expression (28.12-42: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (28.43: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (28.12-42: )
-> $$ = nterm expression (28.12-42: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (28.43: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (28.12-42: )
-> $$ = nterm expression_list (28.12-42: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (28.43: )
Shifting token ',' (28.43: )
Entering state 148
Reading a token: Next token is token '(' (28.45: )
Shifting token '(' (28.45: )
Entering state 44
Reading a token: Next token is token IDENTIFIER (28.46-48: ptr)
Shifting token IDENTIFIER (28.46-48: ptr)
Entering state 71
Reading a token: Next token is token '+' (28.49: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (28.46-48: ptr)
-> $$ = nterm primary_expression (28.46-48: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.46-48: )
-> $$ = nterm postfix_expression (28.46-48: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (28.49: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.46-48: )
-> $$ = nterm unary_expression (28.46-48: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.46-48: )
-> $$ = nterm multiplicative_expression (28.46-48: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (28.49: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (28.46-48: )
-> $$ = nterm additive_expression (28.46-48: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (28.49: )
Shifting token '+' (28.49: )
Entering state 110
Reading a token: Next token is token IDENTIFIER (28.50: i)
Shifting token IDENTIFIER (28.50: i)
Entering state 71
Reading a token: Next token is token ')' (28.51: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (28.50: i)
-> $$ = nterm primary_expression (28.50: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.50: )
-> $$ = nterm postfix_expression (28.50: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (28.51: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.50: )
-> $$ = nterm unary_expression (28.50: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.50: )
-> $$ = nterm multiplicative_expression (28.50: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ')' (28.51: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (28.46-48: )
   $2 = token '+' (28.49: )
   $3 = nterm multiplicative_expression (28.50: )
-> $$ = nterm additive_expression (28.46-50: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (28.51: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (28.46-50: )
-> $$ = nterm relational_expression (28.46-50: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (28.51: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (28.46-50: )
-> $$ = nterm equality_expression (28.46-50: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (28.51: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (28.46-50: )
-> $$ = nterm logical_and_expression (28.46-50: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (28.51: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (28.46-50: )
-> $$ = nterm expression (28.46-50: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (28.51: )
Shifting token ')' (28.51: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (28.45: )
   $2 = nterm expression (28.46-50: )
   $3 = token ')' (28.51: )
-> $$ = nterm primary_expression (28.45-51: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.45-51: )
-> $$ = nterm postfix_expression (28.45-51: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token PTR_OP (28.52-53: )
Shifting token PTR_OP (28.52-53: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (28.54-55: id)
Shifting token IDENTIFIER (28.54-55: id)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (28.45-51: )
   $2 = token PTR_OP (28.52-53: )
   $3 = token IDENTIFIER (28.54-55: id)
-> $$ = nterm postfix_expression (28.45-55: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (28.56: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.45-55: )
-> $$ = nterm unary_expression (28.45-55: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.45-55: )
-> $$ = nterm multiplicative_expression (28.45-55: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (28.56: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (28.45-55: )
-> $$ = nterm additive_expression (28.45-55: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (28.56: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (28.45-55: )
-> $$ = nterm relational_expression (28.45-55: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (28.56: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (28.45-55: )
-> $$ = nterm equality_expression (28.45-55: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (28.56: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (28.45-55: )
-> $$ = nterm logical_and_expression (28.45-55: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (28.56: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (28.45-55: )
-> $$ = nterm expression (28.45-55: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (28.56: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (28.12-42: )
   $2 = token ',' (28.43: )
   $3 = nterm expression (28.45-55: )
-> $$ = nterm expression_list (28.12-55: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (28.56: )
Shifting token ',' (28.56: )
Entering state 148
Reading a token: Next token is token '(' (28.58: )
Shifting token '(' (28.58: )
Entering state 44
Reading a token: Next token is token IDENTIFIER (28.59-61: ptr)
Shifting token IDENTIFIER (28.59-61: ptr)
Entering state 71
Reading a token: Next token is token '+' (28.62: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (28.59-61: ptr)
-> $$ = nterm primary_expression (28.59-61: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.59-61: )
-> $$ = nterm postfix_expression (28.59-61: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (28.62: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.59-61: )
-> $$ = nterm unary_expression (28.59-61: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.59-61: )
-> $$ = nterm multiplicative_expression (28.59-61: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (28.62: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (28.59-61: )
-> $$ = nterm additive_expression (28.59-61: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (28.62: )
Shifting token '+' (28.62: )
Entering state 110
Reading a token: Next token is token IDENTIFIER (28.63: i)
Shifting token IDENTIFIER (28.63: i)
Entering state 71
Reading a token: Next token is token ')' (28.64: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (28.63: i)
-> $$ = nterm primary_expression (28.63: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.63: )
-> $$ = nterm postfix_expression (28.63: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (28.64: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.63: )
-> $$ = nterm unary_expression (28.63: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.63: )
-> $$ = nterm multiplicative_expression (28.63: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ')' (28.64: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (28.59-61: )
   $2 = token '+' (28.62: )
   $3 = nterm multiplicative_expression (28.63: )
-> $$ = nterm additive_expression (28.59-63: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (28.64: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (28.59-63: )
-> $$ = nterm relational_expression (28.59-63: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (28.64: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (28.59-63: )
-> $$ = nterm equality_expression (28.59-63: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (28.64: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (28.59-63: )
-> $$ = nterm logical_and_expression (28.59-63: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (28.64: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (28.59-63: )
-> $$ = nterm expression (28.59-63: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (28.64: )
Shifting token ')' (28.64: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (28.58: )
   $2 = nterm expression (28.59-63: )
   $3 = token ')' (28.64: )
-> $$ = nterm primary_expression (28.58-64: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.58-64: )
-> $$ = nterm postfix_expression (28.58-64: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token PTR_OP (28.65-66: )
Shifting token PTR_OP (28.65-66: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (28.67-72: weight)
Shifting token IDENTIFIER (28.67-72: weight)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (28.58-64: )
   $2 = token PTR_OP (28.65-66: )
   $3 = token IDENTIFIER (28.67-72: weight)
-> $$ = nterm postfix_expression (28.58-72: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (28.73: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.58-72: )
-> $$ = nterm unary_expression (28.58-72: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.58-72: )
-> $$ = nterm multiplicative_expression (28.58-72: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (28.73: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (28.58-72: )
-> $$ = nterm additive_expression (28.58-72: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (28.73: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (28.58-72: )
-> $$ = nterm relational_expression (28.58-72: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (28.73: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (28.58-72: )
-> $$ = nterm equality_expression (28.58-72: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (28.73: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (28.58-72: )
-> $$ = nterm logical_and_expression (28.58-72: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (28.73: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (28.58-72: )
-> $$ = nterm expression (28.58-72: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (28.73: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (28.12-55: )
   $2 = token ',' (28.56: )
   $3 = nterm expression (28.58-72: )
-> $$ = nterm expression_list (28.12-72: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (28.73: )
Shifting token ',' (28.73: )
Entering state 148
Reading a token: Next token is token '(' (28.75: )
Shifting token '(' (28.75: )
Entering state 44
Reading a token: Next token is token IDENTIFIER (28.76-78: ptr)
Shifting token IDENTIFIER (28.76-78: ptr)
Entering state 71
Reading a token: Next token is token '+' (28.79: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (28.76-78: ptr)
-> $$ = nterm primary_expression (28.76-78: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.76-78: )
-> $$ = nterm postfix_expression (28.76-78: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (28.79: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.76-78: )
-> $$ = nterm unary_expression (28.76-78: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.76-78: )
-> $$ = nterm multiplicative_expression (28.76-78: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (28.79: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (28.76-78: )
-> $$ = nterm additive_expression (28.76-78: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (28.79: )
Shifting token '+' (28.79: )
Entering state 110
Reading a token: Next token is token IDENTIFIER (28.80: i)
Shifting token IDENTIFIER (28.80: i)
Entering state 71
Reading a token: Next token is token ')' (28.81: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (28.80: i)
-> $$ = nterm primary_expression (28.80: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.80: )
-> $$ = nterm postfix_expression (28.80: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (28.81: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.80: )
-> $$ = nterm unary_expression (28.80: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.80: )
-> $$ = nterm multiplicative_expression (28.80: )
Stack now 110 76 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ')' (28.81: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (28.76-78: )
   $2 = token '+' (28.79: )
   $3 = nterm multiplicative_expression (28.80: )
-> $$ = nterm additive_expression (28.76-80: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (28.81: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (28.76-80: )
-> $$ = nterm relational_expression (28.76-80: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (28.81: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (28.76-80: )
-> $$ = nterm equality_expression (28.76-80: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (28.81: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (28.76-80: )
-> $$ = nterm logical_and_expression (28.76-80: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (28.81: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (28.76-80: )
-> $$ = nterm expression (28.76-80: )
Stack now 44 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (28.81: )
Shifting token ')' (28.81: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (28.75: )
   $2 = nterm expression (28.76-80: )
   $3 = token ')' (28.81: )
-> $$ = nterm primary_expression (28.75-81: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.75-81: )
-> $$ = nterm postfix_expression (28.75-81: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token PTR_OP (28.82-83: )
Shifting token PTR_OP (28.82-83: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (28.84-86: age)
Shifting token IDENTIFIER (28.84-86: age)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (28.75-81: )
   $2 = token PTR_OP (28.82-83: )
   $3 = token IDENTIFIER (28.84-86: age)
-> $$ = nterm postfix_expression (28.75-86: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (28.87: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.75-86: )
-> $$ = nterm unary_expression (28.75-86: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.75-86: )
-> $$ = nterm multiplicative_expression (28.75-86: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (28.87: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (28.75-86: )
-> $$ = nterm additive_expression (28.75-86: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (28.87: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (28.75-86: )
-> $$ = nterm relational_expression (28.75-86: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (28.87: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (28.75-86: )
-> $$ = nterm equality_expression (28.75-86: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (28.87: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (28.75-86: )
-> $$ = nterm logical_and_expression (28.75-86: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (28.87: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (28.75-86: )
-> $$ = nterm expression (28.75-86: )
Stack now 148 119 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (28.87: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (28.12-72: )
   $2 = token ',' (28.73: )
   $3 = nterm expression (28.75-86: )
-> $$ = nterm expression_list (28.12-86: )
Stack now 82 40 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (28.87: )
Shifting token ')' (28.87: )
Entering state 147
Reading a token: Next token is token ';' (28.88: )
Shifting token ';' (28.88: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (28.5-10: printf)
   $2 = token '(' (28.11: )
   $3 = nterm expression_list (28.12-86: )
   $4 = token ')' (28.87: )
   $5 = token ';' (28.88: )
-> $$ = nterm procedure_call (28.5-88: )
Stack now 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (28.5-88: )
-> $$ = nterm statement (28.5-88: )
Stack now 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 161
Reducing stack by rule 84 (line 1432):
   $1 = token FOR (27.3-5: )
   $2 = token '(' (27.6: )
   $3 = nterm assignment_expression (27.7-11: )
   $4 = token ';' (27.12: )
   $5 = nterm expression (27.14-18: )
   $6 = token ';' (27.19: )
   $7 = nterm assignment_expression (27.21-25: )
   $8 = token ')' (27.26: )
   $9 = nterm statement (28.5-88: )
-> $$ = nterm iteration_statement (27.3-28.88: )
Stack now 86 52 24 17 14 8 5 0
Entering state 63
Reducing stack by rule 36 (line 466):
   $1 = nterm iteration_statement (27.3-28.88: )
-> $$ = nterm statement (27.3-28.88: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (15.3-26.38: )
   $2 = nterm statement (27.3-28.88: )
-> $$ = nterm statement_list (15.3-28.88: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token RETURN (30.3-8: )
Shifting token RETURN (30.3-8: )
Entering state 36
Reading a token: Next token is token INT_CONSTANT (30.10: 0)
Shifting token INT_CONSTANT (30.10: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (30.10: 0)
-> $$ = nterm primary_expression (30.10: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (30.10: )
-> $$ = nterm postfix_expression (30.10: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (30.11: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (30.10: )
-> $$ = nterm unary_expression (30.10: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (30.10: )
-> $$ = nterm multiplicative_expression (30.10: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (30.11: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (30.10: )
-> $$ = nterm additive_expression (30.10: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (30.11: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (30.10: )
-> $$ = nterm relational_expression (30.10: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (30.11: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (30.10: )
-> $$ = nterm equality_expression (30.10: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (30.11: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (30.10: )
-> $$ = nterm logical_and_expression (30.10: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (30.11: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (30.10: )
-> $$ = nterm expression (30.10: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 72
Next token is token ';' (30.11: )
Shifting token ';' (30.11: )
Entering state 102
Reducing stack by rule 39 (line 477):
   $1 = token RETURN (30.3-8: )
   $2 = nterm expression (30.10: )
   $3 = token ';' (30.11: )
-> $$ = nterm statement (30.3-11: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (15.3-28.88: )
   $2 = nterm statement (30.3-11: )
-> $$ = nterm statement_list (15.3-30.11: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (35.1: )
Shifting token '}' (35.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (9.1: )
   $2 = nterm declaration_list (10.3-12.28: )
   $3 = nterm statement_list (15.3-30.11: )
   $4 = token '}' (35.1: )
-> $$ = nterm compound_statement (9.1-35.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (8.1-3: )
   $2 = nterm fun_declarator (8.5-10: )
   $3 = nterm $@2 (8.11: )
   $4 = nterm compound_statement (9.1-35.1: )
-> $$ = nterm function_definition (8.1-35.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (2.1-6.2: )
   $2 = nterm function_definition (8.1-35.1: )
-> $$ = nterm translation_unit (2.1-35.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token $end (35.2-36.0: )
Shifting token $end (35.2-36.0: )
Entering state 10
Cleanup: popping token $end (35.2-36.0: )
Cleanup: popping nterm translation_unit (2.1-35.1: )
