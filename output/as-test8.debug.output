Starting parse
Entering state 0
Reading a token: Next token is token STRUCT (2.1-6: )
Shifting token STRUCT (2.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (2.8-9: s1)
Shifting token IDENTIFIER (2.8-9: s1)
Entering state 9
Reading a token: Next token is token '{' (2.10: )
Reducing stack by rule 5 (line 138):
-> $$ = nterm $@1 (2.10: )
Stack now 9 4 0
Entering state 15
Next token is token '{' (2.10: )
Shifting token '{' (2.10: )
Entering state 18
Reading a token: Next token is token INT (3.2-4: )
Shifting token INT (3.2-4: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (3.2-4: )
-> $$ = nterm type_specifier (3.2-4: )
Stack now 18 15 9 4 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (3.6: a)
Shifting token IDENTIFIER (3.6: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.6: a)
-> $$ = nterm declarator_arr (3.6: )
Stack now 26 18 15 9 4 0
Entering state 32
Reading a token: Next token is token '[' (3.7: )
Shifting token '[' (3.7: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (3.8-9: 10)
Shifting token INT_CONSTANT (3.8-9: 10)
Entering state 99
Reading a token: Next token is token ']' (3.10: )
Shifting token ']' (3.10: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (3.6: )
   $2 = token '[' (3.7: )
   $3 = token INT_CONSTANT (3.8-9: 10)
   $4 = token ']' (3.10: )
-> $$ = nterm declarator_arr (3.6-10: )
Stack now 26 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (3.11: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.6-10: )
-> $$ = nterm declarator (3.6-10: )
Stack now 26 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (3.6-10: )
-> $$ = nterm declarator_list (3.6-10: )
Stack now 26 18 15 9 4 0
Entering state 65
Next token is token ';' (3.11: )
Shifting token ';' (3.11: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (3.2-4: )
   $2 = nterm declarator_list (3.6-10: )
   $3 = token ';' (3.11: )
-> $$ = nterm declaration (3.2-11: )
Stack now 18 15 9 4 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (3.2-11: )
-> $$ = nterm declaration_list (3.2-11: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token FLOAT (4.2-6: )
Shifting token FLOAT (4.2-6: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (4.2-6: )
-> $$ = nterm type_specifier (4.2-6: )
Stack now 28 18 15 9 4 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (4.8: b)
Shifting token IDENTIFIER (4.8: b)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (4.8: b)
-> $$ = nterm declarator_arr (4.8: )
Stack now 26 28 18 15 9 4 0
Entering state 32
Reading a token: Next token is token '[' (4.9: )
Shifting token '[' (4.9: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (4.10-11: 20)
Shifting token INT_CONSTANT (4.10-11: 20)
Entering state 99
Reading a token: Next token is token ']' (4.12: )
Shifting token ']' (4.12: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (4.8: )
   $2 = token '[' (4.9: )
   $3 = token INT_CONSTANT (4.10-11: 20)
   $4 = token ']' (4.12: )
-> $$ = nterm declarator_arr (4.8-12: )
Stack now 26 28 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (4.13: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (4.8-12: )
-> $$ = nterm declarator (4.8-12: )
Stack now 26 28 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (4.8-12: )
-> $$ = nterm declarator_list (4.8-12: )
Stack now 26 28 18 15 9 4 0
Entering state 65
Next token is token ';' (4.13: )
Shifting token ';' (4.13: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (4.2-6: )
   $2 = nterm declarator_list (4.8-12: )
   $3 = token ';' (4.13: )
-> $$ = nterm declaration (4.2-13: )
Stack now 28 18 15 9 4 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (3.2-11: )
   $2 = nterm declaration (4.2-13: )
-> $$ = nterm declaration_list (3.2-4.13: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token INT (5.2-4: )
Shifting token INT (5.2-4: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (5.2-4: )
-> $$ = nterm type_specifier (5.2-4: )
Stack now 28 18 15 9 4 0
Entering state 26
Reading a token: Next token is token '*' (5.5: )
Shifting token '*' (5.5: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (5.7: c)
Shifting token IDENTIFIER (5.7: c)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (5.7: c)
-> $$ = nterm declarator_arr (5.7: )
Stack now 31 26 28 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (5.8: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (5.7: )
-> $$ = nterm declarator (5.7: )
Stack now 31 26 28 18 15 9 4 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (5.5: )
   $2 = nterm declarator (5.7: )
-> $$ = nterm declarator (5.5-7: )
Stack now 26 28 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (5.5-7: )
-> $$ = nterm declarator_list (5.5-7: )
Stack now 26 28 18 15 9 4 0
Entering state 65
Next token is token ';' (5.8: )
Shifting token ';' (5.8: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (5.2-4: )
   $2 = nterm declarator_list (5.5-7: )
   $3 = token ';' (5.8: )
-> $$ = nterm declaration (5.2-8: )
Stack now 28 18 15 9 4 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (3.2-4.13: )
   $2 = nterm declaration (5.2-8: )
-> $$ = nterm declaration_list (3.2-5.8: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token '}' (6.1: )
Shifting token '}' (6.1: )
Entering state 66
Reading a token: Next token is token ';' (6.2: )
Shifting token ';' (6.2: )
Entering state 98
Reducing stack by rule 6 (line 137):
   $1 = token STRUCT (2.1-6: )
   $2 = token IDENTIFIER (2.8-9: s1)
   $3 = nterm $@1 (2.10: )
   $4 = token '{' (2.10: )
   $5 = nterm declaration_list (3.2-5.8: )
   $6 = token '}' (6.1: )
   $7 = token ';' (6.2: )
-> $$ = nterm struct_specifier (2.1-6.2: )
Stack now 0
Entering state 6
Reducing stack by rule 1 (line 122):
   $1 = nterm struct_specifier (2.1-6.2: )
-> $$ = nterm translation_unit (2.1-6.2: )
Stack now 0
Entering state 5
Reading a token: Next token is token STRUCT (8.1-6: )
Shifting token STRUCT (8.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (8.8-9: s2)
Shifting token IDENTIFIER (8.8-9: s2)
Entering state 9
Reading a token: Next token is token '{' (8.10: )
Reducing stack by rule 5 (line 138):
-> $$ = nterm $@1 (8.10: )
Stack now 9 4 5 0
Entering state 15
Next token is token '{' (8.10: )
Shifting token '{' (8.10: )
Entering state 18
Reading a token: Next token is token FLOAT (9.2-6: )
Shifting token FLOAT (9.2-6: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (9.2-6: )
-> $$ = nterm type_specifier (9.2-6: )
Stack now 18 15 9 4 5 0
Entering state 26
Reading a token: Next token is token '*' (9.7: )
Shifting token '*' (9.7: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (9.9: a)
Shifting token IDENTIFIER (9.9: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (9.9: a)
-> $$ = nterm declarator_arr (9.9: )
Stack now 31 26 18 15 9 4 5 0
Entering state 32
Reading a token: Next token is token '[' (9.10: )
Shifting token '[' (9.10: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (9.11-12: 12)
Shifting token INT_CONSTANT (9.11-12: 12)
Entering state 99
Reading a token: Next token is token ']' (9.13: )
Shifting token ']' (9.13: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (9.9: )
   $2 = token '[' (9.10: )
   $3 = token INT_CONSTANT (9.11-12: 12)
   $4 = token ']' (9.13: )
-> $$ = nterm declarator_arr (9.9-13: )
Stack now 31 26 18 15 9 4 5 0
Entering state 32
Reading a token: Next token is token '[' (9.14: )
Shifting token '[' (9.14: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (9.15: 2)
Shifting token INT_CONSTANT (9.15: 2)
Entering state 99
Reading a token: Next token is token ']' (9.16: )
Shifting token ']' (9.16: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (9.9-13: )
   $2 = token '[' (9.14: )
   $3 = token INT_CONSTANT (9.15: 2)
   $4 = token ']' (9.16: )
-> $$ = nterm declarator_arr (9.9-16: )
Stack now 31 26 18 15 9 4 5 0
Entering state 32
Reading a token: Next token is token ';' (9.17: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (9.9-16: )
-> $$ = nterm declarator (9.9-16: )
Stack now 31 26 18 15 9 4 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (9.7: )
   $2 = nterm declarator (9.9-16: )
-> $$ = nterm declarator (9.7-16: )
Stack now 26 18 15 9 4 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (9.7-16: )
-> $$ = nterm declarator_list (9.7-16: )
Stack now 26 18 15 9 4 5 0
Entering state 65
Next token is token ';' (9.17: )
Shifting token ';' (9.17: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (9.2-6: )
   $2 = nterm declarator_list (9.7-16: )
   $3 = token ';' (9.17: )
-> $$ = nterm declaration (9.2-17: )
Stack now 18 15 9 4 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (9.2-17: )
-> $$ = nterm declaration_list (9.2-17: )
Stack now 18 15 9 4 5 0
Entering state 28
Reading a token: Next token is token STRUCT (10.2-7: )
Shifting token STRUCT (10.2-7: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (10.9-10: s1)
Shifting token IDENTIFIER (10.9-10: s1)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (10.2-7: )
   $2 = token IDENTIFIER (10.9-10: s1)
-> $$ = nterm type_specifier (10.2-10: )
Stack now 28 18 15 9 4 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (10.12: b)
Shifting token IDENTIFIER (10.12: b)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (10.12: b)
-> $$ = nterm declarator_arr (10.12: )
Stack now 26 28 18 15 9 4 5 0
Entering state 32
Reading a token: Next token is token '[' (10.13: )
Shifting token '[' (10.13: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (10.14: 8)
Shifting token INT_CONSTANT (10.14: 8)
Entering state 99
Reading a token: Next token is token ']' (10.15: )
Shifting token ']' (10.15: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (10.12: )
   $2 = token '[' (10.13: )
   $3 = token INT_CONSTANT (10.14: 8)
   $4 = token ']' (10.15: )
-> $$ = nterm declarator_arr (10.12-15: )
Stack now 26 28 18 15 9 4 5 0
Entering state 32
Reading a token: Next token is token ';' (10.16: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (10.12-15: )
-> $$ = nterm declarator (10.12-15: )
Stack now 26 28 18 15 9 4 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (10.12-15: )
-> $$ = nterm declarator_list (10.12-15: )
Stack now 26 28 18 15 9 4 5 0
Entering state 65
Next token is token ';' (10.16: )
Shifting token ';' (10.16: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (10.2-10: )
   $2 = nterm declarator_list (10.12-15: )
   $3 = token ';' (10.16: )
-> $$ = nterm declaration (10.2-16: )
Stack now 28 18 15 9 4 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (9.2-17: )
   $2 = nterm declaration (10.2-16: )
-> $$ = nterm declaration_list (9.2-10.16: )
Stack now 18 15 9 4 5 0
Entering state 28
Reading a token: Next token is token STRUCT (11.2-7: )
Shifting token STRUCT (11.2-7: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (11.9-10: s2)
Shifting token IDENTIFIER (11.9-10: s2)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (11.2-7: )
   $2 = token IDENTIFIER (11.9-10: s2)
-> $$ = nterm type_specifier (11.2-10: )
Stack now 28 18 15 9 4 5 0
Entering state 26
Reading a token: Next token is token '*' (11.11: )
Shifting token '*' (11.11: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (11.13: c)
Shifting token IDENTIFIER (11.13: c)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (11.13: c)
-> $$ = nterm declarator_arr (11.13: )
Stack now 31 26 28 18 15 9 4 5 0
Entering state 32
Reading a token: Next token is token ';' (11.14: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (11.13: )
-> $$ = nterm declarator (11.13: )
Stack now 31 26 28 18 15 9 4 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (11.11: )
   $2 = nterm declarator (11.13: )
-> $$ = nterm declarator (11.11-13: )
Stack now 26 28 18 15 9 4 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (11.11-13: )
-> $$ = nterm declarator_list (11.11-13: )
Stack now 26 28 18 15 9 4 5 0
Entering state 65
Next token is token ';' (11.14: )
Shifting token ';' (11.14: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (11.2-10: )
   $2 = nterm declarator_list (11.11-13: )
   $3 = token ';' (11.14: )
-> $$ = nterm declaration (11.2-14: )
Stack now 28 18 15 9 4 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (9.2-10.16: )
   $2 = nterm declaration (11.2-14: )
-> $$ = nterm declaration_list (9.2-11.14: )
Stack now 18 15 9 4 5 0
Entering state 28
Reading a token: Next token is token '}' (12.1: )
Shifting token '}' (12.1: )
Entering state 66
Reading a token: Next token is token ';' (12.2: )
Shifting token ';' (12.2: )
Entering state 98
Reducing stack by rule 6 (line 137):
   $1 = token STRUCT (8.1-6: )
   $2 = token IDENTIFIER (8.8-9: s2)
   $3 = nterm $@1 (8.10: )
   $4 = token '{' (8.10: )
   $5 = nterm declaration_list (9.2-11.14: )
   $6 = token '}' (12.1: )
   $7 = token ';' (12.2: )
-> $$ = nterm struct_specifier (8.1-12.2: )
Stack now 5 0
Entering state 11
Reducing stack by rule 3 (line 129):
   $1 = nterm translation_unit (2.1-6.2: )
   $2 = nterm struct_specifier (8.1-12.2: )
-> $$ = nterm translation_unit (2.1-12.2: )
Stack now 0
Entering state 5
Reading a token: Next token is token VOID (14.1-4: )
Shifting token VOID (14.1-4: )
Entering state 1
Reducing stack by rule 9 (line 225):
   $1 = token VOID (14.1-4: )
-> $$ = nterm type_specifier (14.1-4: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (14.6-8: foo)
Shifting token IDENTIFIER (14.6-8: foo)
Entering state 13
Reading a token: Next token is token '(' (14.9: )
Shifting token '(' (14.9: )
Entering state 16
Reading a token: Next token is token INT (14.10-12: )
Shifting token INT (14.10-12: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (14.10-12: )
-> $$ = nterm type_specifier (14.10-12: )
Stack now 16 13 8 5 0
Entering state 21
Reading a token: Next token is token IDENTIFIER (14.14-17: mode)
Shifting token IDENTIFIER (14.14-17: mode)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (14.14-17: mode)
-> $$ = nterm declarator_arr (14.14-17: )
Stack now 21 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ',' (14.18: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (14.14-17: )
-> $$ = nterm declarator (14.14-17: )
Stack now 21 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (14.10-12: )
   $2 = nterm declarator (14.14-17: )
-> $$ = nterm parameter_declaration (14.10-17: )
Stack now 16 13 8 5 0
Entering state 23
Reducing stack by rule 15 (line 250):
   $1 = nterm parameter_declaration (14.10-17: )
-> $$ = nterm parameter_list (14.10-17: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ',' (14.18: )
Shifting token ',' (14.18: )
Entering state 35
Reading a token: Next token is token STRUCT (14.20-25: )
Shifting token STRUCT (14.20-25: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (14.27-28: s1)
Shifting token IDENTIFIER (14.27-28: s1)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (14.20-25: )
   $2 = token IDENTIFIER (14.27-28: s1)
-> $$ = nterm type_specifier (14.20-28: )
Stack now 35 22 16 13 8 5 0
Entering state 21
Reading a token: Next token is token '*' (14.29: )
Shifting token '*' (14.29: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (14.31-34: demo)
Shifting token IDENTIFIER (14.31-34: demo)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (14.31-34: demo)
-> $$ = nterm declarator_arr (14.31-34: )
Stack now 31 21 35 22 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ')' (14.35: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (14.31-34: )
-> $$ = nterm declarator (14.31-34: )
Stack now 31 21 35 22 16 13 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (14.29: )
   $2 = nterm declarator (14.31-34: )
-> $$ = nterm declarator (14.29-34: )
Stack now 21 35 22 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (14.20-28: )
   $2 = nterm declarator (14.29-34: )
-> $$ = nterm parameter_declaration (14.20-34: )
Stack now 35 22 16 13 8 5 0
Entering state 70
Reducing stack by rule 16 (line 256):
   $1 = nterm parameter_list (14.10-17: )
   $2 = token ',' (14.18: )
   $3 = nterm parameter_declaration (14.20-34: )
-> $$ = nterm parameter_list (14.10-34: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ')' (14.35: )
Shifting token ')' (14.35: )
Entering state 34
Reducing stack by rule 13 (line 240):
   $1 = token IDENTIFIER (14.6-8: foo)
   $2 = token '(' (14.9: )
   $3 = nterm parameter_list (14.10-34: )
   $4 = token ')' (14.35: )
-> $$ = nterm fun_declarator (14.6-35: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (14.36: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (14.36: )
Shifting token '{' (14.36: )
Entering state 24
Reading a token: Next token is token INT (15.5-7: )
Shifting token INT (15.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (15.5-7: )
-> $$ = nterm type_specifier (15.5-7: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (15.9: i)
Shifting token IDENTIFIER (15.9: i)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (15.9: i)
-> $$ = nterm declarator_arr (15.9: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (15.10: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (15.9: )
-> $$ = nterm declarator (15.9: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (15.9: )
-> $$ = nterm declarator_list (15.9: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (15.10: )
Shifting token ';' (15.10: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (15.5-7: )
   $2 = nterm declarator_list (15.9: )
   $3 = token ';' (15.10: )
-> $$ = nterm declaration (15.5-10: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (15.5-10: )
-> $$ = nterm declaration_list (15.5-10: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token FOR (16.1-3: )
Shifting token FOR (16.1-3: )
Entering state 38
Reading a token: Next token is token '(' (16.4: )
Shifting token '(' (16.4: )
Entering state 80
Reading a token: Next token is token IDENTIFIER (16.5: i)
Shifting token IDENTIFIER (16.5: i)
Entering state 71
Reading a token: Next token is token '=' (16.6: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.5: i)
-> $$ = nterm primary_expression (16.5: )
Stack now 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.5: )
-> $$ = nterm postfix_expression (16.5: )
Stack now 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (16.6: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.5: )
-> $$ = nterm unary_expression (16.5: )
Stack now 80 38 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (16.6: )
Shifting token '=' (16.6: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (16.7: 0)
Shifting token INT_CONSTANT (16.7: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (16.7: 0)
-> $$ = nterm primary_expression (16.7: )
Stack now 90 57 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.7: )
-> $$ = nterm postfix_expression (16.7: )
Stack now 90 57 80 38 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (16.8: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.7: )
-> $$ = nterm unary_expression (16.7: )
Stack now 90 57 80 38 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.7: )
-> $$ = nterm multiplicative_expression (16.7: )
Stack now 90 57 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (16.8: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.7: )
-> $$ = nterm additive_expression (16.7: )
Stack now 90 57 80 38 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (16.8: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.7: )
-> $$ = nterm relational_expression (16.7: )
Stack now 90 57 80 38 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (16.8: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.7: )
-> $$ = nterm equality_expression (16.7: )
Stack now 90 57 80 38 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (16.8: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.7: )
-> $$ = nterm logical_and_expression (16.7: )
Stack now 90 57 80 38 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (16.8: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.7: )
-> $$ = nterm expression (16.7: )
Stack now 90 57 80 38 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (16.8: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (16.5: )
   $2 = token '=' (16.6: )
   $3 = nterm expression (16.7: )
-> $$ = nterm assignment_expression (16.5-7: )
Stack now 80 38 52 24 17 14 8 5 0
Entering state 115
Next token is token ';' (16.8: )
Shifting token ';' (16.8: )
Entering state 144
Reading a token: Next token is token IDENTIFIER (16.9: i)
Shifting token IDENTIFIER (16.9: i)
Entering state 71
Reading a token: Next token is token '<' (16.10: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.9: i)
-> $$ = nterm primary_expression (16.9: )
Stack now 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.9: )
-> $$ = nterm postfix_expression (16.9: )
Stack now 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token '<' (16.10: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.9: )
-> $$ = nterm unary_expression (16.9: )
Stack now 144 115 80 38 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.9: )
-> $$ = nterm multiplicative_expression (16.9: )
Stack now 144 115 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token '<' (16.10: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.9: )
-> $$ = nterm additive_expression (16.9: )
Stack now 144 115 80 38 52 24 17 14 8 5 0
Entering state 76
Next token is token '<' (16.10: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.9: )
-> $$ = nterm relational_expression (16.9: )
Stack now 144 115 80 38 52 24 17 14 8 5 0
Entering state 75
Next token is token '<' (16.10: )
Shifting token '<' (16.10: )
Entering state 106
Reading a token: Next token is token INT_CONSTANT (16.11-12: 10)
Shifting token INT_CONSTANT (16.11-12: 10)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (16.11-12: 10)
-> $$ = nterm primary_expression (16.11-12: )
Stack now 106 75 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.11-12: )
-> $$ = nterm postfix_expression (16.11-12: )
Stack now 106 75 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (16.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.11-12: )
-> $$ = nterm unary_expression (16.11-12: )
Stack now 106 75 144 115 80 38 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.11-12: )
-> $$ = nterm multiplicative_expression (16.11-12: )
Stack now 106 75 144 115 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (16.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.11-12: )
-> $$ = nterm additive_expression (16.11-12: )
Stack now 106 75 144 115 80 38 52 24 17 14 8 5 0
Entering state 135
Next token is token ';' (16.13: )
Reducing stack by rule 52 (line 779):
   $1 = nterm relational_expression (16.9: )
   $2 = token '<' (16.10: )
   $3 = nterm additive_expression (16.11-12: )
-> $$ = nterm relational_expression (16.9-12: )
Stack now 144 115 80 38 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (16.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.9-12: )
-> $$ = nterm equality_expression (16.9-12: )
Stack now 144 115 80 38 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (16.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.9-12: )
-> $$ = nterm logical_and_expression (16.9-12: )
Stack now 144 115 80 38 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (16.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.9-12: )
-> $$ = nterm expression (16.9-12: )
Stack now 144 115 80 38 52 24 17 14 8 5 0
Entering state 152
Next token is token ';' (16.13: )
Shifting token ';' (16.13: )
Entering state 156
Reading a token: Next token is token IDENTIFIER (16.14: i)
Shifting token IDENTIFIER (16.14: i)
Entering state 71
Reading a token: Next token is token '=' (16.15: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.14: i)
-> $$ = nterm primary_expression (16.14: )
Stack now 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.14: )
-> $$ = nterm postfix_expression (16.14: )
Stack now 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (16.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.14: )
-> $$ = nterm unary_expression (16.14: )
Stack now 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (16.15: )
Shifting token '=' (16.15: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (16.16: i)
Shifting token IDENTIFIER (16.16: i)
Entering state 71
Reading a token: Next token is token '+' (16.17: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.16: i)
-> $$ = nterm primary_expression (16.16: )
Stack now 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.16: )
-> $$ = nterm postfix_expression (16.16: )
Stack now 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (16.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.16: )
-> $$ = nterm unary_expression (16.16: )
Stack now 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.16: )
-> $$ = nterm multiplicative_expression (16.16: )
Stack now 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (16.17: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.16: )
-> $$ = nterm additive_expression (16.16: )
Stack now 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (16.17: )
Shifting token '+' (16.17: )
Entering state 110
Reading a token: Next token is token INT_CONSTANT (16.18: 1)
Shifting token INT_CONSTANT (16.18: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (16.18: 1)
-> $$ = nterm primary_expression (16.18: )
Stack now 110 76 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.18: )
-> $$ = nterm postfix_expression (16.18: )
Stack now 110 76 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (16.19: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.18: )
-> $$ = nterm unary_expression (16.18: )
Stack now 110 76 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.18: )
-> $$ = nterm multiplicative_expression (16.18: )
Stack now 110 76 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 139
Next token is token ')' (16.19: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (16.16: )
   $2 = token '+' (16.17: )
   $3 = nterm multiplicative_expression (16.18: )
-> $$ = nterm additive_expression (16.16-18: )
Stack now 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (16.19: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.16-18: )
-> $$ = nterm relational_expression (16.16-18: )
Stack now 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (16.19: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.16-18: )
-> $$ = nterm equality_expression (16.16-18: )
Stack now 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (16.19: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.16-18: )
-> $$ = nterm logical_and_expression (16.16-18: )
Stack now 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (16.19: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.16-18: )
-> $$ = nterm expression (16.16-18: )
Stack now 90 57 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 123
Next token is token ')' (16.19: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (16.14: )
   $2 = token '=' (16.15: )
   $3 = nterm expression (16.16-18: )
-> $$ = nterm assignment_expression (16.14-18: )
Stack now 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 158
Next token is token ')' (16.19: )
Shifting token ')' (16.19: )
Entering state 160
Reading a token: Next token is token '{' (16.20: )
Shifting token '{' (16.20: )
Entering state 45
Reading a token: Next token is token IF (17.3-4: )
Shifting token IF (17.3-4: )
Entering state 39
Reading a token: Next token is token '(' (17.5: )
Shifting token '(' (17.5: )
Entering state 81
Reading a token: Next token is token IDENTIFIER (17.6-9: mode)
Shifting token IDENTIFIER (17.6-9: mode)
Entering state 71
Reading a token: Next token is token ')' (17.10: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (17.6-9: mode)
-> $$ = nterm primary_expression (17.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.6-9: )
-> $$ = nterm postfix_expression (17.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (17.10: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.6-9: )
-> $$ = nterm unary_expression (17.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (17.6-9: )
-> $$ = nterm multiplicative_expression (17.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (17.10: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (17.6-9: )
-> $$ = nterm additive_expression (17.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (17.10: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (17.6-9: )
-> $$ = nterm relational_expression (17.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (17.10: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (17.6-9: )
-> $$ = nterm equality_expression (17.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (17.10: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (17.6-9: )
-> $$ = nterm logical_and_expression (17.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (17.10: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (17.6-9: )
-> $$ = nterm expression (17.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 116
Next token is token ')' (17.10: )
Shifting token ')' (17.10: )
Entering state 145
Reading a token: Next token is token '{' (17.11: )
Shifting token '{' (17.11: )
Entering state 45
Reading a token: Next token is token IDENTIFIER (18.4-7: demo)
Shifting token IDENTIFIER (18.4-7: demo)
Entering state 40
Reading a token: Next token is token PTR_OP (18.8-9: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (18.4-7: demo)
-> $$ = nterm primary_expression (18.4-7: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (18.4-7: )
-> $$ = nterm postfix_expression (18.4-7: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (18.8-9: )
Shifting token PTR_OP (18.8-9: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (18.10: a)
Shifting token IDENTIFIER (18.10: a)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (18.4-7: )
   $2 = token PTR_OP (18.8-9: )
   $3 = token IDENTIFIER (18.10: a)
-> $$ = nterm postfix_expression (18.4-10: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (18.11: )
Shifting token '[' (18.11: )
Entering state 91
Reading a token: Next token is token IDENTIFIER (18.12: i)
Shifting token IDENTIFIER (18.12: i)
Entering state 71
Reading a token: Next token is token ']' (18.13: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (18.12: i)
-> $$ = nterm primary_expression (18.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (18.12: )
-> $$ = nterm postfix_expression (18.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token ']' (18.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (18.12: )
-> $$ = nterm unary_expression (18.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (18.12: )
-> $$ = nterm multiplicative_expression (18.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (18.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (18.12: )
-> $$ = nterm additive_expression (18.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (18.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (18.12: )
-> $$ = nterm relational_expression (18.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (18.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (18.12: )
-> $$ = nterm equality_expression (18.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (18.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (18.12: )
-> $$ = nterm logical_and_expression (18.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (18.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (18.12: )
-> $$ = nterm expression (18.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (18.13: )
Shifting token ']' (18.13: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (18.4-10: )
   $2 = token '[' (18.11: )
   $3 = nterm expression (18.12: )
   $4 = token ']' (18.13: )
-> $$ = nterm postfix_expression (18.4-13: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (18.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (18.4-13: )
-> $$ = nterm unary_expression (18.4-13: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (18.15: )
Shifting token '=' (18.15: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (18.17: i)
Shifting token IDENTIFIER (18.17: i)
Entering state 71
Reading a token: Next token is token '*' (18.18: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (18.17: i)
-> $$ = nterm primary_expression (18.17: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (18.17: )
-> $$ = nterm postfix_expression (18.17: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token '*' (18.18: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (18.17: )
-> $$ = nterm unary_expression (18.17: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (18.17: )
-> $$ = nterm multiplicative_expression (18.17: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token '*' (18.18: )
Shifting token '*' (18.18: )
Entering state 112
Reading a token: Next token is token INT_CONSTANT (18.19: 2)
Shifting token INT_CONSTANT (18.19: 2)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (18.19: 2)
-> $$ = nterm primary_expression (18.19: )
Stack now 112 77 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (18.19: )
-> $$ = nterm postfix_expression (18.19: )
Stack now 112 77 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (18.20: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (18.19: )
-> $$ = nterm unary_expression (18.19: )
Stack now 112 77 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 141
Reducing stack by rule 62 (line 1127):
   $1 = nterm multiplicative_expression (18.17: )
   $2 = token '*' (18.18: )
   $3 = nterm unary_expression (18.19: )
-> $$ = nterm multiplicative_expression (18.17-19: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (18.20: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (18.17-19: )
-> $$ = nterm additive_expression (18.17-19: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (18.20: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (18.17-19: )
-> $$ = nterm relational_expression (18.17-19: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (18.20: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (18.17-19: )
-> $$ = nterm equality_expression (18.17-19: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (18.20: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (18.17-19: )
-> $$ = nterm logical_and_expression (18.17-19: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (18.20: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (18.17-19: )
-> $$ = nterm expression (18.17-19: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (18.20: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (18.4-13: )
   $2 = token '=' (18.15: )
   $3 = nterm expression (18.17-19: )
-> $$ = nterm assignment_expression (18.4-19: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (18.20: )
Shifting token ';' (18.20: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (18.4-19: )
   $2 = token ';' (18.20: )
-> $$ = nterm assignment_statement (18.4-20: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (18.4-20: )
-> $$ = nterm statement (18.4-20: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (18.4-20: )
-> $$ = nterm statement_list (18.4-20: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (19.3: )
Shifting token '}' (19.3: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (17.11: )
   $2 = nterm statement_list (18.4-20: )
   $3 = token '}' (19.3: )
-> $$ = nterm statement (17.11-19.3: )
Stack now 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 153
Reading a token: Next token is token ELSE (19.5-8: )
Shifting token ELSE (19.5-8: )
Entering state 157
Reading a token: Next token is token '{' (19.10: )
Shifting token '{' (19.10: )
Entering state 45
Reading a token: Next token is token IDENTIFIER (20.4-7: demo)
Shifting token IDENTIFIER (20.4-7: demo)
Entering state 40
Reading a token: Next token is token PTR_OP (20.8-9: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (20.4-7: demo)
-> $$ = nterm primary_expression (20.4-7: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.4-7: )
-> $$ = nterm postfix_expression (20.4-7: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (20.8-9: )
Shifting token PTR_OP (20.8-9: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (20.10: a)
Shifting token IDENTIFIER (20.10: a)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (20.4-7: )
   $2 = token PTR_OP (20.8-9: )
   $3 = token IDENTIFIER (20.10: a)
-> $$ = nterm postfix_expression (20.4-10: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (20.11: )
Shifting token '[' (20.11: )
Entering state 91
Reading a token: Next token is token IDENTIFIER (20.12: i)
Shifting token IDENTIFIER (20.12: i)
Entering state 71
Reading a token: Next token is token ']' (20.13: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (20.12: i)
-> $$ = nterm primary_expression (20.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.12: )
-> $$ = nterm postfix_expression (20.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token ']' (20.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.12: )
-> $$ = nterm unary_expression (20.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (20.12: )
-> $$ = nterm multiplicative_expression (20.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (20.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (20.12: )
-> $$ = nterm additive_expression (20.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (20.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (20.12: )
-> $$ = nterm relational_expression (20.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (20.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (20.12: )
-> $$ = nterm equality_expression (20.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (20.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (20.12: )
-> $$ = nterm logical_and_expression (20.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (20.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (20.12: )
-> $$ = nterm expression (20.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (20.13: )
Shifting token ']' (20.13: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (20.4-10: )
   $2 = token '[' (20.11: )
   $3 = nterm expression (20.12: )
   $4 = token ']' (20.13: )
-> $$ = nterm postfix_expression (20.4-13: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (20.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.4-13: )
-> $$ = nterm unary_expression (20.4-13: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (20.15: )
Shifting token '=' (20.15: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (20.17: i)
Shifting token IDENTIFIER (20.17: i)
Entering state 71
Reading a token: Next token is token '*' (20.18: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (20.17: i)
-> $$ = nterm primary_expression (20.17: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.17: )
-> $$ = nterm postfix_expression (20.17: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Next token is token '*' (20.18: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.17: )
-> $$ = nterm unary_expression (20.17: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (20.17: )
-> $$ = nterm multiplicative_expression (20.17: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token '*' (20.18: )
Shifting token '*' (20.18: )
Entering state 112
Reading a token: Next token is token INT_CONSTANT (20.19: 3)
Shifting token INT_CONSTANT (20.19: 3)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (20.19: 3)
-> $$ = nterm primary_expression (20.19: )
Stack now 112 77 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (20.19: )
-> $$ = nterm postfix_expression (20.19: )
Stack now 112 77 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (20.20: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (20.19: )
-> $$ = nterm unary_expression (20.19: )
Stack now 112 77 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 141
Reducing stack by rule 62 (line 1127):
   $1 = nterm multiplicative_expression (20.17: )
   $2 = token '*' (20.18: )
   $3 = nterm unary_expression (20.19: )
-> $$ = nterm multiplicative_expression (20.17-19: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (20.20: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (20.17-19: )
-> $$ = nterm additive_expression (20.17-19: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (20.20: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (20.17-19: )
-> $$ = nterm relational_expression (20.17-19: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (20.20: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (20.17-19: )
-> $$ = nterm equality_expression (20.17-19: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (20.20: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (20.17-19: )
-> $$ = nterm logical_and_expression (20.17-19: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (20.20: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (20.17-19: )
-> $$ = nterm expression (20.17-19: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (20.20: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (20.4-13: )
   $2 = token '=' (20.15: )
   $3 = nterm expression (20.17-19: )
-> $$ = nterm assignment_expression (20.4-19: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (20.20: )
Shifting token ';' (20.20: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (20.4-19: )
   $2 = token ';' (20.20: )
-> $$ = nterm assignment_statement (20.4-20: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (20.4-20: )
-> $$ = nterm statement (20.4-20: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (20.4-20: )
-> $$ = nterm statement_list (20.4-20: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (21.3: )
Shifting token '}' (21.3: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (19.10: )
   $2 = nterm statement_list (20.4-20: )
   $3 = token '}' (21.3: )
-> $$ = nterm statement (19.10-21.3: )
Stack now 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 159
Reducing stack by rule 82 (line 1419):
   $1 = token IF (17.3-4: )
   $2 = token '(' (17.5: )
   $3 = nterm expression (17.6-9: )
   $4 = token ')' (17.10: )
   $5 = nterm statement (17.11-19.3: )
   $6 = token ELSE (19.5-8: )
   $7 = nterm statement (19.10-21.3: )
-> $$ = nterm selection_statement (17.3-21.3: )
Stack now 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 62
Reducing stack by rule 35 (line 463):
   $1 = nterm selection_statement (17.3-21.3: )
-> $$ = nterm statement (17.3-21.3: )
Stack now 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (17.3-21.3: )
-> $$ = nterm statement_list (17.3-21.3: )
Stack now 45 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (22.2: )
Shifting token '}' (22.2: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (16.20: )
   $2 = nterm statement_list (17.3-21.3: )
   $3 = token '}' (22.2: )
-> $$ = nterm statement (16.20-22.2: )
Stack now 160 158 156 152 144 115 80 38 52 24 17 14 8 5 0
Entering state 161
Reducing stack by rule 84 (line 1432):
   $1 = token FOR (16.1-3: )
   $2 = token '(' (16.4: )
   $3 = nterm assignment_expression (16.5-7: )
   $4 = token ';' (16.8: )
   $5 = nterm expression (16.9-12: )
   $6 = token ';' (16.13: )
   $7 = nterm assignment_expression (16.14-18: )
   $8 = token ')' (16.19: )
   $9 = nterm statement (16.20-22.2: )
-> $$ = nterm iteration_statement (16.1-22.2: )
Stack now 52 24 17 14 8 5 0
Entering state 63
Reducing stack by rule 36 (line 466):
   $1 = nterm iteration_statement (16.1-22.2: )
-> $$ = nterm statement (16.1-22.2: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (16.1-22.2: )
-> $$ = nterm statement_list (16.1-22.2: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token FOR (23.2-4: )
Shifting token FOR (23.2-4: )
Entering state 38
Reading a token: Next token is token '(' (23.5: )
Shifting token '(' (23.5: )
Entering state 80
Reading a token: Next token is token IDENTIFIER (23.6: i)
Shifting token IDENTIFIER (23.6: i)
Entering state 71
Reading a token: Next token is token '=' (23.7: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (23.6: i)
-> $$ = nterm primary_expression (23.6: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.6: )
-> $$ = nterm postfix_expression (23.6: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (23.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.6: )
-> $$ = nterm unary_expression (23.6: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (23.7: )
Shifting token '=' (23.7: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (23.8: 0)
Shifting token INT_CONSTANT (23.8: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (23.8: 0)
-> $$ = nterm primary_expression (23.8: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.8: )
-> $$ = nterm postfix_expression (23.8: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (23.9: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.8: )
-> $$ = nterm unary_expression (23.8: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.8: )
-> $$ = nterm multiplicative_expression (23.8: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (23.9: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.8: )
-> $$ = nterm additive_expression (23.8: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (23.9: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (23.8: )
-> $$ = nterm relational_expression (23.8: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (23.9: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (23.8: )
-> $$ = nterm equality_expression (23.8: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (23.9: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (23.8: )
-> $$ = nterm logical_and_expression (23.8: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (23.9: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (23.8: )
-> $$ = nterm expression (23.8: )
Stack now 90 57 80 38 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (23.9: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (23.6: )
   $2 = token '=' (23.7: )
   $3 = nterm expression (23.8: )
-> $$ = nterm assignment_expression (23.6-8: )
Stack now 80 38 86 52 24 17 14 8 5 0
Entering state 115
Next token is token ';' (23.9: )
Shifting token ';' (23.9: )
Entering state 144
Reading a token: Next token is token IDENTIFIER (23.10: i)
Shifting token IDENTIFIER (23.10: i)
Entering state 71
Reading a token: Next token is token '<' (23.11: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (23.10: i)
-> $$ = nterm primary_expression (23.10: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.10: )
-> $$ = nterm postfix_expression (23.10: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '<' (23.11: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.10: )
-> $$ = nterm unary_expression (23.10: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.10: )
-> $$ = nterm multiplicative_expression (23.10: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '<' (23.11: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.10: )
-> $$ = nterm additive_expression (23.10: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '<' (23.11: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (23.10: )
-> $$ = nterm relational_expression (23.10: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token '<' (23.11: )
Shifting token '<' (23.11: )
Entering state 106
Reading a token: Next token is token INT_CONSTANT (23.12-13: 20)
Shifting token INT_CONSTANT (23.12-13: 20)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (23.12-13: 20)
-> $$ = nterm primary_expression (23.12-13: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.12-13: )
-> $$ = nterm postfix_expression (23.12-13: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (23.14: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.12-13: )
-> $$ = nterm unary_expression (23.12-13: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.12-13: )
-> $$ = nterm multiplicative_expression (23.12-13: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (23.14: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.12-13: )
-> $$ = nterm additive_expression (23.12-13: )
Stack now 106 75 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 135
Next token is token ';' (23.14: )
Reducing stack by rule 52 (line 779):
   $1 = nterm relational_expression (23.10: )
   $2 = token '<' (23.11: )
   $3 = nterm additive_expression (23.12-13: )
-> $$ = nterm relational_expression (23.10-13: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (23.14: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (23.10-13: )
-> $$ = nterm equality_expression (23.10-13: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (23.14: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (23.10-13: )
-> $$ = nterm logical_and_expression (23.10-13: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (23.14: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (23.10-13: )
-> $$ = nterm expression (23.10-13: )
Stack now 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 152
Next token is token ';' (23.14: )
Shifting token ';' (23.14: )
Entering state 156
Reading a token: Next token is token IDENTIFIER (23.15: i)
Shifting token IDENTIFIER (23.15: i)
Entering state 71
Reading a token: Next token is token '=' (23.16: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (23.15: i)
-> $$ = nterm primary_expression (23.15: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.15: )
-> $$ = nterm postfix_expression (23.15: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (23.16: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.15: )
-> $$ = nterm unary_expression (23.15: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (23.16: )
Shifting token '=' (23.16: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (23.17: i)
Shifting token IDENTIFIER (23.17: i)
Entering state 71
Reading a token: Next token is token '+' (23.18: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (23.17: i)
-> $$ = nterm primary_expression (23.17: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.17: )
-> $$ = nterm postfix_expression (23.17: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (23.18: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.17: )
-> $$ = nterm unary_expression (23.17: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.17: )
-> $$ = nterm multiplicative_expression (23.17: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (23.18: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (23.17: )
-> $$ = nterm additive_expression (23.17: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (23.18: )
Shifting token '+' (23.18: )
Entering state 110
Reading a token: Next token is token INT_CONSTANT (23.19: 1)
Shifting token INT_CONSTANT (23.19: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (23.19: 1)
-> $$ = nterm primary_expression (23.19: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (23.19: )
-> $$ = nterm postfix_expression (23.19: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (23.20: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (23.19: )
-> $$ = nterm unary_expression (23.19: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (23.19: )
-> $$ = nterm multiplicative_expression (23.19: )
Stack now 110 76 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ')' (23.20: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (23.17: )
   $2 = token '+' (23.18: )
   $3 = nterm multiplicative_expression (23.19: )
-> $$ = nterm additive_expression (23.17-19: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (23.20: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (23.17-19: )
-> $$ = nterm relational_expression (23.17-19: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (23.20: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (23.17-19: )
-> $$ = nterm equality_expression (23.17-19: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (23.20: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (23.17-19: )
-> $$ = nterm logical_and_expression (23.17-19: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (23.20: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (23.17-19: )
-> $$ = nterm expression (23.17-19: )
Stack now 90 57 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ')' (23.20: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (23.15: )
   $2 = token '=' (23.16: )
   $3 = nterm expression (23.17-19: )
-> $$ = nterm assignment_expression (23.15-19: )
Stack now 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 158
Next token is token ')' (23.20: )
Shifting token ')' (23.20: )
Entering state 160
Reading a token: Next token is token '{' (23.21: )
Shifting token '{' (23.21: )
Entering state 45
Reading a token: Next token is token IF (24.3-4: )
Shifting token IF (24.3-4: )
Entering state 39
Reading a token: Next token is token '(' (24.5: )
Shifting token '(' (24.5: )
Entering state 81
Reading a token: Next token is token IDENTIFIER (24.6-9: mode)
Shifting token IDENTIFIER (24.6-9: mode)
Entering state 71
Reading a token: Next token is token ')' (24.10: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (24.6-9: mode)
-> $$ = nterm primary_expression (24.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (24.6-9: )
-> $$ = nterm postfix_expression (24.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (24.10: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (24.6-9: )
-> $$ = nterm unary_expression (24.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (24.6-9: )
-> $$ = nterm multiplicative_expression (24.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (24.10: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (24.6-9: )
-> $$ = nterm additive_expression (24.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (24.10: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (24.6-9: )
-> $$ = nterm relational_expression (24.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (24.10: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (24.6-9: )
-> $$ = nterm equality_expression (24.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (24.10: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (24.6-9: )
-> $$ = nterm logical_and_expression (24.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (24.10: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (24.6-9: )
-> $$ = nterm expression (24.6-9: )
Stack now 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 116
Next token is token ')' (24.10: )
Shifting token ')' (24.10: )
Entering state 145
Reading a token: Next token is token '{' (24.11: )
Shifting token '{' (24.11: )
Entering state 45
Reading a token: Next token is token IDENTIFIER (25.4-7: demo)
Shifting token IDENTIFIER (25.4-7: demo)
Entering state 40
Reading a token: Next token is token PTR_OP (25.8-9: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (25.4-7: demo)
-> $$ = nterm primary_expression (25.4-7: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.4-7: )
-> $$ = nterm postfix_expression (25.4-7: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (25.8-9: )
Shifting token PTR_OP (25.8-9: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (25.10: b)
Shifting token IDENTIFIER (25.10: b)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (25.4-7: )
   $2 = token PTR_OP (25.8-9: )
   $3 = token IDENTIFIER (25.10: b)
-> $$ = nterm postfix_expression (25.4-10: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (25.11: )
Shifting token '[' (25.11: )
Entering state 91
Reading a token: Next token is token IDENTIFIER (25.12: i)
Shifting token IDENTIFIER (25.12: i)
Entering state 71
Reading a token: Next token is token ']' (25.13: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (25.12: i)
-> $$ = nterm primary_expression (25.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.12: )
-> $$ = nterm postfix_expression (25.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ']' (25.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.12: )
-> $$ = nterm unary_expression (25.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (25.12: )
-> $$ = nterm multiplicative_expression (25.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (25.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (25.12: )
-> $$ = nterm additive_expression (25.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (25.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (25.12: )
-> $$ = nterm relational_expression (25.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (25.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (25.12: )
-> $$ = nterm equality_expression (25.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (25.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (25.12: )
-> $$ = nterm logical_and_expression (25.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (25.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (25.12: )
-> $$ = nterm expression (25.12: )
Stack now 91 58 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (25.13: )
Shifting token ']' (25.13: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (25.4-10: )
   $2 = token '[' (25.11: )
   $3 = nterm expression (25.12: )
   $4 = token ']' (25.13: )
-> $$ = nterm postfix_expression (25.4-13: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (25.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.4-13: )
-> $$ = nterm unary_expression (25.4-13: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (25.15: )
Shifting token '=' (25.15: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (25.17: i)
Shifting token IDENTIFIER (25.17: i)
Entering state 71
Reading a token: Next token is token '*' (25.18: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (25.17: i)
-> $$ = nterm primary_expression (25.17: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.17: )
-> $$ = nterm postfix_expression (25.17: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '*' (25.18: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.17: )
-> $$ = nterm unary_expression (25.17: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (25.17: )
-> $$ = nterm multiplicative_expression (25.17: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '*' (25.18: )
Shifting token '*' (25.18: )
Entering state 112
Reading a token: Next token is token FLOAT_CONSTANT (25.19-21: 1.5)
Shifting token FLOAT_CONSTANT (25.19-21: 1.5)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (25.19-21: 1.5)
-> $$ = nterm primary_expression (25.19-21: )
Stack now 112 77 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.19-21: )
-> $$ = nterm postfix_expression (25.19-21: )
Stack now 112 77 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (25.22: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.19-21: )
-> $$ = nterm unary_expression (25.19-21: )
Stack now 112 77 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 141
Reducing stack by rule 62 (line 1127):
   $1 = nterm multiplicative_expression (25.17: )
   $2 = token '*' (25.18: )
   $3 = nterm unary_expression (25.19-21: )
-> $$ = nterm multiplicative_expression (25.17-21: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (25.22: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (25.17-21: )
-> $$ = nterm additive_expression (25.17-21: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (25.22: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (25.17-21: )
-> $$ = nterm relational_expression (25.17-21: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (25.22: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (25.17-21: )
-> $$ = nterm equality_expression (25.17-21: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (25.22: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (25.17-21: )
-> $$ = nterm logical_and_expression (25.17-21: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (25.22: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (25.17-21: )
-> $$ = nterm expression (25.17-21: )
Stack now 90 57 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (25.22: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (25.4-13: )
   $2 = token '=' (25.15: )
   $3 = nterm expression (25.17-21: )
-> $$ = nterm assignment_expression (25.4-21: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (25.22: )
Shifting token ';' (25.22: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (25.4-21: )
   $2 = token ';' (25.22: )
-> $$ = nterm assignment_statement (25.4-22: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (25.4-22: )
-> $$ = nterm statement (25.4-22: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (25.4-22: )
-> $$ = nterm statement_list (25.4-22: )
Stack now 45 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (26.3: )
Shifting token '}' (26.3: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (24.11: )
   $2 = nterm statement_list (25.4-22: )
   $3 = token '}' (26.3: )
-> $$ = nterm statement (24.11-26.3: )
Stack now 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 153
Reading a token: Next token is token ELSE (26.5-8: )
Shifting token ELSE (26.5-8: )
Entering state 157
Reading a token: Next token is token '{' (26.10: )
Shifting token '{' (26.10: )
Entering state 45
Reading a token: Next token is token IDENTIFIER (27.4-7: demo)
Shifting token IDENTIFIER (27.4-7: demo)
Entering state 40
Reading a token: Next token is token PTR_OP (27.8-9: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (27.4-7: demo)
-> $$ = nterm primary_expression (27.4-7: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.4-7: )
-> $$ = nterm postfix_expression (27.4-7: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (27.8-9: )
Shifting token PTR_OP (27.8-9: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (27.10: b)
Shifting token IDENTIFIER (27.10: b)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (27.4-7: )
   $2 = token PTR_OP (27.8-9: )
   $3 = token IDENTIFIER (27.10: b)
-> $$ = nterm postfix_expression (27.4-10: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (27.11: )
Shifting token '[' (27.11: )
Entering state 91
Reading a token: Next token is token IDENTIFIER (27.12: i)
Shifting token IDENTIFIER (27.12: i)
Entering state 71
Reading a token: Next token is token ']' (27.13: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (27.12: i)
-> $$ = nterm primary_expression (27.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.12: )
-> $$ = nterm postfix_expression (27.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ']' (27.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.12: )
-> $$ = nterm unary_expression (27.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (27.12: )
-> $$ = nterm multiplicative_expression (27.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (27.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (27.12: )
-> $$ = nterm additive_expression (27.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (27.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (27.12: )
-> $$ = nterm relational_expression (27.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (27.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (27.12: )
-> $$ = nterm equality_expression (27.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (27.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (27.12: )
-> $$ = nterm logical_and_expression (27.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (27.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (27.12: )
-> $$ = nterm expression (27.12: )
Stack now 91 58 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (27.13: )
Shifting token ']' (27.13: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (27.4-10: )
   $2 = token '[' (27.11: )
   $3 = nterm expression (27.12: )
   $4 = token ']' (27.13: )
-> $$ = nterm postfix_expression (27.4-13: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (27.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.4-13: )
-> $$ = nterm unary_expression (27.4-13: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (27.15: )
Shifting token '=' (27.15: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (27.17: i)
Shifting token IDENTIFIER (27.17: i)
Entering state 71
Reading a token: Next token is token '*' (27.18: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (27.17: i)
-> $$ = nterm primary_expression (27.17: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.17: )
-> $$ = nterm postfix_expression (27.17: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '*' (27.18: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.17: )
-> $$ = nterm unary_expression (27.17: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (27.17: )
-> $$ = nterm multiplicative_expression (27.17: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '*' (27.18: )
Shifting token '*' (27.18: )
Entering state 112
Reading a token: Next token is token FLOAT_CONSTANT (27.19-21: 2.5)
Shifting token FLOAT_CONSTANT (27.19-21: 2.5)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (27.19-21: 2.5)
-> $$ = nterm primary_expression (27.19-21: )
Stack now 112 77 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (27.19-21: )
-> $$ = nterm postfix_expression (27.19-21: )
Stack now 112 77 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (27.22: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (27.19-21: )
-> $$ = nterm unary_expression (27.19-21: )
Stack now 112 77 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 141
Reducing stack by rule 62 (line 1127):
   $1 = nterm multiplicative_expression (27.17: )
   $2 = token '*' (27.18: )
   $3 = nterm unary_expression (27.19-21: )
-> $$ = nterm multiplicative_expression (27.17-21: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (27.22: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (27.17-21: )
-> $$ = nterm additive_expression (27.17-21: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (27.22: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (27.17-21: )
-> $$ = nterm relational_expression (27.17-21: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (27.22: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (27.17-21: )
-> $$ = nterm equality_expression (27.17-21: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (27.22: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (27.17-21: )
-> $$ = nterm logical_and_expression (27.17-21: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (27.22: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (27.17-21: )
-> $$ = nterm expression (27.17-21: )
Stack now 90 57 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (27.22: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (27.4-13: )
   $2 = token '=' (27.15: )
   $3 = nterm expression (27.17-21: )
-> $$ = nterm assignment_expression (27.4-21: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (27.22: )
Shifting token ';' (27.22: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (27.4-21: )
   $2 = token ';' (27.22: )
-> $$ = nterm assignment_statement (27.4-22: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (27.4-22: )
-> $$ = nterm statement (27.4-22: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (27.4-22: )
-> $$ = nterm statement_list (27.4-22: )
Stack now 45 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (28.3: )
Shifting token '}' (28.3: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (26.10: )
   $2 = nterm statement_list (27.4-22: )
   $3 = token '}' (28.3: )
-> $$ = nterm statement (26.10-28.3: )
Stack now 157 153 145 116 81 39 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 159
Reducing stack by rule 82 (line 1419):
   $1 = token IF (24.3-4: )
   $2 = token '(' (24.5: )
   $3 = nterm expression (24.6-9: )
   $4 = token ')' (24.10: )
   $5 = nterm statement (24.11-26.3: )
   $6 = token ELSE (26.5-8: )
   $7 = nterm statement (26.10-28.3: )
-> $$ = nterm selection_statement (24.3-28.3: )
Stack now 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 62
Reducing stack by rule 35 (line 463):
   $1 = nterm selection_statement (24.3-28.3: )
-> $$ = nterm statement (24.3-28.3: )
Stack now 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (24.3-28.3: )
-> $$ = nterm statement_list (24.3-28.3: )
Stack now 45 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (29.2: )
Shifting token '}' (29.2: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (23.21: )
   $2 = nterm statement_list (24.3-28.3: )
   $3 = token '}' (29.2: )
-> $$ = nterm statement (23.21-29.2: )
Stack now 160 158 156 152 144 115 80 38 86 52 24 17 14 8 5 0
Entering state 161
Reducing stack by rule 84 (line 1432):
   $1 = token FOR (23.2-4: )
   $2 = token '(' (23.5: )
   $3 = nterm assignment_expression (23.6-8: )
   $4 = token ';' (23.9: )
   $5 = nterm expression (23.10-13: )
   $6 = token ';' (23.14: )
   $7 = nterm assignment_expression (23.15-19: )
   $8 = token ')' (23.20: )
   $9 = nterm statement (23.21-29.2: )
-> $$ = nterm iteration_statement (23.2-29.2: )
Stack now 86 52 24 17 14 8 5 0
Entering state 63
Reducing stack by rule 36 (line 466):
   $1 = nterm iteration_statement (23.2-29.2: )
-> $$ = nterm statement (23.2-29.2: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (16.1-22.2: )
   $2 = nterm statement (23.2-29.2: )
-> $$ = nterm statement_list (16.1-29.2: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (30.1: )
Shifting token '}' (30.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (14.36: )
   $2 = nterm declaration_list (15.5-10: )
   $3 = nterm statement_list (16.1-29.2: )
   $4 = token '}' (30.1: )
-> $$ = nterm compound_statement (14.36-30.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (14.1-4: )
   $2 = nterm fun_declarator (14.6-35: )
   $3 = nterm $@2 (14.36: )
   $4 = nterm compound_statement (14.36-30.1: )
-> $$ = nterm function_definition (14.1-30.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (2.1-12.2: )
   $2 = nterm function_definition (14.1-30.1: )
-> $$ = nterm translation_unit (2.1-30.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (32.1-3: )
Shifting token INT (32.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (32.1-3: )
-> $$ = nterm type_specifier (32.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (32.5-8: main)
Shifting token IDENTIFIER (32.5-8: main)
Entering state 13
Reading a token: Next token is token '(' (32.9: )
Shifting token '(' (32.9: )
Entering state 16
Reading a token: Next token is token ')' (32.10: )
Shifting token ')' (32.10: )
Entering state 20
Reducing stack by rule 14 (line 244):
   $1 = token IDENTIFIER (32.5-8: main)
   $2 = token '(' (32.9: )
   $3 = token ')' (32.10: )
-> $$ = nterm fun_declarator (32.5-10: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (32.11: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (32.11: )
Shifting token '{' (32.11: )
Entering state 24
Reading a token: Next token is token STRUCT (33.2-7: )
Shifting token STRUCT (33.2-7: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (33.9-10: s1)
Shifting token IDENTIFIER (33.9-10: s1)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (33.2-7: )
   $2 = token IDENTIFIER (33.9-10: s1)
-> $$ = nterm type_specifier (33.2-10: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (33.12: a)
Shifting token IDENTIFIER (33.12: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (33.12: a)
-> $$ = nterm declarator_arr (33.12: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ',' (33.13: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (33.12: )
-> $$ = nterm declarator (33.12: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (33.12: )
-> $$ = nterm declarator_list (33.12: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ',' (33.13: )
Shifting token ',' (33.13: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (33.14: b)
Shifting token IDENTIFIER (33.14: b)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (33.14: b)
-> $$ = nterm declarator_arr (33.14: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (33.15: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (33.14: )
-> $$ = nterm declarator (33.14: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (33.12: )
   $2 = token ',' (33.13: )
   $3 = nterm declarator (33.14: )
-> $$ = nterm declarator_list (33.12-14: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (33.15: )
Shifting token ';' (33.15: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (33.2-10: )
   $2 = nterm declarator_list (33.12-14: )
   $3 = token ';' (33.15: )
-> $$ = nterm declaration (33.2-15: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (33.2-15: )
-> $$ = nterm declaration_list (33.2-15: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (34.2-4: )
Shifting token INT (34.2-4: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (34.2-4: )
-> $$ = nterm type_specifier (34.2-4: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (34.6: x)
Shifting token IDENTIFIER (34.6: x)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (34.6: x)
-> $$ = nterm declarator_arr (34.6: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (34.7: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (34.6: )
-> $$ = nterm declarator (34.6: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (34.6: )
-> $$ = nterm declarator_list (34.6: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (34.7: )
Shifting token ';' (34.7: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (34.2-4: )
   $2 = nterm declarator_list (34.6: )
   $3 = token ';' (34.7: )
-> $$ = nterm declaration (34.2-7: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (33.2-15: )
   $2 = nterm declaration (34.2-7: )
-> $$ = nterm declaration_list (33.2-34.7: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (35.2-4: foo)
Shifting token IDENTIFIER (35.2-4: foo)
Entering state 40
Reading a token: Next token is token '(' (35.5: )
Shifting token '(' (35.5: )
Entering state 82
Reading a token: Next token is token INT_CONSTANT (35.6: 1)
Shifting token INT_CONSTANT (35.6: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (35.6: 1)
-> $$ = nterm primary_expression (35.6: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (35.6: )
-> $$ = nterm postfix_expression (35.6: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (35.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (35.6: )
-> $$ = nterm unary_expression (35.6: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (35.6: )
-> $$ = nterm multiplicative_expression (35.6: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (35.7: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (35.6: )
-> $$ = nterm additive_expression (35.6: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (35.7: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (35.6: )
-> $$ = nterm relational_expression (35.6: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (35.7: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (35.6: )
-> $$ = nterm equality_expression (35.6: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (35.7: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (35.6: )
-> $$ = nterm logical_and_expression (35.6: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (35.7: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (35.6: )
-> $$ = nterm expression (35.6: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (35.7: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (35.6: )
-> $$ = nterm expression_list (35.6: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (35.7: )
Shifting token ',' (35.7: )
Entering state 148
Reading a token: Next token is token '&' (35.9: )
Shifting token '&' (35.9: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (35.9: )
-> $$ = nterm unary_operator (35.9: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (35.10: a)
Shifting token IDENTIFIER (35.10: a)
Entering state 71
Reading a token: Next token is token ')' (35.11: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (35.10: a)
-> $$ = nterm primary_expression (35.10: )
Stack now 60 148 119 82 40 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (35.10: )
-> $$ = nterm postfix_expression (35.10: )
Stack now 60 148 119 82 40 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (35.11: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (35.10: )
-> $$ = nterm unary_expression (35.10: )
Stack now 60 148 119 82 40 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (35.9: )
   $2 = nterm unary_expression (35.10: )
-> $$ = nterm unary_expression (35.9-10: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (35.9-10: )
-> $$ = nterm multiplicative_expression (35.9-10: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (35.11: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (35.9-10: )
-> $$ = nterm additive_expression (35.9-10: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (35.11: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (35.9-10: )
-> $$ = nterm relational_expression (35.9-10: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (35.11: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (35.9-10: )
-> $$ = nterm equality_expression (35.9-10: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (35.11: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (35.9-10: )
-> $$ = nterm logical_and_expression (35.9-10: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (35.11: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (35.9-10: )
-> $$ = nterm expression (35.9-10: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (35.11: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (35.6: )
   $2 = token ',' (35.7: )
   $3 = nterm expression (35.9-10: )
-> $$ = nterm expression_list (35.6-10: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (35.11: )
Shifting token ')' (35.11: )
Entering state 147
Reading a token: Next token is token ';' (35.12: )
Shifting token ';' (35.12: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (35.2-4: foo)
   $2 = token '(' (35.5: )
   $3 = nterm expression_list (35.6-10: )
   $4 = token ')' (35.11: )
   $5 = token ';' (35.12: )
-> $$ = nterm procedure_call (35.2-12: )
Stack now 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (35.2-12: )
-> $$ = nterm statement (35.2-12: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (35.2-12: )
-> $$ = nterm statement_list (35.2-12: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (36.2-4: foo)
Shifting token IDENTIFIER (36.2-4: foo)
Entering state 40
Reading a token: Next token is token '(' (36.5: )
Shifting token '(' (36.5: )
Entering state 82
Reading a token: Next token is token INT_CONSTANT (36.6: 0)
Shifting token INT_CONSTANT (36.6: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (36.6: 0)
-> $$ = nterm primary_expression (36.6: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (36.6: )
-> $$ = nterm postfix_expression (36.6: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (36.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (36.6: )
-> $$ = nterm unary_expression (36.6: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (36.6: )
-> $$ = nterm multiplicative_expression (36.6: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (36.7: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (36.6: )
-> $$ = nterm additive_expression (36.6: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (36.7: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (36.6: )
-> $$ = nterm relational_expression (36.6: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (36.7: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (36.6: )
-> $$ = nterm equality_expression (36.6: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (36.7: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (36.6: )
-> $$ = nterm logical_and_expression (36.6: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (36.7: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (36.6: )
-> $$ = nterm expression (36.6: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (36.7: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (36.6: )
-> $$ = nterm expression_list (36.6: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (36.7: )
Shifting token ',' (36.7: )
Entering state 148
Reading a token: Next token is token '&' (36.9: )
Shifting token '&' (36.9: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (36.9: )
-> $$ = nterm unary_operator (36.9: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (36.10: b)
Shifting token IDENTIFIER (36.10: b)
Entering state 71
Reading a token: Next token is token ')' (36.11: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (36.10: b)
-> $$ = nterm primary_expression (36.10: )
Stack now 60 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (36.10: )
-> $$ = nterm postfix_expression (36.10: )
Stack now 60 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (36.11: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (36.10: )
-> $$ = nterm unary_expression (36.10: )
Stack now 60 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (36.9: )
   $2 = nterm unary_expression (36.10: )
-> $$ = nterm unary_expression (36.9-10: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (36.9-10: )
-> $$ = nterm multiplicative_expression (36.9-10: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (36.11: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (36.9-10: )
-> $$ = nterm additive_expression (36.9-10: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (36.11: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (36.9-10: )
-> $$ = nterm relational_expression (36.9-10: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (36.11: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (36.9-10: )
-> $$ = nterm equality_expression (36.9-10: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (36.11: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (36.9-10: )
-> $$ = nterm logical_and_expression (36.9-10: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (36.11: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (36.9-10: )
-> $$ = nterm expression (36.9-10: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (36.11: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (36.6: )
   $2 = token ',' (36.7: )
   $3 = nterm expression (36.9-10: )
-> $$ = nterm expression_list (36.6-10: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (36.11: )
Shifting token ')' (36.11: )
Entering state 147
Reading a token: Next token is token ';' (36.12: )
Shifting token ';' (36.12: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (36.2-4: foo)
   $2 = token '(' (36.5: )
   $3 = nterm expression_list (36.6-10: )
   $4 = token ')' (36.11: )
   $5 = token ';' (36.12: )
-> $$ = nterm procedure_call (36.2-12: )
Stack now 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (36.2-12: )
-> $$ = nterm statement (36.2-12: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (35.2-12: )
   $2 = nterm statement (36.2-12: )
-> $$ = nterm statement_list (35.2-36.12: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (37.2: x)
Shifting token IDENTIFIER (37.2: x)
Entering state 40
Reading a token: Next token is token '=' (37.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (37.2: x)
-> $$ = nterm primary_expression (37.2: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (37.2: )
-> $$ = nterm postfix_expression (37.2: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (37.3: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (37.2: )
-> $$ = nterm unary_expression (37.2: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (37.3: )
Shifting token '=' (37.3: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (37.4: 1)
Shifting token INT_CONSTANT (37.4: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (37.4: 1)
-> $$ = nterm primary_expression (37.4: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (37.4: )
-> $$ = nterm postfix_expression (37.4: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (37.5: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (37.4: )
-> $$ = nterm unary_expression (37.4: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (37.4: )
-> $$ = nterm multiplicative_expression (37.4: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (37.5: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (37.4: )
-> $$ = nterm additive_expression (37.4: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (37.5: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (37.4: )
-> $$ = nterm relational_expression (37.4: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (37.5: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (37.4: )
-> $$ = nterm equality_expression (37.4: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (37.5: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (37.4: )
-> $$ = nterm logical_and_expression (37.4: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (37.5: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (37.4: )
-> $$ = nterm expression (37.4: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (37.5: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (37.2: )
   $2 = token '=' (37.3: )
   $3 = nterm expression (37.4: )
-> $$ = nterm assignment_expression (37.2-4: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (37.5: )
Shifting token ';' (37.5: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (37.2-4: )
   $2 = token ';' (37.5: )
-> $$ = nterm assignment_statement (37.2-5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (37.2-5: )
-> $$ = nterm statement (37.2-5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (35.2-36.12: )
   $2 = nterm statement (37.2-5: )
-> $$ = nterm statement_list (35.2-37.5: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (38.2: a)
Shifting token IDENTIFIER (38.2: a)
Entering state 40
Reading a token: Next token is token '.' (38.3: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (38.2: a)
-> $$ = nterm primary_expression (38.2: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (38.2: )
-> $$ = nterm postfix_expression (38.2: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '.' (38.3: )
Shifting token '.' (38.3: )
Entering state 93
Reading a token: Next token is token IDENTIFIER (38.4: b)
Shifting token IDENTIFIER (38.4: b)
Entering state 126
Reducing stack by rule 68 (line 1300):
   $1 = nterm postfix_expression (38.2: )
   $2 = token '.' (38.3: )
   $3 = token IDENTIFIER (38.4: b)
-> $$ = nterm postfix_expression (38.2-4: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (38.5: )
Shifting token '[' (38.5: )
Entering state 91
Reading a token: Next token is token IDENTIFIER (38.6: x)
Shifting token IDENTIFIER (38.6: x)
Entering state 71
Reading a token: Next token is token INC_OP (38.7-8: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (38.6: x)
-> $$ = nterm primary_expression (38.6: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (38.6: )
-> $$ = nterm postfix_expression (38.6: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 58
Next token is token INC_OP (38.7-8: )
Shifting token INC_OP (38.7-8: )
Entering state 94
Reducing stack by rule 70 (line 1336):
   $1 = nterm postfix_expression (38.6: )
   $2 = token INC_OP (38.7-8: )
-> $$ = nterm postfix_expression (38.6-8: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ']' (38.9: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (38.6-8: )
-> $$ = nterm unary_expression (38.6-8: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (38.6-8: )
-> $$ = nterm multiplicative_expression (38.6-8: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (38.9: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (38.6-8: )
-> $$ = nterm additive_expression (38.6-8: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (38.9: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (38.6-8: )
-> $$ = nterm relational_expression (38.6-8: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (38.9: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (38.6-8: )
-> $$ = nterm equality_expression (38.6-8: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (38.9: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (38.6-8: )
-> $$ = nterm logical_and_expression (38.6-8: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (38.9: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (38.6-8: )
-> $$ = nterm expression (38.6-8: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (38.9: )
Shifting token ']' (38.9: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (38.2-4: )
   $2 = token '[' (38.5: )
   $3 = nterm expression (38.6-8: )
   $4 = token ']' (38.9: )
-> $$ = nterm postfix_expression (38.2-9: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (38.11: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (38.2-9: )
-> $$ = nterm unary_expression (38.2-9: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (38.11: )
Shifting token '=' (38.11: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (38.13: b)
Shifting token IDENTIFIER (38.13: b)
Entering state 71
Reading a token: Next token is token '.' (38.14: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (38.13: b)
-> $$ = nterm primary_expression (38.13: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (38.13: )
-> $$ = nterm postfix_expression (38.13: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '.' (38.14: )
Shifting token '.' (38.14: )
Entering state 93
Reading a token: Next token is token IDENTIFIER (38.15: b)
Shifting token IDENTIFIER (38.15: b)
Entering state 126
Reducing stack by rule 68 (line 1300):
   $1 = nterm postfix_expression (38.13: )
   $2 = token '.' (38.14: )
   $3 = token IDENTIFIER (38.15: b)
-> $$ = nterm postfix_expression (38.13-15: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (38.16: )
Shifting token '[' (38.16: )
Entering state 91
Reading a token: Next token is token IDENTIFIER (38.17: x)
Shifting token IDENTIFIER (38.17: x)
Entering state 71
Reading a token: Next token is token ']' (38.18: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (38.17: x)
-> $$ = nterm primary_expression (38.17: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (38.17: )
-> $$ = nterm postfix_expression (38.17: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ']' (38.18: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (38.17: )
-> $$ = nterm unary_expression (38.17: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (38.17: )
-> $$ = nterm multiplicative_expression (38.17: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (38.18: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (38.17: )
-> $$ = nterm additive_expression (38.17: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (38.18: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (38.17: )
-> $$ = nterm relational_expression (38.17: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (38.18: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (38.17: )
-> $$ = nterm equality_expression (38.17: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (38.18: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (38.17: )
-> $$ = nterm logical_and_expression (38.17: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (38.18: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (38.17: )
-> $$ = nterm expression (38.17: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (38.18: )
Shifting token ']' (38.18: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (38.13-15: )
   $2 = token '[' (38.16: )
   $3 = nterm expression (38.17: )
   $4 = token ']' (38.18: )
-> $$ = nterm postfix_expression (38.13-18: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (38.19: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (38.13-18: )
-> $$ = nterm unary_expression (38.13-18: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (38.13-18: )
-> $$ = nterm multiplicative_expression (38.13-18: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (38.19: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (38.13-18: )
-> $$ = nterm additive_expression (38.13-18: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (38.19: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (38.13-18: )
-> $$ = nterm relational_expression (38.13-18: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (38.19: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (38.13-18: )
-> $$ = nterm equality_expression (38.13-18: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (38.19: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (38.13-18: )
-> $$ = nterm logical_and_expression (38.13-18: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (38.19: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (38.13-18: )
-> $$ = nterm expression (38.13-18: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (38.19: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (38.2-9: )
   $2 = token '=' (38.11: )
   $3 = nterm expression (38.13-18: )
-> $$ = nterm assignment_expression (38.2-18: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (38.19: )
Shifting token ';' (38.19: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (38.2-18: )
   $2 = token ';' (38.19: )
-> $$ = nterm assignment_statement (38.2-19: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (38.2-19: )
-> $$ = nterm statement (38.2-19: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (35.2-37.5: )
   $2 = nterm statement (38.2-19: )
-> $$ = nterm statement_list (35.2-38.19: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (39.2-7: printf)
Shifting token IDENTIFIER (39.2-7: printf)
Entering state 40
Reading a token: Next token is token '(' (39.8: )
Shifting token '(' (39.8: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (39.9-22: "%f, %f, %d\n")
Shifting token STRING_LITERAL (39.9-22: "%f, %f, %d\n")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (39.9-22: "%f, %f, %d\n")
-> $$ = nterm primary_expression (39.9-22: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (39.9-22: )
-> $$ = nterm postfix_expression (39.9-22: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (39.23: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (39.9-22: )
-> $$ = nterm unary_expression (39.9-22: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (39.9-22: )
-> $$ = nterm multiplicative_expression (39.9-22: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (39.23: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (39.9-22: )
-> $$ = nterm additive_expression (39.9-22: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (39.23: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (39.9-22: )
-> $$ = nterm relational_expression (39.9-22: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (39.23: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (39.9-22: )
-> $$ = nterm equality_expression (39.9-22: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (39.23: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (39.9-22: )
-> $$ = nterm logical_and_expression (39.9-22: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (39.23: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (39.9-22: )
-> $$ = nterm expression (39.9-22: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (39.23: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (39.9-22: )
-> $$ = nterm expression_list (39.9-22: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (39.23: )
Shifting token ',' (39.23: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (39.25: a)
Shifting token IDENTIFIER (39.25: a)
Entering state 71
Reading a token: Next token is token '.' (39.26: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (39.25: a)
-> $$ = nterm primary_expression (39.25: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (39.25: )
-> $$ = nterm postfix_expression (39.25: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '.' (39.26: )
Shifting token '.' (39.26: )
Entering state 93
Reading a token: Next token is token IDENTIFIER (39.27: b)
Shifting token IDENTIFIER (39.27: b)
Entering state 126
Reducing stack by rule 68 (line 1300):
   $1 = nterm postfix_expression (39.25: )
   $2 = token '.' (39.26: )
   $3 = token IDENTIFIER (39.27: b)
-> $$ = nterm postfix_expression (39.25-27: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (39.28: )
Shifting token '[' (39.28: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (39.29: 1)
Shifting token INT_CONSTANT (39.29: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (39.29: 1)
-> $$ = nterm primary_expression (39.29: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (39.29: )
-> $$ = nterm postfix_expression (39.29: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ']' (39.30: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (39.29: )
-> $$ = nterm unary_expression (39.29: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (39.29: )
-> $$ = nterm multiplicative_expression (39.29: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (39.30: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (39.29: )
-> $$ = nterm additive_expression (39.29: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (39.30: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (39.29: )
-> $$ = nterm relational_expression (39.29: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (39.30: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (39.29: )
-> $$ = nterm equality_expression (39.29: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (39.30: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (39.29: )
-> $$ = nterm logical_and_expression (39.29: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (39.30: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (39.29: )
-> $$ = nterm expression (39.29: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (39.30: )
Shifting token ']' (39.30: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (39.25-27: )
   $2 = token '[' (39.28: )
   $3 = nterm expression (39.29: )
   $4 = token ']' (39.30: )
-> $$ = nterm postfix_expression (39.25-30: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (39.31: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (39.25-30: )
-> $$ = nterm unary_expression (39.25-30: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (39.25-30: )
-> $$ = nterm multiplicative_expression (39.25-30: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (39.31: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (39.25-30: )
-> $$ = nterm additive_expression (39.25-30: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (39.31: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (39.25-30: )
-> $$ = nterm relational_expression (39.25-30: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (39.31: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (39.25-30: )
-> $$ = nterm equality_expression (39.25-30: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (39.31: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (39.25-30: )
-> $$ = nterm logical_and_expression (39.25-30: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (39.31: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (39.25-30: )
-> $$ = nterm expression (39.25-30: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (39.31: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (39.9-22: )
   $2 = token ',' (39.23: )
   $3 = nterm expression (39.25-30: )
-> $$ = nterm expression_list (39.9-30: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (39.31: )
Shifting token ',' (39.31: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (39.33: b)
Shifting token IDENTIFIER (39.33: b)
Entering state 71
Reading a token: Next token is token '.' (39.34: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (39.33: b)
-> $$ = nterm primary_expression (39.33: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (39.33: )
-> $$ = nterm postfix_expression (39.33: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '.' (39.34: )
Shifting token '.' (39.34: )
Entering state 93
Reading a token: Next token is token IDENTIFIER (39.35: b)
Shifting token IDENTIFIER (39.35: b)
Entering state 126
Reducing stack by rule 68 (line 1300):
   $1 = nterm postfix_expression (39.33: )
   $2 = token '.' (39.34: )
   $3 = token IDENTIFIER (39.35: b)
-> $$ = nterm postfix_expression (39.33-35: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (39.36: )
Shifting token '[' (39.36: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (39.37: 2)
Shifting token INT_CONSTANT (39.37: 2)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (39.37: 2)
-> $$ = nterm primary_expression (39.37: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (39.37: )
-> $$ = nterm postfix_expression (39.37: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ']' (39.38: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (39.37: )
-> $$ = nterm unary_expression (39.37: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (39.37: )
-> $$ = nterm multiplicative_expression (39.37: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (39.38: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (39.37: )
-> $$ = nterm additive_expression (39.37: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (39.38: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (39.37: )
-> $$ = nterm relational_expression (39.37: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (39.38: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (39.37: )
-> $$ = nterm equality_expression (39.37: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (39.38: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (39.37: )
-> $$ = nterm logical_and_expression (39.37: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (39.38: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (39.37: )
-> $$ = nterm expression (39.37: )
Stack now 91 58 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (39.38: )
Shifting token ']' (39.38: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (39.33-35: )
   $2 = token '[' (39.36: )
   $3 = nterm expression (39.37: )
   $4 = token ']' (39.38: )
-> $$ = nterm postfix_expression (39.33-38: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (39.39: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (39.33-38: )
-> $$ = nterm unary_expression (39.33-38: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (39.33-38: )
-> $$ = nterm multiplicative_expression (39.33-38: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (39.39: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (39.33-38: )
-> $$ = nterm additive_expression (39.33-38: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (39.39: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (39.33-38: )
-> $$ = nterm relational_expression (39.33-38: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (39.39: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (39.33-38: )
-> $$ = nterm equality_expression (39.33-38: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (39.39: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (39.33-38: )
-> $$ = nterm logical_and_expression (39.33-38: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (39.39: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (39.33-38: )
-> $$ = nterm expression (39.33-38: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (39.39: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (39.9-30: )
   $2 = token ',' (39.31: )
   $3 = nterm expression (39.33-38: )
-> $$ = nterm expression_list (39.9-38: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (39.39: )
Shifting token ',' (39.39: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (39.41: x)
Shifting token IDENTIFIER (39.41: x)
Entering state 71
Reading a token: Next token is token ')' (39.42: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (39.41: x)
-> $$ = nterm primary_expression (39.41: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (39.41: )
-> $$ = nterm postfix_expression (39.41: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (39.42: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (39.41: )
-> $$ = nterm unary_expression (39.41: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (39.41: )
-> $$ = nterm multiplicative_expression (39.41: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (39.42: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (39.41: )
-> $$ = nterm additive_expression (39.41: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (39.42: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (39.41: )
-> $$ = nterm relational_expression (39.41: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (39.42: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (39.41: )
-> $$ = nterm equality_expression (39.41: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (39.42: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (39.41: )
-> $$ = nterm logical_and_expression (39.41: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (39.42: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (39.41: )
-> $$ = nterm expression (39.41: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (39.42: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (39.9-38: )
   $2 = token ',' (39.39: )
   $3 = nterm expression (39.41: )
-> $$ = nterm expression_list (39.9-41: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (39.42: )
Shifting token ')' (39.42: )
Entering state 147
Reading a token: Next token is token ';' (39.43: )
Shifting token ';' (39.43: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (39.2-7: printf)
   $2 = token '(' (39.8: )
   $3 = nterm expression_list (39.9-41: )
   $4 = token ')' (39.42: )
   $5 = token ';' (39.43: )
-> $$ = nterm procedure_call (39.2-43: )
Stack now 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (39.2-43: )
-> $$ = nterm statement (39.2-43: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (35.2-38.19: )
   $2 = nterm statement (39.2-43: )
-> $$ = nterm statement_list (35.2-39.43: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (40.1: )
Shifting token '}' (40.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (32.11: )
   $2 = nterm declaration_list (33.2-34.7: )
   $3 = nterm statement_list (35.2-39.43: )
   $4 = token '}' (40.1: )
-> $$ = nterm compound_statement (32.11-40.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (32.1-3: )
   $2 = nterm fun_declarator (32.5-10: )
   $3 = nterm $@2 (32.11: )
   $4 = nterm compound_statement (32.11-40.1: )
-> $$ = nterm function_definition (32.1-40.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (2.1-30.1: )
   $2 = nterm function_definition (32.1-40.1: )
-> $$ = nterm translation_unit (2.1-40.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token $end (40.1: )
Shifting token $end (40.1: )
Entering state 10
Cleanup: popping token $end (40.1: )
Cleanup: popping nterm translation_unit (2.1-40.1: )
