Starting parse
Entering state 0
Reading a token: Next token is token INT (1.1-3: )
Shifting token INT (1.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (1.1-3: )
-> $$ = nterm type_specifier (1.1-3: )
Stack now 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (1.5-8: main)
Shifting token IDENTIFIER (1.5-8: main)
Entering state 13
Reading a token: Next token is token '(' (1.9: )
Shifting token '(' (1.9: )
Entering state 16
Reading a token: Next token is token ')' (1.10: )
Shifting token ')' (1.10: )
Entering state 20
Reducing stack by rule 14 (line 244):
   $1 = token IDENTIFIER (1.5-8: main)
   $2 = token '(' (1.9: )
   $3 = token ')' (1.10: )
-> $$ = nterm fun_declarator (1.5-10: )
Stack now 8 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (1.11: )
Stack now 14 8 0
Entering state 17
Reading a token: Next token is token '{' (2.1: )
Shifting token '{' (2.1: )
Entering state 24
Reading a token: Next token is token INT (3.5-7: )
Shifting token INT (3.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (3.5-7: )
-> $$ = nterm type_specifier (3.5-7: )
Stack now 24 17 14 8 0
Entering state 26
Reading a token: Next token is token '*' (3.9: )
Shifting token '*' (3.9: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (3.10: a)
Shifting token IDENTIFIER (3.10: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.10: a)
-> $$ = nterm declarator_arr (3.10: )
Stack now 31 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ',' (3.11: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.10: )
-> $$ = nterm declarator (3.10: )
Stack now 31 26 24 17 14 8 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (3.9: )
   $2 = nterm declarator (3.10: )
-> $$ = nterm declarator (3.9-10: )
Stack now 26 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (3.9-10: )
-> $$ = nterm declarator_list (3.9-10: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ',' (3.11: )
Shifting token ',' (3.11: )
Entering state 96
Reading a token: Next token is token '*' (3.13: )
Shifting token '*' (3.13: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (3.14: b)
Shifting token IDENTIFIER (3.14: b)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.14: b)
-> $$ = nterm declarator_arr (3.14: )
Stack now 31 96 65 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (3.15: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.14: )
-> $$ = nterm declarator (3.14: )
Stack now 31 96 65 26 24 17 14 8 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (3.13: )
   $2 = nterm declarator (3.14: )
-> $$ = nterm declarator (3.13-14: )
Stack now 96 65 26 24 17 14 8 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (3.9-10: )
   $2 = token ',' (3.11: )
   $3 = nterm declarator (3.13-14: )
-> $$ = nterm declarator_list (3.9-14: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ';' (3.15: )
Shifting token ';' (3.15: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (3.5-7: )
   $2 = nterm declarator_list (3.9-14: )
   $3 = token ';' (3.15: )
-> $$ = nterm declaration (3.5-15: )
Stack now 24 17 14 8 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (3.5-15: )
-> $$ = nterm declaration_list (3.5-15: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token FLOAT (4.5-9: )
Shifting token FLOAT (4.5-9: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (4.5-9: )
-> $$ = nterm type_specifier (4.5-9: )
Stack now 52 24 17 14 8 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (4.11: c)
Shifting token IDENTIFIER (4.11: c)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (4.11: c)
-> $$ = nterm declarator_arr (4.11: )
Stack now 26 52 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (4.12: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (4.11: )
-> $$ = nterm declarator (4.11: )
Stack now 26 52 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (4.11: )
-> $$ = nterm declarator_list (4.11: )
Stack now 26 52 24 17 14 8 0
Entering state 65
Next token is token ';' (4.12: )
Shifting token ';' (4.12: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (4.5-9: )
   $2 = nterm declarator_list (4.11: )
   $3 = token ';' (4.12: )
-> $$ = nterm declaration (4.5-12: )
Stack now 52 24 17 14 8 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (3.5-15: )
   $2 = nterm declaration (4.5-12: )
-> $$ = nterm declaration_list (3.5-4.12: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token INT (5.5-7: )
Shifting token INT (5.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (5.5-7: )
-> $$ = nterm type_specifier (5.5-7: )
Stack now 52 24 17 14 8 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (5.9: d)
Shifting token IDENTIFIER (5.9: d)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (5.9: d)
-> $$ = nterm declarator_arr (5.9: )
Stack now 26 52 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (5.10: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (5.9: )
-> $$ = nterm declarator (5.9: )
Stack now 26 52 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (5.9: )
-> $$ = nterm declarator_list (5.9: )
Stack now 26 52 24 17 14 8 0
Entering state 65
Next token is token ';' (5.10: )
Shifting token ';' (5.10: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (5.5-7: )
   $2 = nterm declarator_list (5.9: )
   $3 = token ';' (5.10: )
-> $$ = nterm declaration (5.5-10: )
Stack now 52 24 17 14 8 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (3.5-4.12: )
   $2 = nterm declaration (5.5-10: )
-> $$ = nterm declaration_list (3.5-5.10: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (6.5: d)
Shifting token IDENTIFIER (6.5: d)
Entering state 40
Reading a token: Next token is token '=' (6.7: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (6.5: d)
-> $$ = nterm primary_expression (6.5: )
Stack now 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (6.5: )
-> $$ = nterm postfix_expression (6.5: )
Stack now 52 24 17 14 8 0
Entering state 58
Next token is token '=' (6.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (6.5: )
-> $$ = nterm unary_expression (6.5: )
Stack now 52 24 17 14 8 0
Entering state 57
Next token is token '=' (6.7: )
Shifting token '=' (6.7: )
Entering state 90
Reading a token: Next token is token '-' (6.9: )
Shifting token '-' (6.9: )
Entering state 49
Reducing stack by rule 78 (line 1404):
   $1 = token '-' (6.9: )
-> $$ = nterm unary_operator (6.9: )
Stack now 90 57 52 24 17 14 8 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (6.10: c)
Shifting token IDENTIFIER (6.10: c)
Entering state 71
Reading a token: Next token is token ';' (6.11: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (6.10: c)
-> $$ = nterm primary_expression (6.10: )
Stack now 60 90 57 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (6.10: )
-> $$ = nterm postfix_expression (6.10: )
Stack now 60 90 57 52 24 17 14 8 0
Entering state 58
Next token is token ';' (6.11: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (6.10: )
-> $$ = nterm unary_expression (6.10: )
Stack now 60 90 57 52 24 17 14 8 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (6.9: )
   $2 = nterm unary_expression (6.10: )
-> $$ = nterm unary_expression (6.9-10: )
Stack now 90 57 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (6.9-10: )
-> $$ = nterm multiplicative_expression (6.9-10: )
Stack now 90 57 52 24 17 14 8 0
Entering state 77
Next token is token ';' (6.11: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (6.9-10: )
-> $$ = nterm additive_expression (6.9-10: )
Stack now 90 57 52 24 17 14 8 0
Entering state 76
Next token is token ';' (6.11: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (6.9-10: )
-> $$ = nterm relational_expression (6.9-10: )
Stack now 90 57 52 24 17 14 8 0
Entering state 75
Next token is token ';' (6.11: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (6.9-10: )
-> $$ = nterm equality_expression (6.9-10: )
Stack now 90 57 52 24 17 14 8 0
Entering state 74
Next token is token ';' (6.11: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (6.9-10: )
-> $$ = nterm logical_and_expression (6.9-10: )
Stack now 90 57 52 24 17 14 8 0
Entering state 73
Next token is token ';' (6.11: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (6.9-10: )
-> $$ = nterm expression (6.9-10: )
Stack now 90 57 52 24 17 14 8 0
Entering state 123
Next token is token ';' (6.11: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (6.5: )
   $2 = token '=' (6.7: )
   $3 = nterm expression (6.9-10: )
-> $$ = nterm assignment_expression (6.5-10: )
Stack now 52 24 17 14 8 0
Entering state 56
Next token is token ';' (6.11: )
Shifting token ';' (6.11: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (6.5-10: )
   $2 = token ';' (6.11: )
-> $$ = nterm assignment_statement (6.5-11: )
Stack now 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (6.5-11: )
-> $$ = nterm statement (6.5-11: )
Stack now 52 24 17 14 8 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (6.5-11: )
-> $$ = nterm statement_list (6.5-11: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (7.5: a)
Shifting token IDENTIFIER (7.5: a)
Entering state 40
Reading a token: Next token is token '=' (7.7: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (7.5: a)
-> $$ = nterm primary_expression (7.5: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (7.5: )
-> $$ = nterm postfix_expression (7.5: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (7.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (7.5: )
-> $$ = nterm unary_expression (7.5: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (7.7: )
Shifting token '=' (7.7: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (7.9: 0)
Shifting token INT_CONSTANT (7.9: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (7.9: 0)
-> $$ = nterm primary_expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (7.9: )
-> $$ = nterm postfix_expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (7.10: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (7.9: )
-> $$ = nterm unary_expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (7.9: )
-> $$ = nterm multiplicative_expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (7.10: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (7.9: )
-> $$ = nterm additive_expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (7.10: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (7.9: )
-> $$ = nterm relational_expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (7.10: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (7.9: )
-> $$ = nterm equality_expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (7.10: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (7.9: )
-> $$ = nterm logical_and_expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (7.10: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (7.9: )
-> $$ = nterm expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (7.10: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (7.5: )
   $2 = token '=' (7.7: )
   $3 = nterm expression (7.9: )
-> $$ = nterm assignment_expression (7.5-9: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (7.10: )
Shifting token ';' (7.10: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (7.5-9: )
   $2 = token ';' (7.10: )
-> $$ = nterm assignment_statement (7.5-10: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (7.5-10: )
-> $$ = nterm statement (7.5-10: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (6.5-11: )
   $2 = nterm statement (7.5-10: )
-> $$ = nterm statement_list (6.5-7.10: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token '}' (12.1: )
Shifting token '}' (12.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (2.1: )
   $2 = nterm declaration_list (3.5-5.10: )
   $3 = nterm statement_list (6.5-7.10: )
   $4 = token '}' (12.1: )
-> $$ = nterm compound_statement (2.1-12.1: )
Stack now 17 14 8 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (1.1-3: )
   $2 = nterm fun_declarator (1.5-10: )
   $3 = nterm $@2 (1.11: )
   $4 = nterm compound_statement (2.1-12.1: )
-> $$ = nterm function_definition (1.1-12.1: )
Stack now 0
Entering state 7
Reducing stack by rule 2 (line 126):
   $1 = nterm function_definition (1.1-12.1: )
-> $$ = nterm translation_unit (1.1-12.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token STRUCT (13.1-6: )
Shifting token STRUCT (13.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (13.8: s)
Shifting token IDENTIFIER (13.8: s)
Entering state 9
Reading a token: Next token is token '{' (14.1: )
Reducing stack by rule 5 (line 138):
-> $$ = nterm $@1 (13.9: )
Stack now 9 4 5 0
Entering state 15
Next token is token '{' (14.1: )
Shifting token '{' (14.1: )
Entering state 18
Reading a token: Next token is token INT (15.5-7: )
Shifting token INT (15.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (15.5-7: )
-> $$ = nterm type_specifier (15.5-7: )
Stack now 18 15 9 4 5 0
Entering state 26
Reading a token: Next token is token '*' (15.8: )
Shifting token '*' (15.8: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (15.10: x)
Shifting token IDENTIFIER (15.10: x)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (15.10: x)
-> $$ = nterm declarator_arr (15.10: )
Stack now 31 26 18 15 9 4 5 0
Entering state 32
Reading a token: Next token is token ';' (15.11: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (15.10: )
-> $$ = nterm declarator (15.10: )
Stack now 31 26 18 15 9 4 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (15.8: )
   $2 = nterm declarator (15.10: )
-> $$ = nterm declarator (15.8-10: )
Stack now 26 18 15 9 4 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (15.8-10: )
-> $$ = nterm declarator_list (15.8-10: )
Stack now 26 18 15 9 4 5 0
Entering state 65
Next token is token ';' (15.11: )
Shifting token ';' (15.11: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (15.5-7: )
   $2 = nterm declarator_list (15.8-10: )
   $3 = token ';' (15.11: )
-> $$ = nterm declaration (15.5-11: )
Stack now 18 15 9 4 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (15.5-11: )
-> $$ = nterm declaration_list (15.5-11: )
Stack now 18 15 9 4 5 0
Entering state 28
Reading a token: Next token is token '}' (16.1: )
Shifting token '}' (16.1: )
Entering state 66
Reading a token: Next token is token ';' (16.2: )
Shifting token ';' (16.2: )
Entering state 98
Reducing stack by rule 6 (line 137):
   $1 = token STRUCT (13.1-6: )
   $2 = token IDENTIFIER (13.8: s)
   $3 = nterm $@1 (13.9: )
   $4 = token '{' (14.1: )
   $5 = nterm declaration_list (15.5-11: )
   $6 = token '}' (16.1: )
   $7 = token ';' (16.2: )
-> $$ = nterm struct_specifier (13.1-16.2: )
Stack now 5 0
Entering state 11
Reducing stack by rule 3 (line 129):
   $1 = nterm translation_unit (1.1-12.1: )
   $2 = nterm struct_specifier (13.1-16.2: )
-> $$ = nterm translation_unit (1.1-16.2: )
Stack now 0
Entering state 5
Reading a token: Next token is token STRUCT (18.1-6: )
Shifting token STRUCT (18.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (18.8: s)
Shifting token IDENTIFIER (18.8: s)
Entering state 9
Reading a token: Next token is token IDENTIFIER (18.10: f)
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (18.1-6: )
   $2 = token IDENTIFIER (18.8: s)
-> $$ = nterm type_specifier (18.1-8: )
Stack now 5 0
Entering state 8
Next token is token IDENTIFIER (18.10: f)
Shifting token IDENTIFIER (18.10: f)
Entering state 13
Reading a token: Next token is token '(' (18.11: )
Shifting token '(' (18.11: )
Entering state 16
Reading a token: Next token is token INT (18.12-14: )
Shifting token INT (18.12-14: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (18.12-14: )
-> $$ = nterm type_specifier (18.12-14: )
Stack now 16 13 8 5 0
Entering state 21
Reading a token: Next token is token IDENTIFIER (18.16: a)
Shifting token IDENTIFIER (18.16: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (18.16: a)
-> $$ = nterm declarator_arr (18.16: )
Stack now 21 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ')' (18.17: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (18.16: )
-> $$ = nterm declarator (18.16: )
Stack now 21 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (18.12-14: )
   $2 = nterm declarator (18.16: )
-> $$ = nterm parameter_declaration (18.12-16: )
Stack now 16 13 8 5 0
Entering state 23
Reducing stack by rule 15 (line 250):
   $1 = nterm parameter_declaration (18.12-16: )
-> $$ = nterm parameter_list (18.12-16: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ')' (18.17: )
Shifting token ')' (18.17: )
Entering state 34
Reducing stack by rule 13 (line 240):
   $1 = token IDENTIFIER (18.10: f)
   $2 = token '(' (18.11: )
   $3 = nterm parameter_list (18.12-16: )
   $4 = token ')' (18.17: )
-> $$ = nterm fun_declarator (18.10-17: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (18.18: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (19.1: )
Shifting token '{' (19.1: )
Entering state 24
Reading a token: Next token is token STRUCT (20.5-10: )
Shifting token STRUCT (20.5-10: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (20.12: s)
Shifting token IDENTIFIER (20.12: s)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (20.5-10: )
   $2 = token IDENTIFIER (20.12: s)
-> $$ = nterm type_specifier (20.5-12: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (20.14: b)
Shifting token IDENTIFIER (20.14: b)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (20.14: b)
-> $$ = nterm declarator_arr (20.14: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (20.15: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (20.14: )
-> $$ = nterm declarator (20.14: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (20.14: )
-> $$ = nterm declarator_list (20.14: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (20.15: )
Shifting token ';' (20.15: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (20.5-12: )
   $2 = nterm declarator_list (20.14: )
   $3 = token ';' (20.15: )
-> $$ = nterm declaration (20.5-15: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (20.5-15: )
-> $$ = nterm declaration_list (20.5-15: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (21.5-7: )
Shifting token INT (21.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (21.5-7: )
-> $$ = nterm type_specifier (21.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (21.9-11: arr)
Shifting token IDENTIFIER (21.9-11: arr)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (21.9-11: arr)
-> $$ = nterm declarator_arr (21.9-11: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (21.12: )
Shifting token '[' (21.12: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (21.13-14: 10)
Shifting token INT_CONSTANT (21.13-14: 10)
Entering state 99
Reading a token: Next token is token ']' (21.15: )
Shifting token ']' (21.15: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (21.9-11: )
   $2 = token '[' (21.12: )
   $3 = token INT_CONSTANT (21.13-14: 10)
   $4 = token ']' (21.15: )
-> $$ = nterm declarator_arr (21.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (21.16: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (21.9-15: )
-> $$ = nterm declarator (21.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (21.9-15: )
-> $$ = nterm declarator_list (21.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (21.16: )
Shifting token ';' (21.16: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (21.5-7: )
   $2 = nterm declarator_list (21.9-15: )
   $3 = token ';' (21.16: )
-> $$ = nterm declaration (21.5-16: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (20.5-15: )
   $2 = nterm declaration (21.5-16: )
-> $$ = nterm declaration_list (20.5-21.16: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token '}' (23.1: )
Shifting token '}' (23.1: )
Entering state 85
Reducing stack by rule 29 (line 432):
   $1 = token '{' (19.1: )
   $2 = nterm declaration_list (20.5-21.16: )
   $3 = token '}' (23.1: )
-> $$ = nterm compound_statement (19.1-23.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (18.1-8: )
   $2 = nterm fun_declarator (18.10-17: )
   $3 = nterm $@2 (18.18: )
   $4 = nterm compound_statement (19.1-23.1: )
-> $$ = nterm function_definition (18.1-23.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (1.1-16.2: )
   $2 = nterm function_definition (18.1-23.1: )
-> $$ = nterm translation_unit (1.1-23.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (24.1-3: )
Shifting token INT (24.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (24.1-3: )
-> $$ = nterm type_specifier (24.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (24.6: h)
Shifting token IDENTIFIER (24.6: h)
Entering state 13
Reading a token: Next token is token '(' (24.7: )
Shifting token '(' (24.7: )
Entering state 16
Reading a token: Next token is token INT (24.8-10: )
Shifting token INT (24.8-10: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (24.8-10: )
-> $$ = nterm type_specifier (24.8-10: )
Stack now 16 13 8 5 0
Entering state 21
Reading a token: Next token is token '*' (24.11: )
Shifting token '*' (24.11: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (24.13: a)
Shifting token IDENTIFIER (24.13: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (24.13: a)
-> $$ = nterm declarator_arr (24.13: )
Stack now 31 21 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ')' (24.14: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (24.13: )
-> $$ = nterm declarator (24.13: )
Stack now 31 21 16 13 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (24.11: )
   $2 = nterm declarator (24.13: )
-> $$ = nterm declarator (24.11-13: )
Stack now 21 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (24.8-10: )
   $2 = nterm declarator (24.11-13: )
-> $$ = nterm parameter_declaration (24.8-13: )
Stack now 16 13 8 5 0
Entering state 23
Reducing stack by rule 15 (line 250):
   $1 = nterm parameter_declaration (24.8-13: )
-> $$ = nterm parameter_list (24.8-13: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ')' (24.14: )
Shifting token ')' (24.14: )
Entering state 34
Reducing stack by rule 13 (line 240):
   $1 = token IDENTIFIER (24.6: h)
   $2 = token '(' (24.7: )
   $3 = nterm parameter_list (24.8-13: )
   $4 = token ')' (24.14: )
-> $$ = nterm fun_declarator (24.6-14: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (24.15: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (25.1: )
Shifting token '{' (25.1: )
Entering state 24
Reading a token: Next token is token '}' (28.1: )
Shifting token '}' (28.1: )
Entering state 46
Reducing stack by rule 27 (line 426):
   $1 = token '{' (25.1: )
   $2 = token '}' (28.1: )
-> $$ = nterm compound_statement (25.1-28.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (24.1-3: )
   $2 = nterm fun_declarator (24.6-14: )
   $3 = nterm $@2 (24.15: )
   $4 = nterm compound_statement (25.1-28.1: )
-> $$ = nterm function_definition (24.1-28.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (1.1-23.1: )
   $2 = nterm function_definition (24.1-28.1: )
-> $$ = nterm translation_unit (1.1-28.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token VOID (30.1-4: )
Shifting token VOID (30.1-4: )
Entering state 1
Reducing stack by rule 9 (line 225):
   $1 = token VOID (30.1-4: )
-> $$ = nterm type_specifier (30.1-4: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (30.6: g)
Shifting token IDENTIFIER (30.6: g)
Entering state 13
Reading a token: Next token is token '(' (30.8: )
Shifting token '(' (30.8: )
Entering state 16
Reading a token: Next token is token ')' (30.9: )
Shifting token ')' (30.9: )
Entering state 20
Reducing stack by rule 14 (line 244):
   $1 = token IDENTIFIER (30.6: g)
   $2 = token '(' (30.8: )
   $3 = token ')' (30.9: )
-> $$ = nterm fun_declarator (30.6-9: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (30.10: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (31.1: )
Shifting token '{' (31.1: )
Entering state 24
Reading a token: Next token is token STRUCT (32.5-10: )
Shifting token STRUCT (32.5-10: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (32.12: s)
Shifting token IDENTIFIER (32.12: s)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (32.5-10: )
   $2 = token IDENTIFIER (32.12: s)
-> $$ = nterm type_specifier (32.5-12: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (32.14: a)
Shifting token IDENTIFIER (32.14: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (32.14: a)
-> $$ = nterm declarator_arr (32.14: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (32.15: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (32.14: )
-> $$ = nterm declarator (32.14: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (32.14: )
-> $$ = nterm declarator_list (32.14: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (32.15: )
Shifting token ';' (32.15: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (32.5-12: )
   $2 = nterm declarator_list (32.14: )
   $3 = token ';' (32.15: )
-> $$ = nterm declaration (32.5-15: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (32.5-15: )
-> $$ = nterm declaration_list (32.5-15: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (33.5-7: )
Shifting token INT (33.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (33.5-7: )
-> $$ = nterm type_specifier (33.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token '*' (33.8: )
Shifting token '*' (33.8: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (33.10: b)
Shifting token IDENTIFIER (33.10: b)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (33.10: b)
-> $$ = nterm declarator_arr (33.10: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (33.11: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (33.10: )
-> $$ = nterm declarator (33.10: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (33.8: )
   $2 = nterm declarator (33.10: )
-> $$ = nterm declarator (33.8-10: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (33.8-10: )
-> $$ = nterm declarator_list (33.8-10: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (33.11: )
Shifting token ';' (33.11: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (33.5-7: )
   $2 = nterm declarator_list (33.8-10: )
   $3 = token ';' (33.11: )
-> $$ = nterm declaration (33.5-11: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (32.5-15: )
   $2 = nterm declaration (33.5-11: )
-> $$ = nterm declaration_list (32.5-33.11: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (34.5-7: )
Shifting token INT (34.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (34.5-7: )
-> $$ = nterm type_specifier (34.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (34.9: c)
Shifting token IDENTIFIER (34.9: c)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (34.9: c)
-> $$ = nterm declarator_arr (34.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (34.10: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (34.9: )
-> $$ = nterm declarator (34.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (34.9: )
-> $$ = nterm declarator_list (34.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (34.10: )
Shifting token ';' (34.10: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (34.5-7: )
   $2 = nterm declarator_list (34.9: )
   $3 = token ';' (34.10: )
-> $$ = nterm declaration (34.5-10: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (32.5-33.11: )
   $2 = nterm declaration (34.5-10: )
-> $$ = nterm declaration_list (32.5-34.10: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token '*' (37.5: )
Shifting token '*' (37.5: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (37.5: )
-> $$ = nterm unary_operator (37.5: )
Stack now 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token '(' (37.6: )
Shifting token '(' (37.6: )
Entering state 44
Reading a token: Next token is token IDENTIFIER (37.7: f)
Shifting token IDENTIFIER (37.7: f)
Entering state 71
Reading a token: Next token is token '(' (37.8: )
Shifting token '(' (37.8: )
Entering state 100
Reading a token: Next token is token INT_CONSTANT (37.9: 1)
Shifting token INT_CONSTANT (37.9: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (37.9: 1)
-> $$ = nterm primary_expression (37.9: )
Stack now 100 71 44 60 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (37.9: )
-> $$ = nterm postfix_expression (37.9: )
Stack now 100 71 44 60 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (37.10: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (37.9: )
-> $$ = nterm unary_expression (37.9: )
Stack now 100 71 44 60 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (37.9: )
-> $$ = nterm multiplicative_expression (37.9: )
Stack now 100 71 44 60 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (37.10: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (37.9: )
-> $$ = nterm additive_expression (37.9: )
Stack now 100 71 44 60 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (37.10: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (37.9: )
-> $$ = nterm relational_expression (37.9: )
Stack now 100 71 44 60 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (37.10: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (37.9: )
-> $$ = nterm equality_expression (37.9: )
Stack now 100 71 44 60 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (37.10: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (37.9: )
-> $$ = nterm logical_and_expression (37.9: )
Stack now 100 71 44 60 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (37.10: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (37.9: )
-> $$ = nterm expression (37.9: )
Stack now 100 71 44 60 52 24 17 14 8 5 0
Entering state 118
Next token is token ')' (37.10: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (37.9: )
-> $$ = nterm expression_list (37.9: )
Stack now 100 71 44 60 52 24 17 14 8 5 0
Entering state 130
Next token is token ')' (37.10: )
Shifting token ')' (37.10: )
Entering state 150
Reducing stack by rule 67 (line 1250):
   $1 = token IDENTIFIER (37.7: f)
   $2 = token '(' (37.8: )
   $3 = nterm expression_list (37.9: )
   $4 = token ')' (37.10: )
-> $$ = nterm postfix_expression (37.7-10: )
Stack now 44 60 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '.' (37.11: )
Shifting token '.' (37.11: )
Entering state 93
Reading a token: Next token is token IDENTIFIER (37.12: x)
Shifting token IDENTIFIER (37.12: x)
Entering state 126
Reducing stack by rule 68 (line 1300):
   $1 = nterm postfix_expression (37.7-10: )
   $2 = token '.' (37.11: )
   $3 = token IDENTIFIER (37.12: x)
-> $$ = nterm postfix_expression (37.7-12: )
Stack now 44 60 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (37.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (37.7-12: )
-> $$ = nterm unary_expression (37.7-12: )
Stack now 44 60 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (37.7-12: )
-> $$ = nterm multiplicative_expression (37.7-12: )
Stack now 44 60 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (37.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (37.7-12: )
-> $$ = nterm additive_expression (37.7-12: )
Stack now 44 60 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (37.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (37.7-12: )
-> $$ = nterm relational_expression (37.7-12: )
Stack now 44 60 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (37.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (37.7-12: )
-> $$ = nterm equality_expression (37.7-12: )
Stack now 44 60 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (37.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (37.7-12: )
-> $$ = nterm logical_and_expression (37.7-12: )
Stack now 44 60 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (37.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (37.7-12: )
-> $$ = nterm expression (37.7-12: )
Stack now 44 60 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (37.13: )
Shifting token ')' (37.13: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (37.6: )
   $2 = nterm expression (37.7-12: )
   $3 = token ')' (37.13: )
-> $$ = nterm primary_expression (37.6-13: )
Stack now 60 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (37.6-13: )
-> $$ = nterm postfix_expression (37.6-13: )
Stack now 60 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (37.14: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (37.6-13: )
-> $$ = nterm unary_expression (37.6-13: )
Stack now 60 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (37.5: )
   $2 = nterm unary_expression (37.6-13: )
-> $$ = nterm unary_expression (37.5-13: )
Stack now 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (37.14: )
Shifting token '=' (37.14: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (37.15: c)
Shifting token IDENTIFIER (37.15: c)
Entering state 71
Reading a token: Next token is token ';' (37.16: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (37.15: c)
-> $$ = nterm primary_expression (37.15: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (37.15: )
-> $$ = nterm postfix_expression (37.15: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (37.16: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (37.15: )
-> $$ = nterm unary_expression (37.15: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (37.15: )
-> $$ = nterm multiplicative_expression (37.15: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (37.16: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (37.15: )
-> $$ = nterm additive_expression (37.15: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (37.16: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (37.15: )
-> $$ = nterm relational_expression (37.15: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (37.16: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (37.15: )
-> $$ = nterm equality_expression (37.15: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (37.16: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (37.15: )
-> $$ = nterm logical_and_expression (37.15: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (37.16: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (37.15: )
-> $$ = nterm expression (37.15: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (37.16: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (37.5-13: )
   $2 = token '=' (37.14: )
   $3 = nterm expression (37.15: )
-> $$ = nterm assignment_expression (37.5-15: )
Stack now 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (37.16: )
Shifting token ';' (37.16: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (37.5-15: )
   $2 = token ';' (37.16: )
-> $$ = nterm assignment_statement (37.5-16: )
Stack now 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (37.5-16: )
-> $$ = nterm statement (37.5-16: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (37.5-16: )
-> $$ = nterm statement_list (37.5-16: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (38.5: h)
Shifting token IDENTIFIER (38.5: h)
Entering state 40
Reading a token: Next token is token '(' (38.6: )
Shifting token '(' (38.6: )
Entering state 82
Reading a token: Next token is token INT_CONSTANT (38.7: 0)
Shifting token INT_CONSTANT (38.7: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (38.7: 0)
-> $$ = nterm primary_expression (38.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (38.7: )
-> $$ = nterm postfix_expression (38.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (38.8: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (38.7: )
-> $$ = nterm unary_expression (38.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (38.7: )
-> $$ = nterm multiplicative_expression (38.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (38.8: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (38.7: )
-> $$ = nterm additive_expression (38.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (38.8: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (38.7: )
-> $$ = nterm relational_expression (38.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (38.8: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (38.7: )
-> $$ = nterm equality_expression (38.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (38.8: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (38.7: )
-> $$ = nterm logical_and_expression (38.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (38.8: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (38.7: )
-> $$ = nterm expression (38.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ')' (38.8: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (38.7: )
-> $$ = nterm expression_list (38.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (38.8: )
Shifting token ')' (38.8: )
Entering state 147
Reading a token: Next token is token ';' (38.9: )
Shifting token ';' (38.9: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (38.5: h)
   $2 = token '(' (38.6: )
   $3 = nterm expression_list (38.7: )
   $4 = token ')' (38.8: )
   $5 = token ';' (38.9: )
-> $$ = nterm procedure_call (38.5-9: )
Stack now 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (38.5-9: )
-> $$ = nterm statement (38.5-9: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (37.5-16: )
   $2 = nterm statement (38.5-9: )
-> $$ = nterm statement_list (37.5-38.9: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (40.1: )
Shifting token '}' (40.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (31.1: )
   $2 = nterm declaration_list (32.5-34.10: )
   $3 = nterm statement_list (37.5-38.9: )
   $4 = token '}' (40.1: )
-> $$ = nterm compound_statement (31.1-40.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (30.1-4: )
   $2 = nterm fun_declarator (30.6-9: )
   $3 = nterm $@2 (30.10: )
   $4 = nterm compound_statement (31.1-40.1: )
-> $$ = nterm function_definition (30.1-40.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (1.1-28.1: )
   $2 = nterm function_definition (30.1-40.1: )
-> $$ = nterm translation_unit (1.1-40.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token $end (41.1-42.0: )
Shifting token $end (41.1-42.0: )
Entering state 10
Cleanup: popping token $end (41.1-42.0: )
Cleanup: popping nterm translation_unit (1.1-40.1: )
