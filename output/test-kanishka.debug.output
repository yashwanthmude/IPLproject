Starting parse
Entering state 0
Reading a token: Next token is token INT (1.1-3: )
Shifting token INT (1.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (1.1-3: )
-> $$ = nterm type_specifier (1.1-3: )
Stack now 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (1.5: p)
Shifting token IDENTIFIER (1.5: p)
Entering state 13
Reading a token: Next token is token '(' (1.6: )
Shifting token '(' (1.6: )
Entering state 16
Reading a token: Next token is token INT (1.7-9: )
Shifting token INT (1.7-9: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (1.7-9: )
-> $$ = nterm type_specifier (1.7-9: )
Stack now 16 13 8 0
Entering state 21
Reading a token: Next token is token IDENTIFIER (1.11: y)
Shifting token IDENTIFIER (1.11: y)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (1.11: y)
-> $$ = nterm declarator_arr (1.11: )
Stack now 21 16 13 8 0
Entering state 32
Reading a token: Next token is token '[' (1.12: )
Shifting token '[' (1.12: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (1.13-14: 20)
Shifting token INT_CONSTANT (1.13-14: 20)
Entering state 99
Reading a token: Next token is token ']' (1.15: )
Shifting token ']' (1.15: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (1.11: )
   $2 = token '[' (1.12: )
   $3 = token INT_CONSTANT (1.13-14: 20)
   $4 = token ']' (1.15: )
-> $$ = nterm declarator_arr (1.11-15: )
Stack now 21 16 13 8 0
Entering state 32
Reading a token: Next token is token ')' (1.16: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (1.11-15: )
-> $$ = nterm declarator (1.11-15: )
Stack now 21 16 13 8 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (1.7-9: )
   $2 = nterm declarator (1.11-15: )
-> $$ = nterm parameter_declaration (1.7-15: )
Stack now 16 13 8 0
Entering state 23
Reducing stack by rule 15 (line 250):
   $1 = nterm parameter_declaration (1.7-15: )
-> $$ = nterm parameter_list (1.7-15: )
Stack now 16 13 8 0
Entering state 22
Next token is token ')' (1.16: )
Shifting token ')' (1.16: )
Entering state 34
Reducing stack by rule 13 (line 240):
   $1 = token IDENTIFIER (1.5: p)
   $2 = token '(' (1.6: )
   $3 = nterm parameter_list (1.7-15: )
   $4 = token ')' (1.16: )
-> $$ = nterm fun_declarator (1.5-16: )
Stack now 8 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (1.17: )
Stack now 14 8 0
Entering state 17
Reading a token: Next token is token '{' (1.17: )
Shifting token '{' (1.17: )
Entering state 24
Reading a token: Next token is token INT (2.4-6: )
Shifting token INT (2.4-6: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (2.4-6: )
-> $$ = nterm type_specifier (2.4-6: )
Stack now 24 17 14 8 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (2.8: x)
Shifting token IDENTIFIER (2.8: x)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (2.8: x)
-> $$ = nterm declarator_arr (2.8: )
Stack now 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token '[' (2.10: )
Shifting token '[' (2.10: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (2.11-12: 20)
Shifting token INT_CONSTANT (2.11-12: 20)
Entering state 99
Reading a token: Next token is token ']' (2.13: )
Shifting token ']' (2.13: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (2.8: )
   $2 = token '[' (2.10: )
   $3 = token INT_CONSTANT (2.11-12: 20)
   $4 = token ']' (2.13: )
-> $$ = nterm declarator_arr (2.8-13: )
Stack now 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (2.14: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (2.8-13: )
-> $$ = nterm declarator (2.8-13: )
Stack now 26 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (2.8-13: )
-> $$ = nterm declarator_list (2.8-13: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ';' (2.14: )
Shifting token ';' (2.14: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (2.4-6: )
   $2 = nterm declarator_list (2.8-13: )
   $3 = token ';' (2.14: )
-> $$ = nterm declaration (2.4-14: )
Stack now 24 17 14 8 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (2.4-14: )
-> $$ = nterm declaration_list (2.4-14: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token VOID (3.4-7: )
Shifting token VOID (3.4-7: )
Entering state 1
Reducing stack by rule 9 (line 225):
   $1 = token VOID (3.4-7: )
-> $$ = nterm type_specifier (3.4-7: )
Stack now 52 24 17 14 8 0
Entering state 26
Reading a token: Next token is token '*' (3.9: )
Shifting token '*' (3.9: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (3.10: k)
Shifting token IDENTIFIER (3.10: k)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.10: k)
-> $$ = nterm declarator_arr (3.10: )
Stack now 31 26 52 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (3.11: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.10: )
-> $$ = nterm declarator (3.10: )
Stack now 31 26 52 24 17 14 8 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (3.9: )
   $2 = nterm declarator (3.10: )
-> $$ = nterm declarator (3.9-10: )
Stack now 26 52 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (3.9-10: )
-> $$ = nterm declarator_list (3.9-10: )
Stack now 26 52 24 17 14 8 0
Entering state 65
Next token is token ';' (3.11: )
Shifting token ';' (3.11: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (3.4-7: )
   $2 = nterm declarator_list (3.9-10: )
   $3 = token ';' (3.11: )
-> $$ = nterm declaration (3.4-11: )
Stack now 52 24 17 14 8 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (2.4-14: )
   $2 = nterm declaration (3.4-11: )
-> $$ = nterm declaration_list (2.4-3.11: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (4.4: y)
Shifting token IDENTIFIER (4.4: y)
Entering state 40
Reading a token: Next token is token '=' (4.5: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (4.4: y)
-> $$ = nterm primary_expression (4.4: )
Stack now 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (4.4: )
-> $$ = nterm postfix_expression (4.4: )
Stack now 52 24 17 14 8 0
Entering state 58
Next token is token '=' (4.5: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (4.4: )
-> $$ = nterm unary_expression (4.4: )
Stack now 52 24 17 14 8 0
Entering state 57
Next token is token '=' (4.5: )
Shifting token '=' (4.5: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (4.6: k)
Shifting token IDENTIFIER (4.6: k)
Entering state 71
Reading a token: Next token is token ';' (4.7: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (4.6: k)
-> $$ = nterm primary_expression (4.6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (4.6: )
-> $$ = nterm postfix_expression (4.6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 58
Next token is token ';' (4.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (4.6: )
-> $$ = nterm unary_expression (4.6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (4.6: )
-> $$ = nterm multiplicative_expression (4.6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 77
Next token is token ';' (4.7: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (4.6: )
-> $$ = nterm additive_expression (4.6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 76
Next token is token ';' (4.7: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (4.6: )
-> $$ = nterm relational_expression (4.6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 75
Next token is token ';' (4.7: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (4.6: )
-> $$ = nterm equality_expression (4.6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 74
Next token is token ';' (4.7: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (4.6: )
-> $$ = nterm logical_and_expression (4.6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 73
Next token is token ';' (4.7: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (4.6: )
-> $$ = nterm expression (4.6: )
Stack now 90 57 52 24 17 14 8 0
Entering state 123
Next token is token ';' (4.7: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (4.4: )
   $2 = token '=' (4.5: )
   $3 = nterm expression (4.6: )
-> $$ = nterm assignment_expression (4.4-6: )
Stack now 52 24 17 14 8 0
Entering state 56
Next token is token ';' (4.7: )
Shifting token ';' (4.7: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (4.4-6: )
   $2 = token ';' (4.7: )
-> $$ = nterm assignment_statement (4.4-7: )
Stack now 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (4.4-7: )
-> $$ = nterm statement (4.4-7: )
Stack now 52 24 17 14 8 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (4.4-7: )
-> $$ = nterm statement_list (4.4-7: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token '}' (5.1: )
Shifting token '}' (5.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (1.17: )
   $2 = nterm declaration_list (2.4-3.11: )
   $3 = nterm statement_list (4.4-7: )
   $4 = token '}' (5.1: )
-> $$ = nterm compound_statement (1.17-5.1: )
Stack now 17 14 8 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (1.1-3: )
   $2 = nterm fun_declarator (1.5-16: )
   $3 = nterm $@2 (1.17: )
   $4 = nterm compound_statement (1.17-5.1: )
-> $$ = nterm function_definition (1.1-5.1: )
Stack now 0
Entering state 7
Reducing stack by rule 2 (line 126):
   $1 = nterm function_definition (1.1-5.1: )
-> $$ = nterm translation_unit (1.1-5.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token STRUCT (7.1-6: )
Shifting token STRUCT (7.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (7.8: b)
Shifting token IDENTIFIER (7.8: b)
Entering state 9
Reading a token: Next token is token '{' (8.1: )
Reducing stack by rule 5 (line 138):
-> $$ = nterm $@1 (7.9: )
Stack now 9 4 5 0
Entering state 15
Next token is token '{' (8.1: )
Shifting token '{' (8.1: )
Entering state 18
Reading a token: Next token is token INT (9.5-7: )
Shifting token INT (9.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (9.5-7: )
-> $$ = nterm type_specifier (9.5-7: )
Stack now 18 15 9 4 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (9.9: x)
Shifting token IDENTIFIER (9.9: x)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (9.9: x)
-> $$ = nterm declarator_arr (9.9: )
Stack now 26 18 15 9 4 5 0
Entering state 32
Reading a token: Next token is token ';' (9.10: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (9.9: )
-> $$ = nterm declarator (9.9: )
Stack now 26 18 15 9 4 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (9.9: )
-> $$ = nterm declarator_list (9.9: )
Stack now 26 18 15 9 4 5 0
Entering state 65
Next token is token ';' (9.10: )
Shifting token ';' (9.10: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (9.5-7: )
   $2 = nterm declarator_list (9.9: )
   $3 = token ';' (9.10: )
-> $$ = nterm declaration (9.5-10: )
Stack now 18 15 9 4 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (9.5-10: )
-> $$ = nterm declaration_list (9.5-10: )
Stack now 18 15 9 4 5 0
Entering state 28
Reading a token: Next token is token '}' (10.1: )
Shifting token '}' (10.1: )
Entering state 66
Reading a token: Next token is token ';' (10.2: )
Shifting token ';' (10.2: )
Entering state 98
Reducing stack by rule 6 (line 137):
   $1 = token STRUCT (7.1-6: )
   $2 = token IDENTIFIER (7.8: b)
   $3 = nterm $@1 (7.9: )
   $4 = token '{' (8.1: )
   $5 = nterm declaration_list (9.5-10: )
   $6 = token '}' (10.1: )
   $7 = token ';' (10.2: )
-> $$ = nterm struct_specifier (7.1-10.2: )
Stack now 5 0
Entering state 11
Reducing stack by rule 3 (line 129):
   $1 = nterm translation_unit (1.1-5.1: )
   $2 = nterm struct_specifier (7.1-10.2: )
-> $$ = nterm translation_unit (1.1-10.2: )
Stack now 0
Entering state 5
Reading a token: Next token is token VOID (12.2-5: )
Shifting token VOID (12.2-5: )
Entering state 1
Reducing stack by rule 9 (line 225):
   $1 = token VOID (12.2-5: )
-> $$ = nterm type_specifier (12.2-5: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (12.7: f)
Shifting token IDENTIFIER (12.7: f)
Entering state 13
Reading a token: Next token is token '(' (12.8: )
Shifting token '(' (12.8: )
Entering state 16
Reading a token: Next token is token FLOAT (12.9-13: )
Shifting token FLOAT (12.9-13: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (12.9-13: )
-> $$ = nterm type_specifier (12.9-13: )
Stack now 16 13 8 5 0
Entering state 21
Reading a token: Next token is token IDENTIFIER (12.15: p)
Shifting token IDENTIFIER (12.15: p)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (12.15: p)
-> $$ = nterm declarator_arr (12.15: )
Stack now 21 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ')' (12.16: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (12.15: )
-> $$ = nterm declarator (12.15: )
Stack now 21 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (12.9-13: )
   $2 = nterm declarator (12.15: )
-> $$ = nterm parameter_declaration (12.9-15: )
Stack now 16 13 8 5 0
Entering state 23
Reducing stack by rule 15 (line 250):
   $1 = nterm parameter_declaration (12.9-15: )
-> $$ = nterm parameter_list (12.9-15: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ')' (12.16: )
Shifting token ')' (12.16: )
Entering state 34
Reducing stack by rule 13 (line 240):
   $1 = token IDENTIFIER (12.7: f)
   $2 = token '(' (12.8: )
   $3 = nterm parameter_list (12.9-15: )
   $4 = token ')' (12.16: )
-> $$ = nterm fun_declarator (12.7-16: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (12.17: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (13.1: )
Shifting token '{' (13.1: )
Entering state 24
Reading a token: Next token is token INT (14.5-7: )
Shifting token INT (14.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (14.5-7: )
-> $$ = nterm type_specifier (14.5-7: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (14.9: a)
Shifting token IDENTIFIER (14.9: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (14.9: a)
-> $$ = nterm declarator_arr (14.9: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (14.10: )
Shifting token '[' (14.10: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (14.11-12: 20)
Shifting token INT_CONSTANT (14.11-12: 20)
Entering state 99
Reading a token: Next token is token ']' (14.13: )
Shifting token ']' (14.13: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (14.9: )
   $2 = token '[' (14.10: )
   $3 = token INT_CONSTANT (14.11-12: 20)
   $4 = token ']' (14.13: )
-> $$ = nterm declarator_arr (14.9-13: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ',' (14.14: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (14.9-13: )
-> $$ = nterm declarator (14.9-13: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (14.9-13: )
-> $$ = nterm declarator_list (14.9-13: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ',' (14.14: )
Shifting token ',' (14.14: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (14.16: b)
Shifting token IDENTIFIER (14.16: b)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (14.16: b)
-> $$ = nterm declarator_arr (14.16: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (14.17: )
Shifting token '[' (14.17: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (14.18-19: 20)
Shifting token INT_CONSTANT (14.18-19: 20)
Entering state 99
Reading a token: Next token is token ']' (14.20: )
Shifting token ']' (14.20: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (14.16: )
   $2 = token '[' (14.17: )
   $3 = token INT_CONSTANT (14.18-19: 20)
   $4 = token ']' (14.20: )
-> $$ = nterm declarator_arr (14.16-20: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (14.21: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (14.16-20: )
-> $$ = nterm declarator (14.16-20: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (14.9-13: )
   $2 = token ',' (14.14: )
   $3 = nterm declarator (14.16-20: )
-> $$ = nterm declarator_list (14.9-20: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (14.21: )
Shifting token ';' (14.21: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (14.5-7: )
   $2 = nterm declarator_list (14.9-20: )
   $3 = token ';' (14.21: )
-> $$ = nterm declaration (14.5-21: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (14.5-21: )
-> $$ = nterm declaration_list (14.5-21: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (15.5-7: )
Shifting token INT (15.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (15.5-7: )
-> $$ = nterm type_specifier (15.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (15.9: x)
Shifting token IDENTIFIER (15.9: x)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (15.9: x)
-> $$ = nterm declarator_arr (15.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (15.10: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (15.9: )
-> $$ = nterm declarator (15.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (15.9: )
-> $$ = nterm declarator_list (15.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (15.10: )
Shifting token ';' (15.10: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (15.5-7: )
   $2 = nterm declarator_list (15.9: )
   $3 = token ';' (15.10: )
-> $$ = nterm declaration (15.5-10: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (14.5-21: )
   $2 = nterm declaration (15.5-10: )
-> $$ = nterm declaration_list (14.5-15.10: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (16.5: x)
Shifting token IDENTIFIER (16.5: x)
Entering state 40
Reading a token: Next token is token '=' (16.7: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.5: x)
-> $$ = nterm primary_expression (16.5: )
Stack now 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.5: )
-> $$ = nterm postfix_expression (16.5: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (16.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.5: )
-> $$ = nterm unary_expression (16.5: )
Stack now 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (16.7: )
Shifting token '=' (16.7: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (16.9: a)
Shifting token IDENTIFIER (16.9: a)
Entering state 71
Reading a token: Next token is token '<' (16.11: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.9: a)
-> $$ = nterm primary_expression (16.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.9: )
-> $$ = nterm postfix_expression (16.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 58
Next token is token '<' (16.11: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.9: )
-> $$ = nterm unary_expression (16.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.9: )
-> $$ = nterm multiplicative_expression (16.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 77
Next token is token '<' (16.11: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.9: )
-> $$ = nterm additive_expression (16.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token '<' (16.11: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.9: )
-> $$ = nterm relational_expression (16.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 75
Next token is token '<' (16.11: )
Shifting token '<' (16.11: )
Entering state 106
Reading a token: Next token is token IDENTIFIER (16.13: b)
Shifting token IDENTIFIER (16.13: b)
Entering state 71
Reading a token: Next token is token ';' (16.14: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.13: b)
-> $$ = nterm primary_expression (16.13: )
Stack now 106 75 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.13: )
-> $$ = nterm postfix_expression (16.13: )
Stack now 106 75 90 57 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (16.14: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.13: )
-> $$ = nterm unary_expression (16.13: )
Stack now 106 75 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.13: )
-> $$ = nterm multiplicative_expression (16.13: )
Stack now 106 75 90 57 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (16.14: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.13: )
-> $$ = nterm additive_expression (16.13: )
Stack now 106 75 90 57 52 24 17 14 8 5 0
Entering state 135
Next token is token ';' (16.14: )
Reducing stack by rule 52 (line 779):
   $1 = nterm relational_expression (16.9: )
   $2 = token '<' (16.11: )
   $3 = nterm additive_expression (16.13: )
-> $$ = nterm relational_expression (16.9-13: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (16.14: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.9-13: )
-> $$ = nterm equality_expression (16.9-13: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (16.14: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.9-13: )
-> $$ = nterm logical_and_expression (16.9-13: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (16.14: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.9-13: )
-> $$ = nterm expression (16.9-13: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (16.14: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (16.5: )
   $2 = token '=' (16.7: )
   $3 = nterm expression (16.9-13: )
-> $$ = nterm assignment_expression (16.5-13: )
Stack now 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (16.14: )
Shifting token ';' (16.14: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (16.5-13: )
   $2 = token ';' (16.14: )
-> $$ = nterm assignment_statement (16.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (16.5-14: )
-> $$ = nterm statement (16.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (16.5-14: )
-> $$ = nterm statement_list (16.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (17.5: x)
Shifting token IDENTIFIER (17.5: x)
Entering state 40
Reading a token: Next token is token '=' (17.7: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (17.5: x)
-> $$ = nterm primary_expression (17.5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.5: )
-> $$ = nterm postfix_expression (17.5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (17.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.5: )
-> $$ = nterm unary_expression (17.5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (17.7: )
Shifting token '=' (17.7: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (17.9: a)
Shifting token IDENTIFIER (17.9: a)
Entering state 71
Reading a token: Next token is token EQ_OP (17.11-12: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (17.9: a)
-> $$ = nterm primary_expression (17.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.9: )
-> $$ = nterm postfix_expression (17.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token EQ_OP (17.11-12: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.9: )
-> $$ = nterm unary_expression (17.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (17.9: )
-> $$ = nterm multiplicative_expression (17.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token EQ_OP (17.11-12: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (17.9: )
-> $$ = nterm additive_expression (17.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token EQ_OP (17.11-12: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (17.9: )
-> $$ = nterm relational_expression (17.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token EQ_OP (17.11-12: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (17.9: )
-> $$ = nterm equality_expression (17.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token EQ_OP (17.11-12: )
Shifting token EQ_OP (17.11-12: )
Entering state 104
Reading a token: Next token is token IDENTIFIER (17.14: b)
Shifting token IDENTIFIER (17.14: b)
Entering state 71
Reading a token: Next token is token ';' (17.15: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (17.14: b)
-> $$ = nterm primary_expression (17.14: )
Stack now 104 74 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.14: )
-> $$ = nterm postfix_expression (17.14: )
Stack now 104 74 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (17.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.14: )
-> $$ = nterm unary_expression (17.14: )
Stack now 104 74 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (17.14: )
-> $$ = nterm multiplicative_expression (17.14: )
Stack now 104 74 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (17.15: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (17.14: )
-> $$ = nterm additive_expression (17.14: )
Stack now 104 74 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (17.15: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (17.14: )
-> $$ = nterm relational_expression (17.14: )
Stack now 104 74 90 57 86 52 24 17 14 8 5 0
Entering state 133
Next token is token ';' (17.15: )
Reducing stack by rule 49 (line 701):
   $1 = nterm equality_expression (17.9: )
   $2 = token EQ_OP (17.11-12: )
   $3 = nterm relational_expression (17.14: )
-> $$ = nterm equality_expression (17.9-14: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (17.15: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (17.9-14: )
-> $$ = nterm logical_and_expression (17.9-14: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (17.15: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (17.9-14: )
-> $$ = nterm expression (17.9-14: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (17.15: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (17.5: )
   $2 = token '=' (17.7: )
   $3 = nterm expression (17.9-14: )
-> $$ = nterm assignment_expression (17.5-14: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (17.15: )
Shifting token ';' (17.15: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (17.5-14: )
   $2 = token ';' (17.15: )
-> $$ = nterm assignment_statement (17.5-15: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (17.5-15: )
-> $$ = nterm statement (17.5-15: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (16.5-14: )
   $2 = nterm statement (17.5-15: )
-> $$ = nterm statement_list (16.5-17.15: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (18.5: x)
Shifting token IDENTIFIER (18.5: x)
Entering state 40
Reading a token: Next token is token '=' (18.7: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (18.5: x)
-> $$ = nterm primary_expression (18.5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (18.5: )
-> $$ = nterm postfix_expression (18.5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (18.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (18.5: )
-> $$ = nterm unary_expression (18.5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (18.7: )
Shifting token '=' (18.7: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (18.9: a)
Shifting token IDENTIFIER (18.9: a)
Entering state 71
Reading a token: Next token is token NE_OP (18.11-12: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (18.9: a)
-> $$ = nterm primary_expression (18.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (18.9: )
-> $$ = nterm postfix_expression (18.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token NE_OP (18.11-12: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (18.9: )
-> $$ = nterm unary_expression (18.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (18.9: )
-> $$ = nterm multiplicative_expression (18.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token NE_OP (18.11-12: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (18.9: )
-> $$ = nterm additive_expression (18.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token NE_OP (18.11-12: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (18.9: )
-> $$ = nterm relational_expression (18.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token NE_OP (18.11-12: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (18.9: )
-> $$ = nterm equality_expression (18.9: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token NE_OP (18.11-12: )
Shifting token NE_OP (18.11-12: )
Entering state 105
Reading a token: Next token is token IDENTIFIER (18.14: b)
Shifting token IDENTIFIER (18.14: b)
Entering state 71
Reading a token: Next token is token ';' (18.15: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (18.14: b)
-> $$ = nterm primary_expression (18.14: )
Stack now 105 74 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (18.14: )
-> $$ = nterm postfix_expression (18.14: )
Stack now 105 74 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (18.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (18.14: )
-> $$ = nterm unary_expression (18.14: )
Stack now 105 74 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (18.14: )
-> $$ = nterm multiplicative_expression (18.14: )
Stack now 105 74 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (18.15: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (18.14: )
-> $$ = nterm additive_expression (18.14: )
Stack now 105 74 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (18.15: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (18.14: )
-> $$ = nterm relational_expression (18.14: )
Stack now 105 74 90 57 86 52 24 17 14 8 5 0
Entering state 134
Next token is token ';' (18.15: )
Reducing stack by rule 50 (line 739):
   $1 = nterm equality_expression (18.9: )
   $2 = token NE_OP (18.11-12: )
   $3 = nterm relational_expression (18.14: )
-> $$ = nterm equality_expression (18.9-14: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (18.15: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (18.9-14: )
-> $$ = nterm logical_and_expression (18.9-14: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (18.15: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (18.9-14: )
-> $$ = nterm expression (18.9-14: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (18.15: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (18.5: )
   $2 = token '=' (18.7: )
   $3 = nterm expression (18.9-14: )
-> $$ = nterm assignment_expression (18.5-14: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (18.15: )
Shifting token ';' (18.15: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (18.5-14: )
   $2 = token ';' (18.15: )
-> $$ = nterm assignment_statement (18.5-15: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (18.5-15: )
-> $$ = nterm statement (18.5-15: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (16.5-17.15: )
   $2 = nterm statement (18.5-15: )
-> $$ = nterm statement_list (16.5-18.15: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (19.1: )
Shifting token '}' (19.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (13.1: )
   $2 = nterm declaration_list (14.5-15.10: )
   $3 = nterm statement_list (16.5-18.15: )
   $4 = token '}' (19.1: )
-> $$ = nterm compound_statement (13.1-19.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (12.2-5: )
   $2 = nterm fun_declarator (12.7-16: )
   $3 = nterm $@2 (12.17: )
   $4 = nterm compound_statement (13.1-19.1: )
-> $$ = nterm function_definition (12.2-19.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (1.1-10.2: )
   $2 = nterm function_definition (12.2-19.1: )
-> $$ = nterm translation_unit (1.1-19.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (21.1-3: )
Shifting token INT (21.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (21.1-3: )
-> $$ = nterm type_specifier (21.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (21.5-8: main)
Shifting token IDENTIFIER (21.5-8: main)
Entering state 13
Reading a token: Next token is token '(' (21.9: )
Shifting token '(' (21.9: )
Entering state 16
Reading a token: Next token is token ')' (21.10: )
Shifting token ')' (21.10: )
Entering state 20
Reducing stack by rule 14 (line 244):
   $1 = token IDENTIFIER (21.5-8: main)
   $2 = token '(' (21.9: )
   $3 = token ')' (21.10: )
-> $$ = nterm fun_declarator (21.5-10: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (21.11: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (22.1: )
Shifting token '{' (22.1: )
Entering state 24
Reading a token: Next token is token STRUCT (23.5-10: )
Shifting token STRUCT (23.5-10: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (23.12: b)
Shifting token IDENTIFIER (23.12: b)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (23.5-10: )
   $2 = token IDENTIFIER (23.12: b)
-> $$ = nterm type_specifier (23.5-12: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (23.14: q)
Shifting token IDENTIFIER (23.14: q)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (23.14: q)
-> $$ = nterm declarator_arr (23.14: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (23.15: )
Shifting token '[' (23.15: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (23.16-17: 20)
Shifting token INT_CONSTANT (23.16-17: 20)
Entering state 99
Reading a token: Next token is token ']' (23.18: )
Shifting token ']' (23.18: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (23.14: )
   $2 = token '[' (23.15: )
   $3 = token INT_CONSTANT (23.16-17: 20)
   $4 = token ']' (23.18: )
-> $$ = nterm declarator_arr (23.14-18: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (23.19: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (23.14-18: )
-> $$ = nterm declarator (23.14-18: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (23.14-18: )
-> $$ = nterm declarator_list (23.14-18: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (23.19: )
Shifting token ';' (23.19: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (23.5-12: )
   $2 = nterm declarator_list (23.14-18: )
   $3 = token ';' (23.19: )
-> $$ = nterm declaration (23.5-19: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (23.5-19: )
-> $$ = nterm declaration_list (23.5-19: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (24.5-7: )
Shifting token INT (24.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (24.5-7: )
-> $$ = nterm type_specifier (24.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (24.9: k)
Shifting token IDENTIFIER (24.9: k)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (24.9: k)
-> $$ = nterm declarator_arr (24.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (24.10: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (24.9: )
-> $$ = nterm declarator (24.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (24.9: )
-> $$ = nterm declarator_list (24.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (24.10: )
Shifting token ';' (24.10: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (24.5-7: )
   $2 = nterm declarator_list (24.9: )
   $3 = token ';' (24.10: )
-> $$ = nterm declaration (24.5-10: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (23.5-19: )
   $2 = nterm declaration (24.5-10: )
-> $$ = nterm declaration_list (23.5-24.10: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (25.5: k)
Shifting token IDENTIFIER (25.5: k)
Entering state 40
Reading a token: Next token is token '=' (25.7: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (25.5: k)
-> $$ = nterm primary_expression (25.5: )
Stack now 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.5: )
-> $$ = nterm postfix_expression (25.5: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (25.7: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.5: )
-> $$ = nterm unary_expression (25.5: )
Stack now 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (25.7: )
Shifting token '=' (25.7: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (25.9: q)
Shifting token IDENTIFIER (25.9: q)
Entering state 71
Reading a token: Next token is token PTR_OP (25.10-11: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (25.9: q)
-> $$ = nterm primary_expression (25.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.9: )
-> $$ = nterm postfix_expression (25.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (25.10-11: )
Shifting token PTR_OP (25.10-11: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (25.12: x)
Shifting token IDENTIFIER (25.12: x)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (25.9: )
   $2 = token PTR_OP (25.10-11: )
   $3 = token IDENTIFIER (25.12: x)
-> $$ = nterm postfix_expression (25.9-12: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (25.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.9-12: )
-> $$ = nterm unary_expression (25.9-12: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (25.9-12: )
-> $$ = nterm multiplicative_expression (25.9-12: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (25.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (25.9-12: )
-> $$ = nterm additive_expression (25.9-12: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (25.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (25.9-12: )
-> $$ = nterm relational_expression (25.9-12: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (25.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (25.9-12: )
-> $$ = nterm equality_expression (25.9-12: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (25.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (25.9-12: )
-> $$ = nterm logical_and_expression (25.9-12: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (25.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (25.9-12: )
-> $$ = nterm expression (25.9-12: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (25.13: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (25.5: )
   $2 = token '=' (25.7: )
   $3 = nterm expression (25.9-12: )
-> $$ = nterm assignment_expression (25.5-12: )
Stack now 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (25.13: )
Shifting token ';' (25.13: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (25.5-12: )
   $2 = token ';' (25.13: )
-> $$ = nterm assignment_statement (25.5-13: )
Stack now 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (25.5-13: )
-> $$ = nterm statement (25.5-13: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (25.5-13: )
-> $$ = nterm statement_list (25.5-13: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (26.5: f)
Shifting token IDENTIFIER (26.5: f)
Entering state 40
Reading a token: Next token is token '(' (26.6: )
Shifting token '(' (26.6: )
Entering state 82
Reading a token: Next token is token IDENTIFIER (26.7: k)
Shifting token IDENTIFIER (26.7: k)
Entering state 71
Reading a token: Next token is token ')' (26.8: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (26.7: k)
-> $$ = nterm primary_expression (26.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (26.7: )
-> $$ = nterm postfix_expression (26.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (26.8: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (26.7: )
-> $$ = nterm unary_expression (26.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (26.7: )
-> $$ = nterm multiplicative_expression (26.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (26.8: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (26.7: )
-> $$ = nterm additive_expression (26.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (26.8: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (26.7: )
-> $$ = nterm relational_expression (26.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (26.8: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (26.7: )
-> $$ = nterm equality_expression (26.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (26.8: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (26.7: )
-> $$ = nterm logical_and_expression (26.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (26.8: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (26.7: )
-> $$ = nterm expression (26.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ')' (26.8: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (26.7: )
-> $$ = nterm expression_list (26.7: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (26.8: )
Shifting token ')' (26.8: )
Entering state 147
Reading a token: Next token is token ';' (26.9: )
Shifting token ';' (26.9: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (26.5: f)
   $2 = token '(' (26.6: )
   $3 = nterm expression_list (26.7: )
   $4 = token ')' (26.8: )
   $5 = token ';' (26.9: )
-> $$ = nterm procedure_call (26.5-9: )
Stack now 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (26.5-9: )
-> $$ = nterm statement (26.5-9: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (25.5-13: )
   $2 = nterm statement (26.5-9: )
-> $$ = nterm statement_list (25.5-26.9: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (27.1: )
Shifting token '}' (27.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (22.1: )
   $2 = nterm declaration_list (23.5-24.10: )
   $3 = nterm statement_list (25.5-26.9: )
   $4 = token '}' (27.1: )
-> $$ = nterm compound_statement (22.1-27.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (21.1-3: )
   $2 = nterm fun_declarator (21.5-10: )
   $3 = nterm $@2 (21.11: )
   $4 = nterm compound_statement (22.1-27.1: )
-> $$ = nterm function_definition (21.1-27.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (1.1-19.1: )
   $2 = nterm function_definition (21.1-27.1: )
-> $$ = nterm translation_unit (1.1-27.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (30.1-3: )
Shifting token INT (30.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (30.1-3: )
-> $$ = nterm type_specifier (30.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (30.5: g)
Shifting token IDENTIFIER (30.5: g)
Entering state 13
Reading a token: Next token is token '(' (30.7: )
Shifting token '(' (30.7: )
Entering state 16
Reading a token: Next token is token ')' (30.8: )
Shifting token ')' (30.8: )
Entering state 20
Reducing stack by rule 14 (line 244):
   $1 = token IDENTIFIER (30.5: g)
   $2 = token '(' (30.7: )
   $3 = token ')' (30.8: )
-> $$ = nterm fun_declarator (30.5-8: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (30.9: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (30.9: )
Shifting token '{' (30.9: )
Entering state 24
Reading a token: Next token is token INT (31.5-7: )
Shifting token INT (31.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (31.5-7: )
-> $$ = nterm type_specifier (31.5-7: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (31.9: x)
Shifting token IDENTIFIER (31.9: x)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (31.9: x)
-> $$ = nterm declarator_arr (31.9: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (31.10: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (31.9: )
-> $$ = nterm declarator (31.9: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (31.9: )
-> $$ = nterm declarator_list (31.9: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (31.10: )
Shifting token ';' (31.10: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (31.5-7: )
   $2 = nterm declarator_list (31.9: )
   $3 = token ';' (31.10: )
-> $$ = nterm declaration (31.5-10: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (31.5-10: )
-> $$ = nterm declaration_list (31.5-10: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (32.5-7: )
Shifting token INT (32.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (32.5-7: )
-> $$ = nterm type_specifier (32.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token '*' (32.9: )
Shifting token '*' (32.9: )
Entering state 31
Reading a token: Next token is token '*' (32.10: )
Shifting token '*' (32.10: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (32.11: a)
Shifting token IDENTIFIER (32.11: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (32.11: a)
-> $$ = nterm declarator_arr (32.11: )
Stack now 31 31 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (32.12: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (32.11: )
-> $$ = nterm declarator (32.11: )
Stack now 31 31 26 52 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (32.10: )
   $2 = nterm declarator (32.11: )
-> $$ = nterm declarator (32.10-11: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (32.9: )
   $2 = nterm declarator (32.10-11: )
-> $$ = nterm declarator (32.9-11: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (32.9-11: )
-> $$ = nterm declarator_list (32.9-11: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (32.12: )
Shifting token ';' (32.12: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (32.5-7: )
   $2 = nterm declarator_list (32.9-11: )
   $3 = token ';' (32.12: )
-> $$ = nterm declaration (32.5-12: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (31.5-10: )
   $2 = nterm declaration (32.5-12: )
-> $$ = nterm declaration_list (31.5-32.12: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (33.5-7: )
Shifting token INT (33.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (33.5-7: )
-> $$ = nterm type_specifier (33.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token '*' (33.9: )
Shifting token '*' (33.9: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (33.10: b)
Shifting token IDENTIFIER (33.10: b)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (33.10: b)
-> $$ = nterm declarator_arr (33.10: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (33.11: )
Shifting token '[' (33.11: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (33.12: 2)
Shifting token INT_CONSTANT (33.12: 2)
Entering state 99
Reading a token: Next token is token ']' (33.13: )
Shifting token ']' (33.13: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (33.10: )
   $2 = token '[' (33.11: )
   $3 = token INT_CONSTANT (33.12: 2)
   $4 = token ']' (33.13: )
-> $$ = nterm declarator_arr (33.10-13: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (33.14: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (33.10-13: )
-> $$ = nterm declarator (33.10-13: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (33.9: )
   $2 = nterm declarator (33.10-13: )
-> $$ = nterm declarator (33.9-13: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (33.9-13: )
-> $$ = nterm declarator_list (33.9-13: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (33.14: )
Shifting token ';' (33.14: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (33.5-7: )
   $2 = nterm declarator_list (33.9-13: )
   $3 = token ';' (33.14: )
-> $$ = nterm declaration (33.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (31.5-32.12: )
   $2 = nterm declaration (33.5-14: )
-> $$ = nterm declaration_list (31.5-33.14: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IF (34.5-6: )
Shifting token IF (34.5-6: )
Entering state 39
Reading a token: Next token is token '(' (34.8: )
Shifting token '(' (34.8: )
Entering state 81
Reading a token: Next token is token IDENTIFIER (34.9: a)
Shifting token IDENTIFIER (34.9: a)
Entering state 71
Reading a token: Next token is token EQ_OP (34.10-11: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (34.9: a)
-> $$ = nterm primary_expression (34.9: )
Stack now 81 39 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (34.9: )
-> $$ = nterm postfix_expression (34.9: )
Stack now 81 39 52 24 17 14 8 5 0
Entering state 58
Next token is token EQ_OP (34.10-11: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (34.9: )
-> $$ = nterm unary_expression (34.9: )
Stack now 81 39 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (34.9: )
-> $$ = nterm multiplicative_expression (34.9: )
Stack now 81 39 52 24 17 14 8 5 0
Entering state 77
Next token is token EQ_OP (34.10-11: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (34.9: )
-> $$ = nterm additive_expression (34.9: )
Stack now 81 39 52 24 17 14 8 5 0
Entering state 76
Next token is token EQ_OP (34.10-11: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (34.9: )
-> $$ = nterm relational_expression (34.9: )
Stack now 81 39 52 24 17 14 8 5 0
Entering state 75
Next token is token EQ_OP (34.10-11: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (34.9: )
-> $$ = nterm equality_expression (34.9: )
Stack now 81 39 52 24 17 14 8 5 0
Entering state 74
Next token is token EQ_OP (34.10-11: )
Shifting token EQ_OP (34.10-11: )
Entering state 104
Reading a token: Next token is token IDENTIFIER (34.12: b)
Shifting token IDENTIFIER (34.12: b)
Entering state 71
Reading a token: Next token is token ')' (34.13: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (34.12: b)
-> $$ = nterm primary_expression (34.12: )
Stack now 104 74 81 39 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (34.12: )
-> $$ = nterm postfix_expression (34.12: )
Stack now 104 74 81 39 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (34.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (34.12: )
-> $$ = nterm unary_expression (34.12: )
Stack now 104 74 81 39 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (34.12: )
-> $$ = nterm multiplicative_expression (34.12: )
Stack now 104 74 81 39 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (34.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (34.12: )
-> $$ = nterm additive_expression (34.12: )
Stack now 104 74 81 39 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (34.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (34.12: )
-> $$ = nterm relational_expression (34.12: )
Stack now 104 74 81 39 52 24 17 14 8 5 0
Entering state 133
Next token is token ')' (34.13: )
Reducing stack by rule 49 (line 701):
   $1 = nterm equality_expression (34.9: )
   $2 = token EQ_OP (34.10-11: )
   $3 = nterm relational_expression (34.12: )
-> $$ = nterm equality_expression (34.9-12: )
Stack now 81 39 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (34.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (34.9-12: )
-> $$ = nterm logical_and_expression (34.9-12: )
Stack now 81 39 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (34.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (34.9-12: )
-> $$ = nterm expression (34.9-12: )
Stack now 81 39 52 24 17 14 8 5 0
Entering state 116
Next token is token ')' (34.13: )
Shifting token ')' (34.13: )
Entering state 145
Reading a token: Next token is token '{' (34.14: )
Shifting token '{' (34.14: )
Entering state 45
Reading a token: Next token is token IDENTIFIER (35.9: x)
Shifting token IDENTIFIER (35.9: x)
Entering state 40
Reading a token: Next token is token '=' (35.11: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (35.9: x)
-> $$ = nterm primary_expression (35.9: )
Stack now 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (35.9: )
-> $$ = nterm postfix_expression (35.9: )
Stack now 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (35.11: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (35.9: )
-> $$ = nterm unary_expression (35.9: )
Stack now 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (35.11: )
Shifting token '=' (35.11: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (35.13: 1)
Shifting token INT_CONSTANT (35.13: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (35.13: 1)
-> $$ = nterm primary_expression (35.13: )
Stack now 90 57 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (35.13: )
-> $$ = nterm postfix_expression (35.13: )
Stack now 90 57 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (35.14: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (35.13: )
-> $$ = nterm unary_expression (35.13: )
Stack now 90 57 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (35.13: )
-> $$ = nterm multiplicative_expression (35.13: )
Stack now 90 57 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (35.14: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (35.13: )
-> $$ = nterm additive_expression (35.13: )
Stack now 90 57 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (35.14: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (35.13: )
-> $$ = nterm relational_expression (35.13: )
Stack now 90 57 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (35.14: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (35.13: )
-> $$ = nterm equality_expression (35.13: )
Stack now 90 57 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (35.14: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (35.13: )
-> $$ = nterm logical_and_expression (35.13: )
Stack now 90 57 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (35.14: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (35.13: )
-> $$ = nterm expression (35.13: )
Stack now 90 57 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (35.14: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (35.9: )
   $2 = token '=' (35.11: )
   $3 = nterm expression (35.13: )
-> $$ = nterm assignment_expression (35.9-13: )
Stack now 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (35.14: )
Shifting token ';' (35.14: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (35.9-13: )
   $2 = token ';' (35.14: )
-> $$ = nterm assignment_statement (35.9-14: )
Stack now 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (35.9-14: )
-> $$ = nterm statement (35.9-14: )
Stack now 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (35.9-14: )
-> $$ = nterm statement_list (35.9-14: )
Stack now 45 145 116 81 39 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (36.5: )
Shifting token '}' (36.5: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (34.14: )
   $2 = nterm statement_list (35.9-14: )
   $3 = token '}' (36.5: )
-> $$ = nterm statement (34.14-36.5: )
Stack now 145 116 81 39 52 24 17 14 8 5 0
Entering state 153
Reading a token: Next token is token ELSE (37.5-8: )
Shifting token ELSE (37.5-8: )
Entering state 157
Reading a token: Next token is token '{' (37.10: )
Shifting token '{' (37.10: )
Entering state 45
Reading a token: Next token is token IDENTIFIER (38.9: x)
Shifting token IDENTIFIER (38.9: x)
Entering state 40
Reading a token: Next token is token '=' (38.11: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (38.9: x)
-> $$ = nterm primary_expression (38.9: )
Stack now 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (38.9: )
-> $$ = nterm postfix_expression (38.9: )
Stack now 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (38.11: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (38.9: )
-> $$ = nterm unary_expression (38.9: )
Stack now 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (38.11: )
Shifting token '=' (38.11: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (38.12: 2)
Shifting token INT_CONSTANT (38.12: 2)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (38.12: 2)
-> $$ = nterm primary_expression (38.12: )
Stack now 90 57 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (38.12: )
-> $$ = nterm postfix_expression (38.12: )
Stack now 90 57 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (38.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (38.12: )
-> $$ = nterm unary_expression (38.12: )
Stack now 90 57 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (38.12: )
-> $$ = nterm multiplicative_expression (38.12: )
Stack now 90 57 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (38.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (38.12: )
-> $$ = nterm additive_expression (38.12: )
Stack now 90 57 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (38.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (38.12: )
-> $$ = nterm relational_expression (38.12: )
Stack now 90 57 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (38.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (38.12: )
-> $$ = nterm equality_expression (38.12: )
Stack now 90 57 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (38.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (38.12: )
-> $$ = nterm logical_and_expression (38.12: )
Stack now 90 57 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (38.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (38.12: )
-> $$ = nterm expression (38.12: )
Stack now 90 57 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (38.13: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (38.9: )
   $2 = token '=' (38.11: )
   $3 = nterm expression (38.12: )
-> $$ = nterm assignment_expression (38.9-12: )
Stack now 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (38.13: )
Shifting token ';' (38.13: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (38.9-12: )
   $2 = token ';' (38.13: )
-> $$ = nterm assignment_statement (38.9-13: )
Stack now 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (38.9-13: )
-> $$ = nterm statement (38.9-13: )
Stack now 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (38.9-13: )
-> $$ = nterm statement_list (38.9-13: )
Stack now 45 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (39.5: )
Shifting token '}' (39.5: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (37.10: )
   $2 = nterm statement_list (38.9-13: )
   $3 = token '}' (39.5: )
-> $$ = nterm statement (37.10-39.5: )
Stack now 157 153 145 116 81 39 52 24 17 14 8 5 0
Entering state 159
Reducing stack by rule 82 (line 1419):
   $1 = token IF (34.5-6: )
   $2 = token '(' (34.8: )
   $3 = nterm expression (34.9-12: )
   $4 = token ')' (34.13: )
   $5 = nterm statement (34.14-36.5: )
   $6 = token ELSE (37.5-8: )
   $7 = nterm statement (37.10-39.5: )
-> $$ = nterm selection_statement (34.5-39.5: )
Stack now 52 24 17 14 8 5 0
Entering state 62
Reducing stack by rule 35 (line 463):
   $1 = nterm selection_statement (34.5-39.5: )
-> $$ = nterm statement (34.5-39.5: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (34.5-39.5: )
-> $$ = nterm statement_list (34.5-39.5: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token RETURN (40.5-10: )
Shifting token RETURN (40.5-10: )
Entering state 36
Reading a token: Next token is token INT_CONSTANT (40.12: 0)
Shifting token INT_CONSTANT (40.12: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (40.12: 0)
-> $$ = nterm primary_expression (40.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (40.12: )
-> $$ = nterm postfix_expression (40.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (40.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (40.12: )
-> $$ = nterm unary_expression (40.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (40.12: )
-> $$ = nterm multiplicative_expression (40.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (40.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (40.12: )
-> $$ = nterm additive_expression (40.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (40.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (40.12: )
-> $$ = nterm relational_expression (40.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (40.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (40.12: )
-> $$ = nterm equality_expression (40.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (40.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (40.12: )
-> $$ = nterm logical_and_expression (40.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (40.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (40.12: )
-> $$ = nterm expression (40.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 72
Next token is token ';' (40.13: )
Shifting token ';' (40.13: )
Entering state 102
Reducing stack by rule 39 (line 477):
   $1 = token RETURN (40.5-10: )
   $2 = nterm expression (40.12: )
   $3 = token ';' (40.13: )
-> $$ = nterm statement (40.5-13: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (34.5-39.5: )
   $2 = nterm statement (40.5-13: )
-> $$ = nterm statement_list (34.5-40.13: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (41.5: )
Shifting token '}' (41.5: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (30.9: )
   $2 = nterm declaration_list (31.5-33.14: )
   $3 = nterm statement_list (34.5-40.13: )
   $4 = token '}' (41.5: )
-> $$ = nterm compound_statement (30.9-41.5: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (30.1-3: )
   $2 = nterm fun_declarator (30.5-8: )
   $3 = nterm $@2 (30.9: )
   $4 = nterm compound_statement (30.9-41.5: )
-> $$ = nterm function_definition (30.1-41.5: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (1.1-27.1: )
   $2 = nterm function_definition (30.1-41.5: )
-> $$ = nterm translation_unit (1.1-41.5: )
Stack now 0
Entering state 5
Reading a token: Next token is token $end (42.1-43.0: )
Shifting token $end (42.1-43.0: )
Entering state 10
Cleanup: popping token $end (42.1-43.0: )
Cleanup: popping nterm translation_unit (1.1-41.5: )
