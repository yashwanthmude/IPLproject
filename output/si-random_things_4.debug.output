Starting parse
Entering state 0
Reading a token: Next token is token STRUCT (1.1-6: )
Shifting token STRUCT (1.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (1.8-10: abc)
Shifting token IDENTIFIER (1.8-10: abc)
Entering state 9
Reading a token: Next token is token '{' (1.12: )
Reducing stack by rule 5 (line 138):
-> $$ = nterm $@1 (1.11: )
Stack now 9 4 0
Entering state 15
Next token is token '{' (1.12: )
Shifting token '{' (1.12: )
Entering state 18
Reading a token: Next token is token INT (2.5-7: )
Shifting token INT (2.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (2.5-7: )
-> $$ = nterm type_specifier (2.5-7: )
Stack now 18 15 9 4 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (2.9-11: _qw)
Shifting token IDENTIFIER (2.9-11: _qw)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (2.9-11: _qw)
-> $$ = nterm declarator_arr (2.9-11: )
Stack now 26 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ',' (2.12: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (2.9-11: )
-> $$ = nterm declarator (2.9-11: )
Stack now 26 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (2.9-11: )
-> $$ = nterm declarator_list (2.9-11: )
Stack now 26 18 15 9 4 0
Entering state 65
Next token is token ',' (2.12: )
Shifting token ',' (2.12: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (2.14-15: qw)
Shifting token IDENTIFIER (2.14-15: qw)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (2.14-15: qw)
-> $$ = nterm declarator_arr (2.14-15: )
Stack now 96 65 26 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (2.16: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (2.14-15: )
-> $$ = nterm declarator (2.14-15: )
Stack now 96 65 26 18 15 9 4 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (2.9-11: )
   $2 = token ',' (2.12: )
   $3 = nterm declarator (2.14-15: )
-> $$ = nterm declarator_list (2.9-15: )
Stack now 26 18 15 9 4 0
Entering state 65
Next token is token ';' (2.16: )
Shifting token ';' (2.16: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (2.5-7: )
   $2 = nterm declarator_list (2.9-15: )
   $3 = token ';' (2.16: )
-> $$ = nterm declaration (2.5-16: )
Stack now 18 15 9 4 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (2.5-16: )
-> $$ = nterm declaration_list (2.5-16: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token FLOAT (3.5-9: )
Shifting token FLOAT (3.5-9: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (3.5-9: )
-> $$ = nterm type_specifier (3.5-9: )
Stack now 28 18 15 9 4 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (3.11-14: __er)
Shifting token IDENTIFIER (3.11-14: __er)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.11-14: __er)
-> $$ = nterm declarator_arr (3.11-14: )
Stack now 26 28 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (3.15: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.11-14: )
-> $$ = nterm declarator (3.11-14: )
Stack now 26 28 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (3.11-14: )
-> $$ = nterm declarator_list (3.11-14: )
Stack now 26 28 18 15 9 4 0
Entering state 65
Next token is token ';' (3.15: )
Shifting token ';' (3.15: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (3.5-9: )
   $2 = nterm declarator_list (3.11-14: )
   $3 = token ';' (3.15: )
-> $$ = nterm declaration (3.5-15: )
Stack now 28 18 15 9 4 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (2.5-16: )
   $2 = nterm declaration (3.5-15: )
-> $$ = nterm declaration_list (2.5-3.15: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token '}' (5.1: )
Shifting token '}' (5.1: )
Entering state 66
Reading a token: Next token is token ';' (5.2: )
Shifting token ';' (5.2: )
Entering state 98
Reducing stack by rule 6 (line 137):
   $1 = token STRUCT (1.1-6: )
   $2 = token IDENTIFIER (1.8-10: abc)
   $3 = nterm $@1 (1.11: )
   $4 = token '{' (1.12: )
   $5 = nterm declaration_list (2.5-3.15: )
   $6 = token '}' (5.1: )
   $7 = token ';' (5.2: )
-> $$ = nterm struct_specifier (1.1-5.2: )
Stack now 0
Entering state 6
Reducing stack by rule 1 (line 122):
   $1 = nterm struct_specifier (1.1-5.2: )
-> $$ = nterm translation_unit (1.1-5.2: )
Stack now 0
Entering state 5
Reading a token: Next token is token STRUCT (8.1-6: )
Shifting token STRUCT (8.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (8.8-10: abc)
Shifting token IDENTIFIER (8.8-10: abc)
Entering state 9
Reading a token: Next token is token IDENTIFIER (8.12-19: init_abc)
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (8.1-6: )
   $2 = token IDENTIFIER (8.8-10: abc)
-> $$ = nterm type_specifier (8.1-10: )
Stack now 5 0
Entering state 8
Next token is token IDENTIFIER (8.12-19: init_abc)
Shifting token IDENTIFIER (8.12-19: init_abc)
Entering state 13
Reading a token: Next token is token '(' (8.20: )
Shifting token '(' (8.20: )
Entering state 16
Reading a token: Next token is token INT (8.21-23: )
Shifting token INT (8.21-23: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (8.21-23: )
-> $$ = nterm type_specifier (8.21-23: )
Stack now 16 13 8 5 0
Entering state 21
Reading a token: Next token is token '*' (8.25: )
Shifting token '*' (8.25: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (8.26-27: p1)
Shifting token IDENTIFIER (8.26-27: p1)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (8.26-27: p1)
-> $$ = nterm declarator_arr (8.26-27: )
Stack now 31 21 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ',' (8.28: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (8.26-27: )
-> $$ = nterm declarator (8.26-27: )
Stack now 31 21 16 13 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (8.25: )
   $2 = nterm declarator (8.26-27: )
-> $$ = nterm declarator (8.25-27: )
Stack now 21 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (8.21-23: )
   $2 = nterm declarator (8.25-27: )
-> $$ = nterm parameter_declaration (8.21-27: )
Stack now 16 13 8 5 0
Entering state 23
Reducing stack by rule 15 (line 250):
   $1 = nterm parameter_declaration (8.21-27: )
-> $$ = nterm parameter_list (8.21-27: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ',' (8.28: )
Shifting token ',' (8.28: )
Entering state 35
Reading a token: Next token is token INT (8.30-32: )
Shifting token INT (8.30-32: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (8.30-32: )
-> $$ = nterm type_specifier (8.30-32: )
Stack now 35 22 16 13 8 5 0
Entering state 21
Reading a token: Next token is token '*' (8.34: )
Shifting token '*' (8.34: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (8.35-36: p2)
Shifting token IDENTIFIER (8.35-36: p2)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (8.35-36: p2)
-> $$ = nterm declarator_arr (8.35-36: )
Stack now 31 21 35 22 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ',' (8.37: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (8.35-36: )
-> $$ = nterm declarator (8.35-36: )
Stack now 31 21 35 22 16 13 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (8.34: )
   $2 = nterm declarator (8.35-36: )
-> $$ = nterm declarator (8.34-36: )
Stack now 21 35 22 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (8.30-32: )
   $2 = nterm declarator (8.34-36: )
-> $$ = nterm parameter_declaration (8.30-36: )
Stack now 35 22 16 13 8 5 0
Entering state 70
Reducing stack by rule 16 (line 256):
   $1 = nterm parameter_list (8.21-27: )
   $2 = token ',' (8.28: )
   $3 = nterm parameter_declaration (8.30-36: )
-> $$ = nterm parameter_list (8.21-36: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ',' (8.37: )
Shifting token ',' (8.37: )
Entering state 35
Reading a token: Next token is token FLOAT (8.39-43: )
Shifting token FLOAT (8.39-43: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (8.39-43: )
-> $$ = nterm type_specifier (8.39-43: )
Stack now 35 22 16 13 8 5 0
Entering state 21
Reading a token: Next token is token IDENTIFIER (8.45-46: p3)
Shifting token IDENTIFIER (8.45-46: p3)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (8.45-46: p3)
-> $$ = nterm declarator_arr (8.45-46: )
Stack now 21 35 22 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ')' (8.47: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (8.45-46: )
-> $$ = nterm declarator (8.45-46: )
Stack now 21 35 22 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (8.39-43: )
   $2 = nterm declarator (8.45-46: )
-> $$ = nterm parameter_declaration (8.39-46: )
Stack now 35 22 16 13 8 5 0
Entering state 70
Reducing stack by rule 16 (line 256):
   $1 = nterm parameter_list (8.21-36: )
   $2 = token ',' (8.37: )
   $3 = nterm parameter_declaration (8.39-46: )
-> $$ = nterm parameter_list (8.21-46: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ')' (8.47: )
Shifting token ')' (8.47: )
Entering state 34
Reducing stack by rule 13 (line 240):
   $1 = token IDENTIFIER (8.12-19: init_abc)
   $2 = token '(' (8.20: )
   $3 = nterm parameter_list (8.21-46: )
   $4 = token ')' (8.47: )
-> $$ = nterm fun_declarator (8.12-47: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (8.48: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (8.49: )
Shifting token '{' (8.49: )
Entering state 24
Reading a token: Next token is token STRUCT (9.5-10: )
Shifting token STRUCT (9.5-10: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (9.12-14: abc)
Shifting token IDENTIFIER (9.12-14: abc)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (9.5-10: )
   $2 = token IDENTIFIER (9.12-14: abc)
-> $$ = nterm type_specifier (9.5-14: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token '*' (9.16: )
Shifting token '*' (9.16: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (9.17-19: ABC)
Shifting token IDENTIFIER (9.17-19: ABC)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (9.17-19: ABC)
-> $$ = nterm declarator_arr (9.17-19: )
Stack now 31 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (9.20: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (9.17-19: )
-> $$ = nterm declarator (9.17-19: )
Stack now 31 26 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (9.16: )
   $2 = nterm declarator (9.17-19: )
-> $$ = nterm declarator (9.16-19: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (9.16-19: )
-> $$ = nterm declarator_list (9.16-19: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (9.20: )
Shifting token ';' (9.20: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (9.5-14: )
   $2 = nterm declarator_list (9.16-19: )
   $3 = token ';' (9.20: )
-> $$ = nterm declaration (9.5-20: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (9.5-20: )
-> $$ = nterm declaration_list (9.5-20: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (10.5-7: ABC)
Shifting token IDENTIFIER (10.5-7: ABC)
Entering state 40
Reading a token: Next token is token PTR_OP (10.9-10: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (10.5-7: ABC)
-> $$ = nterm primary_expression (10.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (10.5-7: )
-> $$ = nterm postfix_expression (10.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (10.9-10: )
Shifting token PTR_OP (10.9-10: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (10.12-14: _qw)
Shifting token IDENTIFIER (10.12-14: _qw)
Entering state 125
Reducing stack by rule 69 (line 1304):
   $1 = nterm postfix_expression (10.5-7: )
   $2 = token PTR_OP (10.9-10: )
   $3 = token IDENTIFIER (10.12-14: _qw)
-> $$ = nterm postfix_expression (10.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (10.16: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (10.5-14: )
-> $$ = nterm unary_expression (10.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (10.16: )
Shifting token '=' (10.16: )
Entering state 90
Reading a token: Next token is token '*' (10.18: )
Shifting token '*' (10.18: )
Entering state 50
Reducing stack by rule 81 (line 1398):
   $1 = token '*' (10.18: )
-> $$ = nterm unary_operator (10.18: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (10.19-20: p1)
Shifting token IDENTIFIER (10.19-20: p1)
Entering state 71
Reading a token: Next token is token '+' (10.22: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (10.19-20: p1)
-> $$ = nterm primary_expression (10.19-20: )
Stack now 60 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (10.19-20: )
-> $$ = nterm postfix_expression (10.19-20: )
Stack now 60 90 57 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (10.22: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (10.19-20: )
-> $$ = nterm unary_expression (10.19-20: )
Stack now 60 90 57 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1048):
   $1 = nterm unary_operator (10.18: )
   $2 = nterm unary_expression (10.19-20: )
-> $$ = nterm unary_expression (10.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (10.18-20: )
-> $$ = nterm multiplicative_expression (10.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (10.22: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (10.18-20: )
-> $$ = nterm additive_expression (10.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (10.22: )
Shifting token '+' (10.22: )
Entering state 110
Reading a token: Next token is token '*' (10.24: )
Shifting token '*' (10.24: )
Entering state 50
Reducing stack by rule 81 (line 1398):
   $1 = token '*' (10.24: )
-> $$ = nterm unary_operator (10.24: )
Stack now 110 76 90 57 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (10.25-26: p2)
Shifting token IDENTIFIER (10.25-26: p2)
Entering state 71
Reading a token: Next token is token ';' (10.27: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (10.25-26: p2)
-> $$ = nterm primary_expression (10.25-26: )
Stack now 60 110 76 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (10.25-26: )
-> $$ = nterm postfix_expression (10.25-26: )
Stack now 60 110 76 90 57 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (10.27: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (10.25-26: )
-> $$ = nterm unary_expression (10.25-26: )
Stack now 60 110 76 90 57 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1048):
   $1 = nterm unary_operator (10.24: )
   $2 = nterm unary_expression (10.25-26: )
-> $$ = nterm unary_expression (10.24-26: )
Stack now 110 76 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (10.24-26: )
-> $$ = nterm multiplicative_expression (10.24-26: )
Stack now 110 76 90 57 52 24 17 14 8 5 0
Entering state 139
Next token is token ';' (10.27: )
Reducing stack by rule 57 (line 939):
   $1 = nterm additive_expression (10.18-20: )
   $2 = token '+' (10.22: )
   $3 = nterm multiplicative_expression (10.24-26: )
-> $$ = nterm additive_expression (10.18-26: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (10.27: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (10.18-26: )
-> $$ = nterm relational_expression (10.18-26: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (10.27: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (10.18-26: )
-> $$ = nterm equality_expression (10.18-26: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (10.27: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (10.18-26: )
-> $$ = nterm logical_and_expression (10.18-26: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (10.27: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (10.18-26: )
-> $$ = nterm expression (10.18-26: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (10.27: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (10.5-14: )
   $2 = token '=' (10.16: )
   $3 = nterm expression (10.18-26: )
-> $$ = nterm assignment_expression (10.5-26: )
Stack now 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (10.27: )
Shifting token ';' (10.27: )
Entering state 89
Reducing stack by rule 41 (line 551):
   $1 = nterm assignment_expression (10.5-26: )
   $2 = token ';' (10.27: )
-> $$ = nterm assignment_statement (10.5-27: )
Stack now 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (10.5-27: )
-> $$ = nterm statement (10.5-27: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (10.5-27: )
-> $$ = nterm statement_list (10.5-27: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (11.5-7: ABC)
Shifting token IDENTIFIER (11.5-7: ABC)
Entering state 40
Reading a token: Next token is token PTR_OP (11.9-10: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (11.5-7: ABC)
-> $$ = nterm primary_expression (11.5-7: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (11.5-7: )
-> $$ = nterm postfix_expression (11.5-7: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (11.9-10: )
Shifting token PTR_OP (11.9-10: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (11.12-13: qw)
Shifting token IDENTIFIER (11.12-13: qw)
Entering state 125
Reducing stack by rule 69 (line 1304):
   $1 = nterm postfix_expression (11.5-7: )
   $2 = token PTR_OP (11.9-10: )
   $3 = token IDENTIFIER (11.12-13: qw)
-> $$ = nterm postfix_expression (11.5-13: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (11.15: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (11.5-13: )
-> $$ = nterm unary_expression (11.5-13: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (11.15: )
Shifting token '=' (11.15: )
Entering state 90
Reading a token: Next token is token '(' (11.17: )
Shifting token '(' (11.17: )
Entering state 44
Reading a token: Next token is token '*' (11.18: )
Shifting token '*' (11.18: )
Entering state 50
Reducing stack by rule 81 (line 1398):
   $1 = token '*' (11.18: )
-> $$ = nterm unary_operator (11.18: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (11.19-20: p1)
Shifting token IDENTIFIER (11.19-20: p1)
Entering state 71
Reading a token: Next token is token ')' (11.21: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (11.19-20: p1)
-> $$ = nterm primary_expression (11.19-20: )
Stack now 60 44 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (11.19-20: )
-> $$ = nterm postfix_expression (11.19-20: )
Stack now 60 44 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (11.21: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (11.19-20: )
-> $$ = nterm unary_expression (11.19-20: )
Stack now 60 44 90 57 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1048):
   $1 = nterm unary_operator (11.18: )
   $2 = nterm unary_expression (11.19-20: )
-> $$ = nterm unary_expression (11.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (11.18-20: )
-> $$ = nterm multiplicative_expression (11.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (11.21: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (11.18-20: )
-> $$ = nterm additive_expression (11.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (11.21: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (11.18-20: )
-> $$ = nterm relational_expression (11.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (11.21: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (11.18-20: )
-> $$ = nterm equality_expression (11.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (11.21: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (11.18-20: )
-> $$ = nterm logical_and_expression (11.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (11.21: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (11.18-20: )
-> $$ = nterm expression (11.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (11.21: )
Shifting token ')' (11.21: )
Entering state 120
Reducing stack by rule 75 (line 1372):
   $1 = token '(' (11.17: )
   $2 = nterm expression (11.18-20: )
   $3 = token ')' (11.21: )
-> $$ = nterm primary_expression (11.17-21: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (11.17-21: )
-> $$ = nterm postfix_expression (11.17-21: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token INC_OP (11.22-23: )
Shifting token INC_OP (11.22-23: )
Entering state 94
Reducing stack by rule 70 (line 1321):
   $1 = nterm postfix_expression (11.17-21: )
   $2 = token INC_OP (11.22-23: )
-> $$ = nterm postfix_expression (11.17-23: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '+' (11.25: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (11.17-23: )
-> $$ = nterm unary_expression (11.17-23: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (11.17-23: )
-> $$ = nterm multiplicative_expression (11.17-23: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (11.25: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (11.17-23: )
-> $$ = nterm additive_expression (11.17-23: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (11.25: )
Shifting token '+' (11.25: )
Entering state 110
Reading a token: Next token is token '(' (11.27: )
Shifting token '(' (11.27: )
Entering state 44
Reading a token: Next token is token '*' (11.28: )
Shifting token '*' (11.28: )
Entering state 50
Reducing stack by rule 81 (line 1398):
   $1 = token '*' (11.28: )
-> $$ = nterm unary_operator (11.28: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (11.29-30: p2)
Shifting token IDENTIFIER (11.29-30: p2)
Entering state 71
Reading a token: Next token is token ')' (11.31: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (11.29-30: p2)
-> $$ = nterm primary_expression (11.29-30: )
Stack now 60 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (11.29-30: )
-> $$ = nterm postfix_expression (11.29-30: )
Stack now 60 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (11.31: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (11.29-30: )
-> $$ = nterm unary_expression (11.29-30: )
Stack now 60 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1048):
   $1 = nterm unary_operator (11.28: )
   $2 = nterm unary_expression (11.29-30: )
-> $$ = nterm unary_expression (11.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (11.28-30: )
-> $$ = nterm multiplicative_expression (11.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (11.31: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (11.28-30: )
-> $$ = nterm additive_expression (11.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (11.31: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (11.28-30: )
-> $$ = nterm relational_expression (11.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (11.31: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (11.28-30: )
-> $$ = nterm equality_expression (11.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (11.31: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (11.28-30: )
-> $$ = nterm logical_and_expression (11.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (11.31: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (11.28-30: )
-> $$ = nterm expression (11.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (11.31: )
Shifting token ')' (11.31: )
Entering state 120
Reducing stack by rule 75 (line 1372):
   $1 = token '(' (11.27: )
   $2 = nterm expression (11.28-30: )
   $3 = token ')' (11.31: )
-> $$ = nterm primary_expression (11.27-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (11.27-31: )
-> $$ = nterm postfix_expression (11.27-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token INC_OP (11.32-33: )
Shifting token INC_OP (11.32-33: )
Entering state 94
Reducing stack by rule 70 (line 1321):
   $1 = nterm postfix_expression (11.27-31: )
   $2 = token INC_OP (11.32-33: )
-> $$ = nterm postfix_expression (11.27-33: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (11.34: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (11.27-33: )
-> $$ = nterm unary_expression (11.27-33: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (11.27-33: )
-> $$ = nterm multiplicative_expression (11.27-33: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ';' (11.34: )
Reducing stack by rule 57 (line 939):
   $1 = nterm additive_expression (11.17-23: )
   $2 = token '+' (11.25: )
   $3 = nterm multiplicative_expression (11.27-33: )
-> $$ = nterm additive_expression (11.17-33: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (11.34: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (11.17-33: )
-> $$ = nterm relational_expression (11.17-33: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (11.34: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (11.17-33: )
-> $$ = nterm equality_expression (11.17-33: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (11.34: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (11.17-33: )
-> $$ = nterm logical_and_expression (11.17-33: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (11.34: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (11.17-33: )
-> $$ = nterm expression (11.17-33: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (11.34: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (11.5-13: )
   $2 = token '=' (11.15: )
   $3 = nterm expression (11.17-33: )
-> $$ = nterm assignment_expression (11.5-33: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (11.34: )
Shifting token ';' (11.34: )
Entering state 89
Reducing stack by rule 41 (line 551):
   $1 = nterm assignment_expression (11.5-33: )
   $2 = token ';' (11.34: )
-> $$ = nterm assignment_statement (11.5-34: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (11.5-34: )
-> $$ = nterm statement (11.5-34: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (10.5-27: )
   $2 = nterm statement (11.5-34: )
-> $$ = nterm statement_list (10.5-11.34: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (12.5-7: ABC)
Shifting token IDENTIFIER (12.5-7: ABC)
Entering state 40
Reading a token: Next token is token PTR_OP (12.9-10: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (12.5-7: ABC)
-> $$ = nterm primary_expression (12.5-7: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (12.5-7: )
-> $$ = nterm postfix_expression (12.5-7: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (12.9-10: )
Shifting token PTR_OP (12.9-10: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (12.12-15: __er)
Shifting token IDENTIFIER (12.12-15: __er)
Entering state 125
Reducing stack by rule 69 (line 1304):
   $1 = nterm postfix_expression (12.5-7: )
   $2 = token PTR_OP (12.9-10: )
   $3 = token IDENTIFIER (12.12-15: __er)
-> $$ = nterm postfix_expression (12.5-15: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (12.17: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (12.5-15: )
-> $$ = nterm unary_expression (12.5-15: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (12.17: )
Shifting token '=' (12.17: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (12.19-20: p3)
Shifting token IDENTIFIER (12.19-20: p3)
Entering state 71
Reading a token: Next token is token '+' (12.22: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (12.19-20: p3)
-> $$ = nterm primary_expression (12.19-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (12.19-20: )
-> $$ = nterm postfix_expression (12.19-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (12.22: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (12.19-20: )
-> $$ = nterm unary_expression (12.19-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (12.19-20: )
-> $$ = nterm multiplicative_expression (12.19-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (12.22: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (12.19-20: )
-> $$ = nterm additive_expression (12.19-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (12.22: )
Shifting token '+' (12.22: )
Entering state 110
Reading a token: Next token is token FLOAT_CONSTANT (12.24-31: .897e-19)
Shifting token FLOAT_CONSTANT (12.24-31: .897e-19)
Entering state 42
Reducing stack by rule 73 (line 1362):
   $1 = token FLOAT_CONSTANT (12.24-31: .897e-19)
-> $$ = nterm primary_expression (12.24-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (12.24-31: )
-> $$ = nterm postfix_expression (12.24-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (12.32: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (12.24-31: )
-> $$ = nterm unary_expression (12.24-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (12.24-31: )
-> $$ = nterm multiplicative_expression (12.24-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ';' (12.32: )
Reducing stack by rule 57 (line 939):
   $1 = nterm additive_expression (12.19-20: )
   $2 = token '+' (12.22: )
   $3 = nterm multiplicative_expression (12.24-31: )
-> $$ = nterm additive_expression (12.19-31: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (12.32: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (12.19-31: )
-> $$ = nterm relational_expression (12.19-31: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (12.32: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (12.19-31: )
-> $$ = nterm equality_expression (12.19-31: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (12.32: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (12.19-31: )
-> $$ = nterm logical_and_expression (12.19-31: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (12.32: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (12.19-31: )
-> $$ = nterm expression (12.19-31: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (12.32: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (12.5-15: )
   $2 = token '=' (12.17: )
   $3 = nterm expression (12.19-31: )
-> $$ = nterm assignment_expression (12.5-31: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (12.32: )
Shifting token ';' (12.32: )
Entering state 89
Reducing stack by rule 41 (line 551):
   $1 = nterm assignment_expression (12.5-31: )
   $2 = token ';' (12.32: )
-> $$ = nterm assignment_statement (12.5-32: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (12.5-32: )
-> $$ = nterm statement (12.5-32: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (10.5-11.34: )
   $2 = nterm statement (12.5-32: )
-> $$ = nterm statement_list (10.5-12.32: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token RETURN (14.5-10: )
Shifting token RETURN (14.5-10: )
Entering state 36
Reading a token: Next token is token '*' (14.12: )
Shifting token '*' (14.12: )
Entering state 50
Reducing stack by rule 81 (line 1398):
   $1 = token '*' (14.12: )
-> $$ = nterm unary_operator (14.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (14.13-15: ABC)
Shifting token IDENTIFIER (14.13-15: ABC)
Entering state 71
Reading a token: Next token is token ';' (14.16: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (14.13-15: ABC)
-> $$ = nterm primary_expression (14.13-15: )
Stack now 60 36 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (14.13-15: )
-> $$ = nterm postfix_expression (14.13-15: )
Stack now 60 36 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (14.16: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (14.13-15: )
-> $$ = nterm unary_expression (14.13-15: )
Stack now 60 36 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1048):
   $1 = nterm unary_operator (14.12: )
   $2 = nterm unary_expression (14.13-15: )
-> $$ = nterm unary_expression (14.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (14.12-15: )
-> $$ = nterm multiplicative_expression (14.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (14.16: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (14.12-15: )
-> $$ = nterm additive_expression (14.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (14.16: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (14.12-15: )
-> $$ = nterm relational_expression (14.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (14.16: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (14.12-15: )
-> $$ = nterm equality_expression (14.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (14.16: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (14.12-15: )
-> $$ = nterm logical_and_expression (14.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (14.16: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (14.12-15: )
-> $$ = nterm expression (14.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 72
Next token is token ';' (14.16: )
Shifting token ';' (14.16: )
Entering state 102
Reducing stack by rule 39 (line 477):
   $1 = token RETURN (14.5-10: )
   $2 = nterm expression (14.12-15: )
   $3 = token ';' (14.16: )
-> $$ = nterm statement (14.5-16: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (10.5-12.32: )
   $2 = nterm statement (14.5-16: )
-> $$ = nterm statement_list (10.5-14.16: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (15.1: )
Shifting token '}' (15.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (8.49: )
   $2 = nterm declaration_list (9.5-20: )
   $3 = nterm statement_list (10.5-14.16: )
   $4 = token '}' (15.1: )
-> $$ = nterm compound_statement (8.49-15.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (8.1-10: )
   $2 = nterm fun_declarator (8.12-47: )
   $3 = nterm $@2 (8.48: )
   $4 = nterm compound_statement (8.49-15.1: )
-> $$ = nterm function_definition (8.1-15.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (1.1-5.2: )
   $2 = nterm function_definition (8.1-15.1: )
-> $$ = nterm translation_unit (1.1-15.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (17.1-3: )
Shifting token INT (17.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (17.1-3: )
-> $$ = nterm type_specifier (17.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (17.5-8: main)
Shifting token IDENTIFIER (17.5-8: main)
Entering state 13
Reading a token: Next token is token '(' (17.10: )
Shifting token '(' (17.10: )
Entering state 16
Reading a token: Next token is token INT (17.11-13: )
Shifting token INT (17.11-13: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (17.11-13: )
-> $$ = nterm type_specifier (17.11-13: )
Stack now 16 13 8 5 0
Entering state 21
Reading a token: Next token is token IDENTIFIER (17.15-18: argc)
Shifting token IDENTIFIER (17.15-18: argc)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (17.15-18: argc)
-> $$ = nterm declarator_arr (17.15-18: )
Stack now 21 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ')' (17.19: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (17.15-18: )
-> $$ = nterm declarator (17.15-18: )
Stack now 21 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (17.11-13: )
   $2 = nterm declarator (17.15-18: )
-> $$ = nterm parameter_declaration (17.11-18: )
Stack now 16 13 8 5 0
Entering state 23
Reducing stack by rule 15 (line 250):
   $1 = nterm parameter_declaration (17.11-18: )
-> $$ = nterm parameter_list (17.11-18: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ')' (17.19: )
Shifting token ')' (17.19: )
Entering state 34
Reducing stack by rule 13 (line 240):
   $1 = token IDENTIFIER (17.5-8: main)
   $2 = token '(' (17.10: )
   $3 = nterm parameter_list (17.11-18: )
   $4 = token ')' (17.19: )
-> $$ = nterm fun_declarator (17.5-19: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (17.20: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (17.21: )
Shifting token '{' (17.21: )
Entering state 24
Reading a token: Next token is token STRUCT (18.5-10: )
Shifting token STRUCT (18.5-10: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (18.12-14: abc)
Shifting token IDENTIFIER (18.12-14: abc)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (18.5-10: )
   $2 = token IDENTIFIER (18.12-14: abc)
-> $$ = nterm type_specifier (18.5-14: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (18.16-18: ABC)
Shifting token IDENTIFIER (18.16-18: ABC)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (18.16-18: ABC)
-> $$ = nterm declarator_arr (18.16-18: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (18.19: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (18.16-18: )
-> $$ = nterm declarator (18.16-18: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (18.16-18: )
-> $$ = nterm declarator_list (18.16-18: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (18.19: )
Shifting token ';' (18.19: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (18.5-14: )
   $2 = nterm declarator_list (18.16-18: )
   $3 = token ';' (18.19: )
-> $$ = nterm declaration (18.5-19: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (18.5-19: )
-> $$ = nterm declaration_list (18.5-19: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (19.5-7: )
Shifting token INT (19.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (19.5-7: )
-> $$ = nterm type_specifier (19.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token '*' (19.9: )
Shifting token '*' (19.9: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (19.10-11: p1)
Shifting token IDENTIFIER (19.10-11: p1)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (19.10-11: p1)
-> $$ = nterm declarator_arr (19.10-11: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ',' (19.12: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (19.10-11: )
-> $$ = nterm declarator (19.10-11: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (19.9: )
   $2 = nterm declarator (19.10-11: )
-> $$ = nterm declarator (19.9-11: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (19.9-11: )
-> $$ = nterm declarator_list (19.9-11: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ',' (19.12: )
Shifting token ',' (19.12: )
Entering state 96
Reading a token: Next token is token '*' (19.14: )
Shifting token '*' (19.14: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (19.15-16: p2)
Shifting token IDENTIFIER (19.15-16: p2)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (19.15-16: p2)
-> $$ = nterm declarator_arr (19.15-16: )
Stack now 31 96 65 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (19.17: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (19.15-16: )
-> $$ = nterm declarator (19.15-16: )
Stack now 31 96 65 26 52 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (19.14: )
   $2 = nterm declarator (19.15-16: )
-> $$ = nterm declarator (19.14-16: )
Stack now 96 65 26 52 24 17 14 8 5 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (19.9-11: )
   $2 = token ',' (19.12: )
   $3 = nterm declarator (19.14-16: )
-> $$ = nterm declarator_list (19.9-16: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (19.17: )
Shifting token ';' (19.17: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (19.5-7: )
   $2 = nterm declarator_list (19.9-16: )
   $3 = token ';' (19.17: )
-> $$ = nterm declaration (19.5-17: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (18.5-19: )
   $2 = nterm declaration (19.5-17: )
-> $$ = nterm declaration_list (18.5-19.17: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (20.5-9: scanf)
Shifting token IDENTIFIER (20.5-9: scanf)
Entering state 40
Reading a token: Next token is token '(' (20.10: )
Shifting token '(' (20.10: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (20.11-14: "%d")
Shifting token STRING_LITERAL (20.11-14: "%d")
Entering state 43
Reducing stack by rule 74 (line 1367):
   $1 = token STRING_LITERAL (20.11-14: "%d")
-> $$ = nterm primary_expression (20.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (20.11-14: )
-> $$ = nterm postfix_expression (20.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (20.15: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (20.11-14: )
-> $$ = nterm unary_expression (20.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (20.11-14: )
-> $$ = nterm multiplicative_expression (20.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (20.15: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (20.11-14: )
-> $$ = nterm additive_expression (20.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (20.15: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (20.11-14: )
-> $$ = nterm relational_expression (20.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (20.15: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (20.11-14: )
-> $$ = nterm equality_expression (20.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (20.15: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (20.11-14: )
-> $$ = nterm logical_and_expression (20.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (20.15: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (20.11-14: )
-> $$ = nterm expression (20.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (20.15: )
Reducing stack by rule 76 (line 1378):
   $1 = nterm expression (20.11-14: )
-> $$ = nterm expression_list (20.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (20.15: )
Shifting token ',' (20.15: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (20.17-18: p1)
Shifting token IDENTIFIER (20.17-18: p1)
Entering state 71
Reading a token: Next token is token ')' (20.19: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (20.17-18: p1)
-> $$ = nterm primary_expression (20.17-18: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (20.17-18: )
-> $$ = nterm postfix_expression (20.17-18: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (20.19: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (20.17-18: )
-> $$ = nterm unary_expression (20.17-18: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (20.17-18: )
-> $$ = nterm multiplicative_expression (20.17-18: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (20.19: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (20.17-18: )
-> $$ = nterm additive_expression (20.17-18: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (20.19: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (20.17-18: )
-> $$ = nterm relational_expression (20.17-18: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (20.19: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (20.17-18: )
-> $$ = nterm equality_expression (20.17-18: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (20.19: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (20.17-18: )
-> $$ = nterm logical_and_expression (20.17-18: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (20.19: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (20.17-18: )
-> $$ = nterm expression (20.17-18: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (20.19: )
Reducing stack by rule 77 (line 1382):
   $1 = nterm expression_list (20.11-14: )
   $2 = token ',' (20.15: )
   $3 = nterm expression (20.17-18: )
-> $$ = nterm expression_list (20.11-18: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (20.19: )
Shifting token ')' (20.19: )
Entering state 147
Reading a token: Next token is token ';' (20.20: )
Shifting token ';' (20.20: )
Entering state 154
Reducing stack by rule 43 (line 586):
   $1 = token IDENTIFIER (20.5-9: scanf)
   $2 = token '(' (20.10: )
   $3 = nterm expression_list (20.11-18: )
   $4 = token ')' (20.19: )
   $5 = token ';' (20.20: )
-> $$ = nterm procedure_call (20.5-20: )
Stack now 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (20.5-20: )
-> $$ = nterm statement (20.5-20: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (20.5-20: )
-> $$ = nterm statement_list (20.5-20: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (21.5-9: scanf)
Shifting token IDENTIFIER (21.5-9: scanf)
Entering state 40
Reading a token: Next token is token '(' (21.10: )
Shifting token '(' (21.10: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (21.11-14: "%d")
Shifting token STRING_LITERAL (21.11-14: "%d")
Entering state 43
Reducing stack by rule 74 (line 1367):
   $1 = token STRING_LITERAL (21.11-14: "%d")
-> $$ = nterm primary_expression (21.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (21.11-14: )
-> $$ = nterm postfix_expression (21.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (21.15: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (21.11-14: )
-> $$ = nterm unary_expression (21.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (21.11-14: )
-> $$ = nterm multiplicative_expression (21.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (21.15: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (21.11-14: )
-> $$ = nterm additive_expression (21.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (21.15: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (21.11-14: )
-> $$ = nterm relational_expression (21.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (21.15: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (21.11-14: )
-> $$ = nterm equality_expression (21.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (21.15: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (21.11-14: )
-> $$ = nterm logical_and_expression (21.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (21.15: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (21.11-14: )
-> $$ = nterm expression (21.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (21.15: )
Reducing stack by rule 76 (line 1378):
   $1 = nterm expression (21.11-14: )
-> $$ = nterm expression_list (21.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (21.15: )
Shifting token ',' (21.15: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (21.17-18: p2)
Shifting token IDENTIFIER (21.17-18: p2)
Entering state 71
Reading a token: Next token is token ')' (21.19: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (21.17-18: p2)
-> $$ = nterm primary_expression (21.17-18: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (21.17-18: )
-> $$ = nterm postfix_expression (21.17-18: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (21.19: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (21.17-18: )
-> $$ = nterm unary_expression (21.17-18: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (21.17-18: )
-> $$ = nterm multiplicative_expression (21.17-18: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (21.19: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (21.17-18: )
-> $$ = nterm additive_expression (21.17-18: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (21.19: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (21.17-18: )
-> $$ = nterm relational_expression (21.17-18: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (21.19: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (21.17-18: )
-> $$ = nterm equality_expression (21.17-18: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (21.19: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (21.17-18: )
-> $$ = nterm logical_and_expression (21.17-18: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (21.19: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (21.17-18: )
-> $$ = nterm expression (21.17-18: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (21.19: )
Reducing stack by rule 77 (line 1382):
   $1 = nterm expression_list (21.11-14: )
   $2 = token ',' (21.15: )
   $3 = nterm expression (21.17-18: )
-> $$ = nterm expression_list (21.11-18: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (21.19: )
Shifting token ')' (21.19: )
Entering state 147
Reading a token: Next token is token ';' (21.20: )
Shifting token ';' (21.20: )
Entering state 154
Reducing stack by rule 43 (line 586):
   $1 = token IDENTIFIER (21.5-9: scanf)
   $2 = token '(' (21.10: )
   $3 = nterm expression_list (21.11-18: )
   $4 = token ')' (21.19: )
   $5 = token ';' (21.20: )
-> $$ = nterm procedure_call (21.5-20: )
Stack now 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (21.5-20: )
-> $$ = nterm statement (21.5-20: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (20.5-20: )
   $2 = nterm statement (21.5-20: )
-> $$ = nterm statement_list (20.5-21.20: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IF (23.5-6: )
Shifting token IF (23.5-6: )
Entering state 39
Reading a token: Next token is token '(' (23.8: )
Shifting token '(' (23.8: )
Entering state 81
Reading a token: Next token is token '*' (23.9: )
Shifting token '*' (23.9: )
Entering state 50
Reducing stack by rule 81 (line 1398):
   $1 = token '*' (23.9: )
-> $$ = nterm unary_operator (23.9: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (23.10-11: p1)
Shifting token IDENTIFIER (23.10-11: p1)
Entering state 71
Reading a token: Next token is token '>' (23.13: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (23.10-11: p1)
-> $$ = nterm primary_expression (23.10-11: )
Stack now 60 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (23.10-11: )
-> $$ = nterm postfix_expression (23.10-11: )
Stack now 60 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '>' (23.13: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (23.10-11: )
-> $$ = nterm unary_expression (23.10-11: )
Stack now 60 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1048):
   $1 = nterm unary_operator (23.9: )
   $2 = nterm unary_expression (23.10-11: )
-> $$ = nterm unary_expression (23.9-11: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (23.9-11: )
-> $$ = nterm multiplicative_expression (23.9-11: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '>' (23.13: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (23.9-11: )
-> $$ = nterm additive_expression (23.9-11: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '>' (23.13: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (23.9-11: )
-> $$ = nterm relational_expression (23.9-11: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token '>' (23.13: )
Shifting token '>' (23.13: )
Entering state 108
Reading a token: Next token is token INT_CONSTANT (23.15: 5)
Shifting token INT_CONSTANT (23.15: 5)
Entering state 41
Reducing stack by rule 72 (line 1353):
   $1 = token INT_CONSTANT (23.15: 5)
-> $$ = nterm primary_expression (23.15: )
Stack now 108 75 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (23.15: )
-> $$ = nterm postfix_expression (23.15: )
Stack now 108 75 81 39 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token OR_OP (23.17-18: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (23.15: )
-> $$ = nterm unary_expression (23.15: )
Stack now 108 75 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (23.15: )
-> $$ = nterm multiplicative_expression (23.15: )
Stack now 108 75 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token OR_OP (23.17-18: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (23.15: )
-> $$ = nterm additive_expression (23.15: )
Stack now 108 75 81 39 86 52 24 17 14 8 5 0
Entering state 137
Next token is token OR_OP (23.17-18: )
Reducing stack by rule 53 (line 805):
   $1 = nterm relational_expression (23.9-11: )
   $2 = token '>' (23.13: )
   $3 = nterm additive_expression (23.15: )
-> $$ = nterm relational_expression (23.9-15: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token OR_OP (23.17-18: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (23.9-15: )
-> $$ = nterm equality_expression (23.9-15: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token OR_OP (23.17-18: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (23.9-15: )
-> $$ = nterm logical_and_expression (23.9-15: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token OR_OP (23.17-18: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (23.9-15: )
-> $$ = nterm expression (23.9-15: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 116
Next token is token OR_OP (23.17-18: )
Shifting token OR_OP (23.17-18: )
Entering state 101
Reading a token: Next token is token '*' (23.20: )
Shifting token '*' (23.20: )
Entering state 50
Reducing stack by rule 81 (line 1398):
   $1 = token '*' (23.20: )
-> $$ = nterm unary_operator (23.20: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (23.21-22: p2)
Shifting token IDENTIFIER (23.21-22: p2)
Entering state 71
Reading a token: Next token is token '<' (23.24: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (23.21-22: p2)
-> $$ = nterm primary_expression (23.21-22: )
Stack now 60 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (23.21-22: )
-> $$ = nterm postfix_expression (23.21-22: )
Stack now 60 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '<' (23.24: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (23.21-22: )
-> $$ = nterm unary_expression (23.21-22: )
Stack now 60 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1048):
   $1 = nterm unary_operator (23.20: )
   $2 = nterm unary_expression (23.21-22: )
-> $$ = nterm unary_expression (23.20-22: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (23.20-22: )
-> $$ = nterm multiplicative_expression (23.20-22: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '<' (23.24: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (23.20-22: )
-> $$ = nterm additive_expression (23.20-22: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '<' (23.24: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (23.20-22: )
-> $$ = nterm relational_expression (23.20-22: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token '<' (23.24: )
Shifting token '<' (23.24: )
Entering state 106
Reading a token: Next token is token INT_CONSTANT (23.26: 5)
Shifting token INT_CONSTANT (23.26: 5)
Entering state 41
Reducing stack by rule 72 (line 1353):
   $1 = token INT_CONSTANT (23.26: 5)
-> $$ = nterm primary_expression (23.26: )
Stack now 106 75 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (23.26: )
-> $$ = nterm postfix_expression (23.26: )
Stack now 106 75 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (23.28: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (23.26: )
-> $$ = nterm unary_expression (23.26: )
Stack now 106 75 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (23.26: )
-> $$ = nterm multiplicative_expression (23.26: )
Stack now 106 75 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (23.28: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (23.26: )
-> $$ = nterm additive_expression (23.26: )
Stack now 106 75 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 135
Next token is token ')' (23.28: )
Reducing stack by rule 52 (line 764):
   $1 = nterm relational_expression (23.20-22: )
   $2 = token '<' (23.24: )
   $3 = nterm additive_expression (23.26: )
-> $$ = nterm relational_expression (23.20-26: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (23.28: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (23.20-26: )
-> $$ = nterm equality_expression (23.20-26: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (23.28: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (23.20-26: )
-> $$ = nterm logical_and_expression (23.20-26: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 131
Next token is token ')' (23.28: )
Reducing stack by rule 45 (line 642):
   $1 = nterm expression (23.9-15: )
   $2 = token OR_OP (23.17-18: )
   $3 = nterm logical_and_expression (23.20-26: )
-> $$ = nterm expression (23.9-26: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 116
Next token is token ')' (23.28: )
Shifting token ')' (23.28: )
Entering state 145
Reading a token: Next token is token '{' (23.30: )
Shifting token '{' (23.30: )
Entering state 45
Reading a token: Next token is token IDENTIFIER (24.9-11: ABC)
Shifting token IDENTIFIER (24.9-11: ABC)
Entering state 40
Reading a token: Next token is token '=' (24.13: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (24.9-11: ABC)
-> $$ = nterm primary_expression (24.9-11: )
Stack now 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (24.9-11: )
-> $$ = nterm postfix_expression (24.9-11: )
Stack now 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (24.13: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (24.9-11: )
-> $$ = nterm unary_expression (24.9-11: )
Stack now 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (24.13: )
Shifting token '=' (24.13: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (24.15-22: init_abc)
Shifting token IDENTIFIER (24.15-22: init_abc)
Entering state 71
Reading a token: Next token is token '(' (24.23: )
Shifting token '(' (24.23: )
Entering state 100
Reading a token: Next token is token '&' (24.24: )
Shifting token '&' (24.24: )
Entering state 51
Reducing stack by rule 80 (line 1395):
   $1 = token '&' (24.24: )
-> $$ = nterm unary_operator (24.24: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (24.25-26: p1)
Shifting token IDENTIFIER (24.25-26: p1)
Entering state 71
Reading a token: Next token is token ',' (24.27: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (24.25-26: p1)
-> $$ = nterm primary_expression (24.25-26: )
Stack now 60 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (24.25-26: )
-> $$ = nterm postfix_expression (24.25-26: )
Stack now 60 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ',' (24.27: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (24.25-26: )
-> $$ = nterm unary_expression (24.25-26: )
Stack now 60 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1048):
   $1 = nterm unary_operator (24.24: )
   $2 = nterm unary_expression (24.25-26: )
-> $$ = nterm unary_expression (24.24-26: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (24.24-26: )
-> $$ = nterm multiplicative_expression (24.24-26: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (24.27: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (24.24-26: )
-> $$ = nterm additive_expression (24.24-26: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (24.27: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (24.24-26: )
-> $$ = nterm relational_expression (24.24-26: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (24.27: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (24.24-26: )
-> $$ = nterm equality_expression (24.24-26: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (24.27: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (24.24-26: )
-> $$ = nterm logical_and_expression (24.24-26: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (24.27: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (24.24-26: )
-> $$ = nterm expression (24.24-26: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (24.27: )
Reducing stack by rule 76 (line 1378):
   $1 = nterm expression (24.24-26: )
-> $$ = nterm expression_list (24.24-26: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ',' (24.27: )
Shifting token ',' (24.27: )
Entering state 148
Reading a token: Next token is token '&' (24.29: )
Shifting token '&' (24.29: )
Entering state 51
Reducing stack by rule 80 (line 1395):
   $1 = token '&' (24.29: )
-> $$ = nterm unary_operator (24.29: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (24.30-31: p2)
Shifting token IDENTIFIER (24.30-31: p2)
Entering state 71
Reading a token: Next token is token ',' (24.32: )
Reducing stack by rule 71 (line 1342):
   $1 = token IDENTIFIER (24.30-31: p2)
-> $$ = nterm primary_expression (24.30-31: )
Stack now 60 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (24.30-31: )
-> $$ = nterm postfix_expression (24.30-31: )
Stack now 60 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ',' (24.32: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (24.30-31: )
-> $$ = nterm unary_expression (24.30-31: )
Stack now 60 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1048):
   $1 = nterm unary_operator (24.29: )
   $2 = nterm unary_expression (24.30-31: )
-> $$ = nterm unary_expression (24.29-31: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (24.29-31: )
-> $$ = nterm multiplicative_expression (24.29-31: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (24.32: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (24.29-31: )
-> $$ = nterm additive_expression (24.29-31: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (24.32: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (24.29-31: )
-> $$ = nterm relational_expression (24.29-31: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (24.32: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (24.29-31: )
-> $$ = nterm equality_expression (24.29-31: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (24.32: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (24.29-31: )
-> $$ = nterm logical_and_expression (24.29-31: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (24.32: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (24.29-31: )
-> $$ = nterm expression (24.29-31: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (24.32: )
Reducing stack by rule 77 (line 1382):
   $1 = nterm expression_list (24.24-26: )
   $2 = token ',' (24.27: )
   $3 = nterm expression (24.29-31: )
-> $$ = nterm expression_list (24.24-31: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ',' (24.32: )
Shifting token ',' (24.32: )
Entering state 148
Reading a token: Next token is token '-' (24.34: )
Shifting token '-' (24.34: )
Entering state 49
Reducing stack by rule 78 (line 1389):
   $1 = token '-' (24.34: )
-> $$ = nterm unary_operator (24.34: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token FLOAT_CONSTANT (24.35-41: 12.80e0)
Shifting token FLOAT_CONSTANT (24.35-41: 12.80e0)
Entering state 42
Reducing stack by rule 73 (line 1362):
   $1 = token FLOAT_CONSTANT (24.35-41: 12.80e0)
-> $$ = nterm primary_expression (24.35-41: )
Stack now 60 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1179):
   $1 = nterm primary_expression (24.35-41: )
-> $$ = nterm postfix_expression (24.35-41: )
Stack now 60 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (24.42: )
Reducing stack by rule 59 (line 1045):
   $1 = nterm postfix_expression (24.35-41: )
-> $$ = nterm unary_expression (24.35-41: )
Stack now 60 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1048):
   $1 = nterm unary_operator (24.34: )
   $2 = nterm unary_expression (24.35-41: )
-> $$ = nterm unary_expression (24.34-41: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1109):
   $1 = nterm unary_expression (24.34-41: )
-> $$ = nterm multiplicative_expression (24.34-41: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (24.42: )
Reducing stack by rule 56 (line 936):
   $1 = nterm multiplicative_expression (24.34-41: )
-> $$ = nterm additive_expression (24.34-41: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (24.42: )
Reducing stack by rule 51 (line 761):
   $1 = nterm additive_expression (24.34-41: )
-> $$ = nterm relational_expression (24.34-41: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (24.42: )
Reducing stack by rule 48 (line 683):
   $1 = nterm relational_expression (24.34-41: )
-> $$ = nterm equality_expression (24.34-41: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (24.42: )
Reducing stack by rule 46 (line 662):
   $1 = nterm equality_expression (24.34-41: )
-> $$ = nterm logical_and_expression (24.34-41: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (24.42: )
Reducing stack by rule 44 (line 639):
   $1 = nterm logical_and_expression (24.34-41: )
-> $$ = nterm expression (24.34-41: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (24.42: )
Reducing stack by rule 77 (line 1382):
   $1 = nterm expression_list (24.24-31: )
   $2 = token ',' (24.32: )
   $3 = nterm expression (24.34-41: )
-> $$ = nterm expression_list (24.24-41: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ')' (24.42: )
Shifting token ')' (24.42: )
Entering state 150
Reducing stack by rule 67 (line 1235):
   $1 = token IDENTIFIER (24.15-22: init_abc)
   $2 = token '(' (24.23: )
   $3 = nterm expression_list (24.24-41: )
   $4 = token ')' (24.42: )
