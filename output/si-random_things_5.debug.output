Starting parse
Entering state 0
Reading a token: Next token is token STRUCT (2.1-6: )
Shifting token STRUCT (2.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (2.8-10: abc)
Shifting token IDENTIFIER (2.8-10: abc)
Entering state 9
Reading a token: Next token is token '{' (2.12: )
Reducing stack by rule 5 (line 138):
-> $$ = nterm $@1 (2.11: )
Stack now 9 4 0
Entering state 15
Next token is token '{' (2.12: )
Shifting token '{' (2.12: )
Entering state 18
Reading a token: Next token is token INT (3.5-7: )
Shifting token INT (3.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (3.5-7: )
-> $$ = nterm type_specifier (3.5-7: )
Stack now 18 15 9 4 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (3.9-11: _qw)
Shifting token IDENTIFIER (3.9-11: _qw)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.9-11: _qw)
-> $$ = nterm declarator_arr (3.9-11: )
Stack now 26 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ',' (3.12: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.9-11: )
-> $$ = nterm declarator (3.9-11: )
Stack now 26 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (3.9-11: )
-> $$ = nterm declarator_list (3.9-11: )
Stack now 26 18 15 9 4 0
Entering state 65
Next token is token ',' (3.12: )
Shifting token ',' (3.12: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (3.14-15: qw)
Shifting token IDENTIFIER (3.14-15: qw)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.14-15: qw)
-> $$ = nterm declarator_arr (3.14-15: )
Stack now 96 65 26 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (3.16: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.14-15: )
-> $$ = nterm declarator (3.14-15: )
Stack now 96 65 26 18 15 9 4 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (3.9-11: )
   $2 = token ',' (3.12: )
   $3 = nterm declarator (3.14-15: )
-> $$ = nterm declarator_list (3.9-15: )
Stack now 26 18 15 9 4 0
Entering state 65
Next token is token ';' (3.16: )
Shifting token ';' (3.16: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (3.5-7: )
   $2 = nterm declarator_list (3.9-15: )
   $3 = token ';' (3.16: )
-> $$ = nterm declaration (3.5-16: )
Stack now 18 15 9 4 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (3.5-16: )
-> $$ = nterm declaration_list (3.5-16: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token FLOAT (4.5-9: )
Shifting token FLOAT (4.5-9: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (4.5-9: )
-> $$ = nterm type_specifier (4.5-9: )
Stack now 28 18 15 9 4 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (4.11-14: __er)
Shifting token IDENTIFIER (4.11-14: __er)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (4.11-14: __er)
-> $$ = nterm declarator_arr (4.11-14: )
Stack now 26 28 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (4.15: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (4.11-14: )
-> $$ = nterm declarator (4.11-14: )
Stack now 26 28 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (4.11-14: )
-> $$ = nterm declarator_list (4.11-14: )
Stack now 26 28 18 15 9 4 0
Entering state 65
Next token is token ';' (4.15: )
Shifting token ';' (4.15: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (4.5-9: )
   $2 = nterm declarator_list (4.11-14: )
   $3 = token ';' (4.15: )
-> $$ = nterm declaration (4.5-15: )
Stack now 28 18 15 9 4 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (3.5-16: )
   $2 = nterm declaration (4.5-15: )
-> $$ = nterm declaration_list (3.5-4.15: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token '}' (6.1: )
Shifting token '}' (6.1: )
Entering state 66
Reading a token: Next token is token ';' (6.2: )
Shifting token ';' (6.2: )
Entering state 98
Reducing stack by rule 6 (line 137):
   $1 = token STRUCT (2.1-6: )
   $2 = token IDENTIFIER (2.8-10: abc)
   $3 = nterm $@1 (2.11: )
   $4 = token '{' (2.12: )
   $5 = nterm declaration_list (3.5-4.15: )
   $6 = token '}' (6.1: )
   $7 = token ';' (6.2: )
-> $$ = nterm struct_specifier (2.1-6.2: )
Stack now 0
Entering state 6
Reducing stack by rule 1 (line 122):
   $1 = nterm struct_specifier (2.1-6.2: )
-> $$ = nterm translation_unit (2.1-6.2: )
Stack now 0
Entering state 5
Reading a token: Next token is token STRUCT (9.1-6: )
Shifting token STRUCT (9.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (9.8-10: abc)
Shifting token IDENTIFIER (9.8-10: abc)
Entering state 9
Reading a token: Next token is token IDENTIFIER (9.12-19: init_abc)
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (9.1-6: )
   $2 = token IDENTIFIER (9.8-10: abc)
-> $$ = nterm type_specifier (9.1-10: )
Stack now 5 0
Entering state 8
Next token is token IDENTIFIER (9.12-19: init_abc)
Shifting token IDENTIFIER (9.12-19: init_abc)
Entering state 13
Reading a token: Next token is token '(' (9.20: )
Shifting token '(' (9.20: )
Entering state 16
Reading a token: Next token is token INT (9.21-23: )
Shifting token INT (9.21-23: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (9.21-23: )
-> $$ = nterm type_specifier (9.21-23: )
Stack now 16 13 8 5 0
Entering state 21
Reading a token: Next token is token '*' (9.25: )
Shifting token '*' (9.25: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (9.26-27: p1)
Shifting token IDENTIFIER (9.26-27: p1)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (9.26-27: p1)
-> $$ = nterm declarator_arr (9.26-27: )
Stack now 31 21 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ',' (9.28: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (9.26-27: )
-> $$ = nterm declarator (9.26-27: )
Stack now 31 21 16 13 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (9.25: )
   $2 = nterm declarator (9.26-27: )
-> $$ = nterm declarator (9.25-27: )
Stack now 21 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (9.21-23: )
   $2 = nterm declarator (9.25-27: )
-> $$ = nterm parameter_declaration (9.21-27: )
Stack now 16 13 8 5 0
Entering state 23
Reducing stack by rule 15 (line 250):
   $1 = nterm parameter_declaration (9.21-27: )
-> $$ = nterm parameter_list (9.21-27: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ',' (9.28: )
Shifting token ',' (9.28: )
Entering state 35
Reading a token: Next token is token INT (9.30-32: )
Shifting token INT (9.30-32: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (9.30-32: )
-> $$ = nterm type_specifier (9.30-32: )
Stack now 35 22 16 13 8 5 0
Entering state 21
Reading a token: Next token is token '*' (9.34: )
Shifting token '*' (9.34: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (9.35-36: p2)
Shifting token IDENTIFIER (9.35-36: p2)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (9.35-36: p2)
-> $$ = nterm declarator_arr (9.35-36: )
Stack now 31 21 35 22 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ',' (9.37: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (9.35-36: )
-> $$ = nterm declarator (9.35-36: )
Stack now 31 21 35 22 16 13 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (9.34: )
   $2 = nterm declarator (9.35-36: )
-> $$ = nterm declarator (9.34-36: )
Stack now 21 35 22 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (9.30-32: )
   $2 = nterm declarator (9.34-36: )
-> $$ = nterm parameter_declaration (9.30-36: )
Stack now 35 22 16 13 8 5 0
Entering state 70
Reducing stack by rule 16 (line 256):
   $1 = nterm parameter_list (9.21-27: )
   $2 = token ',' (9.28: )
   $3 = nterm parameter_declaration (9.30-36: )
-> $$ = nterm parameter_list (9.21-36: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ',' (9.37: )
Shifting token ',' (9.37: )
Entering state 35
Reading a token: Next token is token FLOAT (9.39-43: )
Shifting token FLOAT (9.39-43: )
Entering state 3
Reducing stack by rule 11 (line 231):
   $1 = token FLOAT (9.39-43: )
-> $$ = nterm type_specifier (9.39-43: )
Stack now 35 22 16 13 8 5 0
Entering state 21
Reading a token: Next token is token IDENTIFIER (9.45-46: p3)
Shifting token IDENTIFIER (9.45-46: p3)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (9.45-46: p3)
-> $$ = nterm declarator_arr (9.45-46: )
Stack now 21 35 22 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ',' (9.47: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (9.45-46: )
-> $$ = nterm declarator (9.45-46: )
Stack now 21 35 22 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (9.39-43: )
   $2 = nterm declarator (9.45-46: )
-> $$ = nterm parameter_declaration (9.39-46: )
Stack now 35 22 16 13 8 5 0
Entering state 70
Reducing stack by rule 16 (line 256):
   $1 = nterm parameter_list (9.21-36: )
   $2 = token ',' (9.37: )
   $3 = nterm parameter_declaration (9.39-46: )
-> $$ = nterm parameter_list (9.21-46: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ',' (9.47: )
Shifting token ',' (9.47: )
Entering state 35
Reading a token: Next token is token STRUCT (9.49-54: )
Shifting token STRUCT (9.49-54: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (9.56-58: abc)
Shifting token IDENTIFIER (9.56-58: abc)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (9.49-54: )
   $2 = token IDENTIFIER (9.56-58: abc)
-> $$ = nterm type_specifier (9.49-58: )
Stack now 35 22 16 13 8 5 0
Entering state 21
Reading a token: Next token is token IDENTIFIER (9.60-61: p4)
Shifting token IDENTIFIER (9.60-61: p4)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (9.60-61: p4)
-> $$ = nterm declarator_arr (9.60-61: )
Stack now 21 35 22 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ')' (9.62: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (9.60-61: )
-> $$ = nterm declarator (9.60-61: )
Stack now 21 35 22 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (9.49-58: )
   $2 = nterm declarator (9.60-61: )
-> $$ = nterm parameter_declaration (9.49-61: )
Stack now 35 22 16 13 8 5 0
Entering state 70
Reducing stack by rule 16 (line 256):
   $1 = nterm parameter_list (9.21-46: )
   $2 = token ',' (9.47: )
   $3 = nterm parameter_declaration (9.49-61: )
-> $$ = nterm parameter_list (9.21-61: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ')' (9.62: )
Shifting token ')' (9.62: )
Entering state 34
Reducing stack by rule 13 (line 240):
   $1 = token IDENTIFIER (9.12-19: init_abc)
   $2 = token '(' (9.20: )
   $3 = nterm parameter_list (9.21-61: )
   $4 = token ')' (9.62: )
-> $$ = nterm fun_declarator (9.12-62: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (9.63: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (9.64: )
Shifting token '{' (9.64: )
Entering state 24
Reading a token: Next token is token STRUCT (10.5-10: )
Shifting token STRUCT (10.5-10: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (10.12-14: abc)
Shifting token IDENTIFIER (10.12-14: abc)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (10.5-10: )
   $2 = token IDENTIFIER (10.12-14: abc)
-> $$ = nterm type_specifier (10.5-14: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (10.16-19: sABC)
Shifting token IDENTIFIER (10.16-19: sABC)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (10.16-19: sABC)
-> $$ = nterm declarator_arr (10.16-19: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (10.20: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (10.16-19: )
-> $$ = nterm declarator (10.16-19: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (10.16-19: )
-> $$ = nterm declarator_list (10.16-19: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (10.20: )
Shifting token ';' (10.20: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (10.5-14: )
   $2 = nterm declarator_list (10.16-19: )
   $3 = token ';' (10.20: )
-> $$ = nterm declaration (10.5-20: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (10.5-20: )
-> $$ = nterm declaration_list (10.5-20: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token STRUCT (10.22-27: )
Shifting token STRUCT (10.22-27: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (10.29-31: abc)
Shifting token IDENTIFIER (10.29-31: abc)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (10.22-27: )
   $2 = token IDENTIFIER (10.29-31: abc)
-> $$ = nterm type_specifier (10.22-31: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token '*' (10.33: )
Shifting token '*' (10.33: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (10.34-36: ABC)
Shifting token IDENTIFIER (10.34-36: ABC)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (10.34-36: ABC)
-> $$ = nterm declarator_arr (10.34-36: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (10.37: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (10.34-36: )
-> $$ = nterm declarator (10.34-36: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (10.33: )
   $2 = nterm declarator (10.34-36: )
-> $$ = nterm declarator (10.33-36: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (10.33-36: )
-> $$ = nterm declarator_list (10.33-36: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (10.37: )
Shifting token ';' (10.37: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (10.22-31: )
   $2 = nterm declarator_list (10.33-36: )
   $3 = token ';' (10.37: )
-> $$ = nterm declaration (10.22-37: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (10.5-20: )
   $2 = nterm declaration (10.22-37: )
-> $$ = nterm declaration_list (10.5-37: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (11.5-7: ABC)
Shifting token IDENTIFIER (11.5-7: ABC)
Entering state 40
Reading a token: Next token is token PTR_OP (11.9-10: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (11.5-7: ABC)
-> $$ = nterm primary_expression (11.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (11.5-7: )
-> $$ = nterm postfix_expression (11.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (11.9-10: )
Shifting token PTR_OP (11.9-10: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (11.12-14: _qw)
Shifting token IDENTIFIER (11.12-14: _qw)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (11.5-7: )
   $2 = token PTR_OP (11.9-10: )
   $3 = token IDENTIFIER (11.12-14: _qw)
-> $$ = nterm postfix_expression (11.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (11.16: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (11.5-14: )
-> $$ = nterm unary_expression (11.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (11.16: )
Shifting token '=' (11.16: )
Entering state 90
Reading a token: Next token is token '*' (11.18: )
Shifting token '*' (11.18: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (11.18: )
-> $$ = nterm unary_operator (11.18: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (11.19-20: p1)
Shifting token IDENTIFIER (11.19-20: p1)
Entering state 71
Reading a token: Next token is token '+' (11.22: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (11.19-20: p1)
-> $$ = nterm primary_expression (11.19-20: )
Stack now 60 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (11.19-20: )
-> $$ = nterm postfix_expression (11.19-20: )
Stack now 60 90 57 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (11.22: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (11.19-20: )
-> $$ = nterm unary_expression (11.19-20: )
Stack now 60 90 57 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (11.18: )
   $2 = nterm unary_expression (11.19-20: )
-> $$ = nterm unary_expression (11.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (11.18-20: )
-> $$ = nterm multiplicative_expression (11.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (11.22: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (11.18-20: )
-> $$ = nterm additive_expression (11.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (11.22: )
Shifting token '+' (11.22: )
Entering state 110
Reading a token: Next token is token '*' (11.24: )
Shifting token '*' (11.24: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (11.24: )
-> $$ = nterm unary_operator (11.24: )
Stack now 110 76 90 57 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (11.25-26: p2)
Shifting token IDENTIFIER (11.25-26: p2)
Entering state 71
Reading a token: Next token is token ';' (11.27: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (11.25-26: p2)
-> $$ = nterm primary_expression (11.25-26: )
Stack now 60 110 76 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (11.25-26: )
-> $$ = nterm postfix_expression (11.25-26: )
Stack now 60 110 76 90 57 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (11.27: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (11.25-26: )
-> $$ = nterm unary_expression (11.25-26: )
Stack now 60 110 76 90 57 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (11.24: )
   $2 = nterm unary_expression (11.25-26: )
-> $$ = nterm unary_expression (11.24-26: )
Stack now 110 76 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (11.24-26: )
-> $$ = nterm multiplicative_expression (11.24-26: )
Stack now 110 76 90 57 52 24 17 14 8 5 0
Entering state 139
Next token is token ';' (11.27: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (11.18-20: )
   $2 = token '+' (11.22: )
   $3 = nterm multiplicative_expression (11.24-26: )
-> $$ = nterm additive_expression (11.18-26: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (11.27: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (11.18-26: )
-> $$ = nterm relational_expression (11.18-26: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (11.27: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (11.18-26: )
-> $$ = nterm equality_expression (11.18-26: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (11.27: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (11.18-26: )
-> $$ = nterm logical_and_expression (11.18-26: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (11.27: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (11.18-26: )
-> $$ = nterm expression (11.18-26: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (11.27: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (11.5-14: )
   $2 = token '=' (11.16: )
   $3 = nterm expression (11.18-26: )
-> $$ = nterm assignment_expression (11.5-26: )
Stack now 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (11.27: )
Shifting token ';' (11.27: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (11.5-26: )
   $2 = token ';' (11.27: )
-> $$ = nterm assignment_statement (11.5-27: )
Stack now 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (11.5-27: )
-> $$ = nterm statement (11.5-27: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (11.5-27: )
-> $$ = nterm statement_list (11.5-27: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (12.5-7: ABC)
Shifting token IDENTIFIER (12.5-7: ABC)
Entering state 40
Reading a token: Next token is token PTR_OP (12.9-10: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (12.5-7: ABC)
-> $$ = nterm primary_expression (12.5-7: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (12.5-7: )
-> $$ = nterm postfix_expression (12.5-7: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (12.9-10: )
Shifting token PTR_OP (12.9-10: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (12.12-13: qw)
Shifting token IDENTIFIER (12.12-13: qw)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (12.5-7: )
   $2 = token PTR_OP (12.9-10: )
   $3 = token IDENTIFIER (12.12-13: qw)
-> $$ = nterm postfix_expression (12.5-13: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (12.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (12.5-13: )
-> $$ = nterm unary_expression (12.5-13: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (12.15: )
Shifting token '=' (12.15: )
Entering state 90
Reading a token: Next token is token '(' (12.17: )
Shifting token '(' (12.17: )
Entering state 44
Reading a token: Next token is token '*' (12.18: )
Shifting token '*' (12.18: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (12.18: )
-> $$ = nterm unary_operator (12.18: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (12.19-20: p1)
Shifting token IDENTIFIER (12.19-20: p1)
Entering state 71
Reading a token: Next token is token ')' (12.21: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (12.19-20: p1)
-> $$ = nterm primary_expression (12.19-20: )
Stack now 60 44 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (12.19-20: )
-> $$ = nterm postfix_expression (12.19-20: )
Stack now 60 44 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (12.21: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (12.19-20: )
-> $$ = nterm unary_expression (12.19-20: )
Stack now 60 44 90 57 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (12.18: )
   $2 = nterm unary_expression (12.19-20: )
-> $$ = nterm unary_expression (12.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (12.18-20: )
-> $$ = nterm multiplicative_expression (12.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (12.21: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (12.18-20: )
-> $$ = nterm additive_expression (12.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (12.21: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (12.18-20: )
-> $$ = nterm relational_expression (12.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (12.21: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (12.18-20: )
-> $$ = nterm equality_expression (12.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (12.21: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (12.18-20: )
-> $$ = nterm logical_and_expression (12.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (12.21: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (12.18-20: )
-> $$ = nterm expression (12.18-20: )
Stack now 44 90 57 86 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (12.21: )
Shifting token ')' (12.21: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (12.17: )
   $2 = nterm expression (12.18-20: )
   $3 = token ')' (12.21: )
-> $$ = nterm primary_expression (12.17-21: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (12.17-21: )
-> $$ = nterm postfix_expression (12.17-21: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token INC_OP (12.22-23: )
Shifting token INC_OP (12.22-23: )
Entering state 94
Reducing stack by rule 70 (line 1336):
   $1 = nterm postfix_expression (12.17-21: )
   $2 = token INC_OP (12.22-23: )
-> $$ = nterm postfix_expression (12.17-23: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '+' (12.25: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (12.17-23: )
-> $$ = nterm unary_expression (12.17-23: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (12.17-23: )
-> $$ = nterm multiplicative_expression (12.17-23: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (12.25: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (12.17-23: )
-> $$ = nterm additive_expression (12.17-23: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (12.25: )
Shifting token '+' (12.25: )
Entering state 110
Reading a token: Next token is token '(' (12.27: )
Shifting token '(' (12.27: )
Entering state 44
Reading a token: Next token is token '*' (12.28: )
Shifting token '*' (12.28: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (12.28: )
-> $$ = nterm unary_operator (12.28: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (12.29-30: p2)
Shifting token IDENTIFIER (12.29-30: p2)
Entering state 71
Reading a token: Next token is token ')' (12.31: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (12.29-30: p2)
-> $$ = nterm primary_expression (12.29-30: )
Stack now 60 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (12.29-30: )
-> $$ = nterm postfix_expression (12.29-30: )
Stack now 60 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (12.31: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (12.29-30: )
-> $$ = nterm unary_expression (12.29-30: )
Stack now 60 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (12.28: )
   $2 = nterm unary_expression (12.29-30: )
-> $$ = nterm unary_expression (12.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (12.28-30: )
-> $$ = nterm multiplicative_expression (12.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (12.31: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (12.28-30: )
-> $$ = nterm additive_expression (12.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (12.31: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (12.28-30: )
-> $$ = nterm relational_expression (12.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (12.31: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (12.28-30: )
-> $$ = nterm equality_expression (12.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (12.31: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (12.28-30: )
-> $$ = nterm logical_and_expression (12.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (12.31: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (12.28-30: )
-> $$ = nterm expression (12.28-30: )
Stack now 44 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 83
Next token is token ')' (12.31: )
Shifting token ')' (12.31: )
Entering state 120
Reducing stack by rule 75 (line 1387):
   $1 = token '(' (12.27: )
   $2 = nterm expression (12.28-30: )
   $3 = token ')' (12.31: )
-> $$ = nterm primary_expression (12.27-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (12.27-31: )
-> $$ = nterm postfix_expression (12.27-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token INC_OP (12.32-33: )
Shifting token INC_OP (12.32-33: )
Entering state 94
Reducing stack by rule 70 (line 1336):
   $1 = nterm postfix_expression (12.27-31: )
   $2 = token INC_OP (12.32-33: )
-> $$ = nterm postfix_expression (12.27-33: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (12.34: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (12.27-33: )
-> $$ = nterm unary_expression (12.27-33: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (12.27-33: )
-> $$ = nterm multiplicative_expression (12.27-33: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ';' (12.34: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (12.17-23: )
   $2 = token '+' (12.25: )
   $3 = nterm multiplicative_expression (12.27-33: )
-> $$ = nterm additive_expression (12.17-33: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (12.34: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (12.17-33: )
-> $$ = nterm relational_expression (12.17-33: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (12.34: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (12.17-33: )
-> $$ = nterm equality_expression (12.17-33: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (12.34: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (12.17-33: )
-> $$ = nterm logical_and_expression (12.17-33: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (12.34: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (12.17-33: )
-> $$ = nterm expression (12.17-33: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (12.34: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (12.5-13: )
   $2 = token '=' (12.15: )
   $3 = nterm expression (12.17-33: )
-> $$ = nterm assignment_expression (12.5-33: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (12.34: )
Shifting token ';' (12.34: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (12.5-33: )
   $2 = token ';' (12.34: )
-> $$ = nterm assignment_statement (12.5-34: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (12.5-34: )
-> $$ = nterm statement (12.5-34: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (11.5-27: )
   $2 = nterm statement (12.5-34: )
-> $$ = nterm statement_list (11.5-12.34: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (13.5-7: ABC)
Shifting token IDENTIFIER (13.5-7: ABC)
Entering state 40
Reading a token: Next token is token PTR_OP (13.9-10: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (13.5-7: ABC)
-> $$ = nterm primary_expression (13.5-7: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (13.5-7: )
-> $$ = nterm postfix_expression (13.5-7: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token PTR_OP (13.9-10: )
Shifting token PTR_OP (13.9-10: )
Entering state 92
Reading a token: Next token is token IDENTIFIER (13.12-15: __er)
Shifting token IDENTIFIER (13.12-15: __er)
Entering state 125
Reducing stack by rule 69 (line 1319):
   $1 = nterm postfix_expression (13.5-7: )
   $2 = token PTR_OP (13.9-10: )
   $3 = token IDENTIFIER (13.12-15: __er)
-> $$ = nterm postfix_expression (13.5-15: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (13.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (13.5-15: )
-> $$ = nterm unary_expression (13.5-15: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (13.17: )
Shifting token '=' (13.17: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (13.19-20: p3)
Shifting token IDENTIFIER (13.19-20: p3)
Entering state 71
Reading a token: Next token is token '+' (13.22: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (13.19-20: p3)
-> $$ = nterm primary_expression (13.19-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (13.19-20: )
-> $$ = nterm postfix_expression (13.19-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (13.22: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (13.19-20: )
-> $$ = nterm unary_expression (13.19-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (13.19-20: )
-> $$ = nterm multiplicative_expression (13.19-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (13.22: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (13.19-20: )
-> $$ = nterm additive_expression (13.19-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (13.22: )
Shifting token '+' (13.22: )
Entering state 110
Reading a token: Next token is token FLOAT_CONSTANT (13.24-31: .897e-19)
Shifting token FLOAT_CONSTANT (13.24-31: .897e-19)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (13.24-31: .897e-19)
-> $$ = nterm primary_expression (13.24-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (13.24-31: )
-> $$ = nterm postfix_expression (13.24-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (13.32: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (13.24-31: )
-> $$ = nterm unary_expression (13.24-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (13.24-31: )
-> $$ = nterm multiplicative_expression (13.24-31: )
Stack now 110 76 90 57 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ';' (13.32: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (13.19-20: )
   $2 = token '+' (13.22: )
   $3 = nterm multiplicative_expression (13.24-31: )
-> $$ = nterm additive_expression (13.19-31: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (13.32: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (13.19-31: )
-> $$ = nterm relational_expression (13.19-31: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (13.32: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (13.19-31: )
-> $$ = nterm equality_expression (13.19-31: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (13.32: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (13.19-31: )
-> $$ = nterm logical_and_expression (13.19-31: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (13.32: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (13.19-31: )
-> $$ = nterm expression (13.19-31: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (13.32: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (13.5-15: )
   $2 = token '=' (13.17: )
   $3 = nterm expression (13.19-31: )
-> $$ = nterm assignment_expression (13.5-31: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (13.32: )
Shifting token ';' (13.32: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (13.5-31: )
   $2 = token ';' (13.32: )
-> $$ = nterm assignment_statement (13.5-32: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (13.5-32: )
-> $$ = nterm statement (13.5-32: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (11.5-12.34: )
   $2 = nterm statement (13.5-32: )
-> $$ = nterm statement_list (11.5-13.32: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token RETURN (15.5-10: )
Shifting token RETURN (15.5-10: )
Entering state 36
Reading a token: Next token is token '*' (15.12: )
Shifting token '*' (15.12: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (15.12: )
-> $$ = nterm unary_operator (15.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (15.13-15: ABC)
Shifting token IDENTIFIER (15.13-15: ABC)
Entering state 71
Reading a token: Next token is token ';' (15.16: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (15.13-15: ABC)
-> $$ = nterm primary_expression (15.13-15: )
Stack now 60 36 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (15.13-15: )
-> $$ = nterm postfix_expression (15.13-15: )
Stack now 60 36 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (15.16: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (15.13-15: )
-> $$ = nterm unary_expression (15.13-15: )
Stack now 60 36 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (15.12: )
   $2 = nterm unary_expression (15.13-15: )
-> $$ = nterm unary_expression (15.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (15.12-15: )
-> $$ = nterm multiplicative_expression (15.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (15.16: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (15.12-15: )
-> $$ = nterm additive_expression (15.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (15.16: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (15.12-15: )
-> $$ = nterm relational_expression (15.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (15.16: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (15.12-15: )
-> $$ = nterm equality_expression (15.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (15.16: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (15.12-15: )
-> $$ = nterm logical_and_expression (15.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (15.16: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (15.12-15: )
-> $$ = nterm expression (15.12-15: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 72
Next token is token ';' (15.16: )
Shifting token ';' (15.16: )
Entering state 102
Reducing stack by rule 39 (line 477):
   $1 = token RETURN (15.5-10: )
   $2 = nterm expression (15.12-15: )
   $3 = token ';' (15.16: )
-> $$ = nterm statement (15.5-16: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (11.5-13.32: )
   $2 = nterm statement (15.5-16: )
-> $$ = nterm statement_list (11.5-15.16: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (16.1: )
Shifting token '}' (16.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (9.64: )
   $2 = nterm declaration_list (10.5-37: )
   $3 = nterm statement_list (11.5-15.16: )
   $4 = token '}' (16.1: )
-> $$ = nterm compound_statement (9.64-16.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (9.1-10: )
   $2 = nterm fun_declarator (9.12-62: )
   $3 = nterm $@2 (9.63: )
   $4 = nterm compound_statement (9.64-16.1: )
-> $$ = nterm function_definition (9.1-16.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (2.1-6.2: )
   $2 = nterm function_definition (9.1-16.1: )
-> $$ = nterm translation_unit (2.1-16.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (18.1-3: )
Shifting token INT (18.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (18.1-3: )
-> $$ = nterm type_specifier (18.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (18.5-8: main)
Shifting token IDENTIFIER (18.5-8: main)
Entering state 13
Reading a token: Next token is token '(' (18.10: )
Shifting token '(' (18.10: )
Entering state 16
Reading a token: Next token is token INT (18.11-13: )
Shifting token INT (18.11-13: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (18.11-13: )
-> $$ = nterm type_specifier (18.11-13: )
Stack now 16 13 8 5 0
Entering state 21
Reading a token: Next token is token IDENTIFIER (18.15-18: argc)
Shifting token IDENTIFIER (18.15-18: argc)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (18.15-18: argc)
-> $$ = nterm declarator_arr (18.15-18: )
Stack now 21 16 13 8 5 0
Entering state 32
Reading a token: Next token is token ')' (18.19: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (18.15-18: )
-> $$ = nterm declarator (18.15-18: )
Stack now 21 16 13 8 5 0
Entering state 33
Reducing stack by rule 17 (line 265):
   $1 = nterm type_specifier (18.11-13: )
   $2 = nterm declarator (18.15-18: )
-> $$ = nterm parameter_declaration (18.11-18: )
Stack now 16 13 8 5 0
Entering state 23
Reducing stack by rule 15 (line 250):
   $1 = nterm parameter_declaration (18.11-18: )
-> $$ = nterm parameter_list (18.11-18: )
Stack now 16 13 8 5 0
Entering state 22
Next token is token ')' (18.19: )
Shifting token ')' (18.19: )
Entering state 34
Reducing stack by rule 13 (line 240):
   $1 = token IDENTIFIER (18.5-8: main)
   $2 = token '(' (18.10: )
   $3 = nterm parameter_list (18.11-18: )
   $4 = token ')' (18.19: )
-> $$ = nterm fun_declarator (18.5-19: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (18.20: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (18.21: )
Shifting token '{' (18.21: )
Entering state 24
Reading a token: Next token is token STRUCT (19.5-10: )
Shifting token STRUCT (19.5-10: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (19.12-14: abc)
Shifting token IDENTIFIER (19.12-14: abc)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (19.5-10: )
   $2 = token IDENTIFIER (19.12-14: abc)
-> $$ = nterm type_specifier (19.5-14: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (19.16-18: ABC)
Shifting token IDENTIFIER (19.16-18: ABC)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (19.16-18: ABC)
-> $$ = nterm declarator_arr (19.16-18: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (19.19: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (19.16-18: )
-> $$ = nterm declarator (19.16-18: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (19.16-18: )
-> $$ = nterm declarator_list (19.16-18: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (19.19: )
Shifting token ';' (19.19: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (19.5-14: )
   $2 = nterm declarator_list (19.16-18: )
   $3 = token ';' (19.19: )
-> $$ = nterm declaration (19.5-19: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (19.5-19: )
-> $$ = nterm declaration_list (19.5-19: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (20.5-7: )
Shifting token INT (20.5-7: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (20.5-7: )
-> $$ = nterm type_specifier (20.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token '*' (20.9: )
Shifting token '*' (20.9: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (20.10-11: p1)
Shifting token IDENTIFIER (20.10-11: p1)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (20.10-11: p1)
-> $$ = nterm declarator_arr (20.10-11: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ',' (20.12: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (20.10-11: )
-> $$ = nterm declarator (20.10-11: )
Stack now 31 26 52 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (20.9: )
   $2 = nterm declarator (20.10-11: )
-> $$ = nterm declarator (20.9-11: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (20.9-11: )
-> $$ = nterm declarator_list (20.9-11: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ',' (20.12: )
Shifting token ',' (20.12: )
Entering state 96
Reading a token: Next token is token '*' (20.14: )
Shifting token '*' (20.14: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (20.15-16: p2)
Shifting token IDENTIFIER (20.15-16: p2)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (20.15-16: p2)
-> $$ = nterm declarator_arr (20.15-16: )
Stack now 31 96 65 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (20.17: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (20.15-16: )
-> $$ = nterm declarator (20.15-16: )
Stack now 31 96 65 26 52 24 17 14 8 5 0
Entering state 68
Reducing stack by rule 21 (line 297):
   $1 = token '*' (20.14: )
   $2 = nterm declarator (20.15-16: )
-> $$ = nterm declarator (20.14-16: )
Stack now 96 65 26 52 24 17 14 8 5 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (20.9-11: )
   $2 = token ',' (20.12: )
   $3 = nterm declarator (20.14-16: )
-> $$ = nterm declarator_list (20.9-16: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (20.17: )
Shifting token ';' (20.17: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (20.5-7: )
   $2 = nterm declarator_list (20.9-16: )
   $3 = token ';' (20.17: )
-> $$ = nterm declaration (20.5-17: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (19.5-19: )
   $2 = nterm declaration (20.5-17: )
-> $$ = nterm declaration_list (19.5-20.17: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (21.5-9: scanf)
Shifting token IDENTIFIER (21.5-9: scanf)
Entering state 40
Reading a token: Next token is token '(' (21.10: )
Shifting token '(' (21.10: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (21.11-14: "%d")
Shifting token STRING_LITERAL (21.11-14: "%d")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (21.11-14: "%d")
-> $$ = nterm primary_expression (21.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.11-14: )
-> $$ = nterm postfix_expression (21.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (21.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.11-14: )
-> $$ = nterm unary_expression (21.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.11-14: )
-> $$ = nterm multiplicative_expression (21.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (21.15: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.11-14: )
-> $$ = nterm additive_expression (21.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (21.15: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.11-14: )
-> $$ = nterm relational_expression (21.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (21.15: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.11-14: )
-> $$ = nterm equality_expression (21.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (21.15: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.11-14: )
-> $$ = nterm logical_and_expression (21.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (21.15: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.11-14: )
-> $$ = nterm expression (21.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (21.15: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (21.11-14: )
-> $$ = nterm expression_list (21.11-14: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (21.15: )
Shifting token ',' (21.15: )
Entering state 148
Reading a token: Next token is token '&' (21.17: )
Shifting token '&' (21.17: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (21.17: )
-> $$ = nterm unary_operator (21.17: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (21.18-19: p1)
Shifting token IDENTIFIER (21.18-19: p1)
Entering state 71
Reading a token: Next token is token ')' (21.20: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (21.18-19: p1)
-> $$ = nterm primary_expression (21.18-19: )
Stack now 60 148 119 82 40 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (21.18-19: )
-> $$ = nterm postfix_expression (21.18-19: )
Stack now 60 148 119 82 40 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (21.20: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (21.18-19: )
-> $$ = nterm unary_expression (21.18-19: )
Stack now 60 148 119 82 40 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (21.17: )
   $2 = nterm unary_expression (21.18-19: )
-> $$ = nterm unary_expression (21.17-19: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (21.17-19: )
-> $$ = nterm multiplicative_expression (21.17-19: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (21.20: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (21.17-19: )
-> $$ = nterm additive_expression (21.17-19: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (21.20: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (21.17-19: )
-> $$ = nterm relational_expression (21.17-19: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (21.20: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (21.17-19: )
-> $$ = nterm equality_expression (21.17-19: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (21.20: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (21.17-19: )
-> $$ = nterm logical_and_expression (21.17-19: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (21.20: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (21.17-19: )
-> $$ = nterm expression (21.17-19: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (21.20: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (21.11-14: )
   $2 = token ',' (21.15: )
   $3 = nterm expression (21.17-19: )
-> $$ = nterm expression_list (21.11-19: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (21.20: )
Shifting token ')' (21.20: )
Entering state 147
Reading a token: Next token is token ';' (21.21: )
Shifting token ';' (21.21: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (21.5-9: scanf)
   $2 = token '(' (21.10: )
   $3 = nterm expression_list (21.11-19: )
   $4 = token ')' (21.20: )
   $5 = token ';' (21.21: )
-> $$ = nterm procedure_call (21.5-21: )
Stack now 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (21.5-21: )
-> $$ = nterm statement (21.5-21: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (21.5-21: )
-> $$ = nterm statement_list (21.5-21: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (22.5-9: scanf)
Shifting token IDENTIFIER (22.5-9: scanf)
Entering state 40
Reading a token: Next token is token '(' (22.10: )
Shifting token '(' (22.10: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (22.11-14: "%d")
Shifting token STRING_LITERAL (22.11-14: "%d")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (22.11-14: "%d")
-> $$ = nterm primary_expression (22.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (22.11-14: )
-> $$ = nterm postfix_expression (22.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (22.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (22.11-14: )
-> $$ = nterm unary_expression (22.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (22.11-14: )
-> $$ = nterm multiplicative_expression (22.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (22.15: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (22.11-14: )
-> $$ = nterm additive_expression (22.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (22.15: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (22.11-14: )
-> $$ = nterm relational_expression (22.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (22.15: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (22.11-14: )
-> $$ = nterm equality_expression (22.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (22.15: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (22.11-14: )
-> $$ = nterm logical_and_expression (22.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (22.15: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (22.11-14: )
-> $$ = nterm expression (22.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (22.15: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (22.11-14: )
-> $$ = nterm expression_list (22.11-14: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (22.15: )
Shifting token ',' (22.15: )
Entering state 148
Reading a token: Next token is token '&' (22.17: )
Shifting token '&' (22.17: )
Entering state 51
Reducing stack by rule 80 (line 1410):
   $1 = token '&' (22.17: )
-> $$ = nterm unary_operator (22.17: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (22.18-19: p2)
Shifting token IDENTIFIER (22.18-19: p2)
Entering state 71
Reading a token: Next token is token ')' (22.20: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (22.18-19: p2)
-> $$ = nterm primary_expression (22.18-19: )
Stack now 60 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (22.18-19: )
-> $$ = nterm postfix_expression (22.18-19: )
Stack now 60 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (22.20: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (22.18-19: )
-> $$ = nterm unary_expression (22.18-19: )
Stack now 60 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (22.17: )
   $2 = nterm unary_expression (22.18-19: )
-> $$ = nterm unary_expression (22.17-19: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (22.17-19: )
-> $$ = nterm multiplicative_expression (22.17-19: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (22.20: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (22.17-19: )
-> $$ = nterm additive_expression (22.17-19: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (22.20: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (22.17-19: )
-> $$ = nterm relational_expression (22.17-19: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (22.20: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (22.17-19: )
-> $$ = nterm equality_expression (22.17-19: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (22.20: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (22.17-19: )
-> $$ = nterm logical_and_expression (22.17-19: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (22.20: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (22.17-19: )
-> $$ = nterm expression (22.17-19: )
Stack now 148 119 82 40 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (22.20: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (22.11-14: )
   $2 = token ',' (22.15: )
   $3 = nterm expression (22.17-19: )
-> $$ = nterm expression_list (22.11-19: )
Stack now 82 40 86 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (22.20: )
Shifting token ')' (22.20: )
Entering state 147
Reading a token: Next token is token ';' (22.21: )
Shifting token ';' (22.21: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (22.5-9: scanf)
   $2 = token '(' (22.10: )
   $3 = nterm expression_list (22.11-19: )
   $4 = token ')' (22.20: )
   $5 = token ';' (22.21: )
-> $$ = nterm procedure_call (22.5-21: )
Stack now 86 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (22.5-21: )
-> $$ = nterm statement (22.5-21: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (21.5-21: )
   $2 = nterm statement (22.5-21: )
-> $$ = nterm statement_list (21.5-22.21: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IF (24.5-6: )
Shifting token IF (24.5-6: )
Entering state 39
Reading a token: Next token is token '(' (24.8: )
Shifting token '(' (24.8: )
Entering state 81
Reading a token: Next token is token '*' (24.9: )
Shifting token '*' (24.9: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (24.9: )
-> $$ = nterm unary_operator (24.9: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (24.10-11: p1)
Shifting token IDENTIFIER (24.10-11: p1)
Entering state 71
Reading a token: Next token is token '>' (24.13: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (24.10-11: p1)
-> $$ = nterm primary_expression (24.10-11: )
Stack now 60 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (24.10-11: )
-> $$ = nterm postfix_expression (24.10-11: )
Stack now 60 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '>' (24.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (24.10-11: )
-> $$ = nterm unary_expression (24.10-11: )
Stack now 60 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (24.9: )
   $2 = nterm unary_expression (24.10-11: )
-> $$ = nterm unary_expression (24.9-11: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (24.9-11: )
-> $$ = nterm multiplicative_expression (24.9-11: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '>' (24.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (24.9-11: )
-> $$ = nterm additive_expression (24.9-11: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '>' (24.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (24.9-11: )
-> $$ = nterm relational_expression (24.9-11: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token '>' (24.13: )
Shifting token '>' (24.13: )
Entering state 108
Reading a token: Next token is token INT_CONSTANT (24.15: 5)
Shifting token INT_CONSTANT (24.15: 5)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (24.15: 5)
-> $$ = nterm primary_expression (24.15: )
Stack now 108 75 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (24.15: )
-> $$ = nterm postfix_expression (24.15: )
Stack now 108 75 81 39 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token OR_OP (24.17-18: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (24.15: )
-> $$ = nterm unary_expression (24.15: )
Stack now 108 75 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (24.15: )
-> $$ = nterm multiplicative_expression (24.15: )
Stack now 108 75 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token OR_OP (24.17-18: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (24.15: )
-> $$ = nterm additive_expression (24.15: )
Stack now 108 75 81 39 86 52 24 17 14 8 5 0
Entering state 137
Next token is token OR_OP (24.17-18: )
Reducing stack by rule 53 (line 820):
   $1 = nterm relational_expression (24.9-11: )
   $2 = token '>' (24.13: )
   $3 = nterm additive_expression (24.15: )
-> $$ = nterm relational_expression (24.9-15: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token OR_OP (24.17-18: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (24.9-15: )
-> $$ = nterm equality_expression (24.9-15: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token OR_OP (24.17-18: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (24.9-15: )
-> $$ = nterm logical_and_expression (24.9-15: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token OR_OP (24.17-18: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (24.9-15: )
-> $$ = nterm expression (24.9-15: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 116
Next token is token OR_OP (24.17-18: )
Shifting token OR_OP (24.17-18: )
Entering state 101
Reading a token: Next token is token '*' (24.20: )
Shifting token '*' (24.20: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (24.20: )
-> $$ = nterm unary_operator (24.20: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (24.21-22: p2)
Shifting token IDENTIFIER (24.21-22: p2)
Entering state 71
Reading a token: Next token is token '<' (24.24: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (24.21-22: p2)
-> $$ = nterm primary_expression (24.21-22: )
Stack now 60 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (24.21-22: )
-> $$ = nterm postfix_expression (24.21-22: )
Stack now 60 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '<' (24.24: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (24.21-22: )
-> $$ = nterm unary_expression (24.21-22: )
Stack now 60 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (24.20: )
   $2 = nterm unary_expression (24.21-22: )
-> $$ = nterm unary_expression (24.20-22: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (24.20-22: )
-> $$ = nterm multiplicative_expression (24.20-22: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '<' (24.24: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (24.20-22: )
-> $$ = nterm additive_expression (24.20-22: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '<' (24.24: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (24.20-22: )
-> $$ = nterm relational_expression (24.20-22: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token '<' (24.24: )
Shifting token '<' (24.24: )
Entering state 106
Reading a token: Next token is token INT_CONSTANT (24.26: 5)
Shifting token INT_CONSTANT (24.26: 5)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (24.26: 5)
-> $$ = nterm primary_expression (24.26: )
Stack now 106 75 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (24.26: )
-> $$ = nterm postfix_expression (24.26: )
Stack now 106 75 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (24.28: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (24.26: )
-> $$ = nterm unary_expression (24.26: )
Stack now 106 75 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (24.26: )
-> $$ = nterm multiplicative_expression (24.26: )
Stack now 106 75 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (24.28: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (24.26: )
-> $$ = nterm additive_expression (24.26: )
Stack now 106 75 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 135
Next token is token ')' (24.28: )
Reducing stack by rule 52 (line 779):
   $1 = nterm relational_expression (24.20-22: )
   $2 = token '<' (24.24: )
   $3 = nterm additive_expression (24.26: )
-> $$ = nterm relational_expression (24.20-26: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (24.28: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (24.20-26: )
-> $$ = nterm equality_expression (24.20-26: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (24.28: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (24.20-26: )
-> $$ = nterm logical_and_expression (24.20-26: )
Stack now 101 116 81 39 86 52 24 17 14 8 5 0
Entering state 131
Next token is token ')' (24.28: )
Reducing stack by rule 45 (line 657):
   $1 = nterm expression (24.9-15: )
   $2 = token OR_OP (24.17-18: )
   $3 = nterm logical_and_expression (24.20-26: )
-> $$ = nterm expression (24.9-26: )
Stack now 81 39 86 52 24 17 14 8 5 0
Entering state 116
Next token is token ')' (24.28: )
Shifting token ')' (24.28: )
Entering state 145
Reading a token: Next token is token '{' (24.30: )
Shifting token '{' (24.30: )
Entering state 45
Reading a token: Next token is token IDENTIFIER (25.9-11: ABC)
Shifting token IDENTIFIER (25.9-11: ABC)
Entering state 40
Reading a token: Next token is token '=' (25.13: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (25.9-11: ABC)
-> $$ = nterm primary_expression (25.9-11: )
Stack now 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.9-11: )
-> $$ = nterm postfix_expression (25.9-11: )
Stack now 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (25.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.9-11: )
-> $$ = nterm unary_expression (25.9-11: )
Stack now 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (25.13: )
Shifting token '=' (25.13: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (25.15-22: init_abc)
Shifting token IDENTIFIER (25.15-22: init_abc)
Entering state 71
Reading a token: Next token is token '(' (25.23: )
Shifting token '(' (25.23: )
Entering state 100
Reading a token: Next token is token IDENTIFIER (25.24-25: p1)
Shifting token IDENTIFIER (25.24-25: p1)
Entering state 71
Reading a token: Next token is token ',' (25.26: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (25.24-25: p1)
-> $$ = nterm primary_expression (25.24-25: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.24-25: )
-> $$ = nterm postfix_expression (25.24-25: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ',' (25.26: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.24-25: )
-> $$ = nterm unary_expression (25.24-25: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (25.24-25: )
-> $$ = nterm multiplicative_expression (25.24-25: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (25.26: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (25.24-25: )
-> $$ = nterm additive_expression (25.24-25: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (25.26: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (25.24-25: )
-> $$ = nterm relational_expression (25.24-25: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (25.26: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (25.24-25: )
-> $$ = nterm equality_expression (25.24-25: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (25.26: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (25.24-25: )
-> $$ = nterm logical_and_expression (25.24-25: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (25.26: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (25.24-25: )
-> $$ = nterm expression (25.24-25: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (25.26: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (25.24-25: )
-> $$ = nterm expression_list (25.24-25: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ',' (25.26: )
Shifting token ',' (25.26: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (25.28-29: p2)
Shifting token IDENTIFIER (25.28-29: p2)
Entering state 71
Reading a token: Next token is token ',' (25.30: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (25.28-29: p2)
-> $$ = nterm primary_expression (25.28-29: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.28-29: )
-> $$ = nterm postfix_expression (25.28-29: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ',' (25.30: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.28-29: )
-> $$ = nterm unary_expression (25.28-29: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (25.28-29: )
-> $$ = nterm multiplicative_expression (25.28-29: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (25.30: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (25.28-29: )
-> $$ = nterm additive_expression (25.28-29: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (25.30: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (25.28-29: )
-> $$ = nterm relational_expression (25.28-29: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (25.30: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (25.28-29: )
-> $$ = nterm equality_expression (25.28-29: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (25.30: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (25.28-29: )
-> $$ = nterm logical_and_expression (25.28-29: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (25.30: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (25.28-29: )
-> $$ = nterm expression (25.28-29: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (25.30: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (25.24-25: )
   $2 = token ',' (25.26: )
   $3 = nterm expression (25.28-29: )
-> $$ = nterm expression_list (25.24-29: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ',' (25.30: )
Shifting token ',' (25.30: )
Entering state 148
Reading a token: Next token is token '-' (25.32: )
Shifting token '-' (25.32: )
Entering state 49
Reducing stack by rule 78 (line 1404):
   $1 = token '-' (25.32: )
-> $$ = nterm unary_operator (25.32: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token FLOAT_CONSTANT (25.33-39: 12.80e0)
Shifting token FLOAT_CONSTANT (25.33-39: 12.80e0)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (25.33-39: 12.80e0)
-> $$ = nterm primary_expression (25.33-39: )
Stack now 60 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.33-39: )
-> $$ = nterm postfix_expression (25.33-39: )
Stack now 60 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (25.40: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.33-39: )
-> $$ = nterm unary_expression (25.33-39: )
Stack now 60 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (25.32: )
   $2 = nterm unary_expression (25.33-39: )
-> $$ = nterm unary_expression (25.32-39: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (25.32-39: )
-> $$ = nterm multiplicative_expression (25.32-39: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (25.40: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (25.32-39: )
-> $$ = nterm additive_expression (25.32-39: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (25.40: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (25.32-39: )
-> $$ = nterm relational_expression (25.32-39: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (25.40: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (25.32-39: )
-> $$ = nterm equality_expression (25.32-39: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (25.40: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (25.32-39: )
-> $$ = nterm logical_and_expression (25.32-39: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (25.40: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (25.32-39: )
-> $$ = nterm expression (25.32-39: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (25.40: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (25.24-29: )
   $2 = token ',' (25.30: )
   $3 = nterm expression (25.32-39: )
-> $$ = nterm expression_list (25.24-39: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ',' (25.40: )
Shifting token ',' (25.40: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (25.42-44: ABC)
Shifting token IDENTIFIER (25.42-44: ABC)
Entering state 71
Reading a token: Next token is token ')' (25.45: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (25.42-44: ABC)
-> $$ = nterm primary_expression (25.42-44: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.42-44: )
-> $$ = nterm postfix_expression (25.42-44: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (25.45: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.42-44: )
-> $$ = nterm unary_expression (25.42-44: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (25.42-44: )
-> $$ = nterm multiplicative_expression (25.42-44: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (25.45: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (25.42-44: )
-> $$ = nterm additive_expression (25.42-44: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (25.45: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (25.42-44: )
-> $$ = nterm relational_expression (25.42-44: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (25.45: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (25.42-44: )
-> $$ = nterm equality_expression (25.42-44: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (25.45: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (25.42-44: )
-> $$ = nterm logical_and_expression (25.42-44: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (25.45: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (25.42-44: )
-> $$ = nterm expression (25.42-44: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (25.45: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (25.24-39: )
   $2 = token ',' (25.40: )
   $3 = nterm expression (25.42-44: )
-> $$ = nterm expression_list (25.24-44: )
Stack now 100 71 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ')' (25.45: )
Shifting token ')' (25.45: )
Entering state 150
Reducing stack by rule 67 (line 1250):
   $1 = token IDENTIFIER (25.15-22: init_abc)
   $2 = token '(' (25.23: )
   $3 = nterm expression_list (25.24-44: )
   $4 = token ')' (25.45: )
-> $$ = nterm postfix_expression (25.15-45: )
Stack now 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (25.46: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.15-45: )
-> $$ = nterm unary_expression (25.15-45: )
Stack now 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (25.15-45: )
-> $$ = nterm multiplicative_expression (25.15-45: )
Stack now 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (25.46: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (25.15-45: )
-> $$ = nterm additive_expression (25.15-45: )
Stack now 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (25.46: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (25.15-45: )
-> $$ = nterm relational_expression (25.15-45: )
Stack now 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (25.46: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (25.15-45: )
-> $$ = nterm equality_expression (25.15-45: )
Stack now 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (25.46: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (25.15-45: )
-> $$ = nterm logical_and_expression (25.15-45: )
Stack now 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (25.46: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (25.15-45: )
-> $$ = nterm expression (25.15-45: )
Stack now 90 57 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (25.46: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (25.9-11: )
   $2 = token '=' (25.13: )
   $3 = nterm expression (25.15-45: )
-> $$ = nterm assignment_expression (25.9-45: )
Stack now 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (25.46: )
Shifting token ';' (25.46: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (25.9-45: )
   $2 = token ';' (25.46: )
-> $$ = nterm assignment_statement (25.9-46: )
Stack now 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (25.9-46: )
-> $$ = nterm statement (25.9-46: )
Stack now 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (25.9-46: )
-> $$ = nterm statement_list (25.9-46: )
Stack now 45 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (26.5: )
Shifting token '}' (26.5: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (24.30: )
   $2 = nterm statement_list (25.9-46: )
   $3 = token '}' (26.5: )
-> $$ = nterm statement (24.30-26.5: )
Stack now 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 153
Reading a token: Next token is token ELSE (27.5-8: )
Shifting token ELSE (27.5-8: )
Entering state 157
Reading a token: Next token is token '{' (27.10: )
Shifting token '{' (27.10: )
Entering state 45
Reading a token: Next token is token IF (28.9-10: )
Shifting token IF (28.9-10: )
Entering state 39
Reading a token: Next token is token '(' (28.12: )
Shifting token '(' (28.12: )
Entering state 81
Reading a token: Next token is token '*' (28.13: )
Shifting token '*' (28.13: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (28.13: )
-> $$ = nterm unary_operator (28.13: )
Stack now 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (28.14-15: p1)
Shifting token IDENTIFIER (28.14-15: p1)
Entering state 71
Reading a token: Next token is token NE_OP (28.17-18: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (28.14-15: p1)
-> $$ = nterm primary_expression (28.14-15: )
Stack now 60 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.14-15: )
-> $$ = nterm postfix_expression (28.14-15: )
Stack now 60 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token NE_OP (28.17-18: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.14-15: )
-> $$ = nterm unary_expression (28.14-15: )
Stack now 60 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (28.13: )
   $2 = nterm unary_expression (28.14-15: )
-> $$ = nterm unary_expression (28.13-15: )
Stack now 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.13-15: )
-> $$ = nterm multiplicative_expression (28.13-15: )
Stack now 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token NE_OP (28.17-18: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (28.13-15: )
-> $$ = nterm additive_expression (28.13-15: )
Stack now 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token NE_OP (28.17-18: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (28.13-15: )
-> $$ = nterm relational_expression (28.13-15: )
Stack now 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token NE_OP (28.17-18: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (28.13-15: )
-> $$ = nterm equality_expression (28.13-15: )
Stack now 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token NE_OP (28.17-18: )
Shifting token NE_OP (28.17-18: )
Entering state 105
Reading a token: Next token is token '*' (28.20: )
Shifting token '*' (28.20: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (28.20: )
-> $$ = nterm unary_operator (28.20: )
Stack now 105 74 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (28.21-22: p2)
Shifting token IDENTIFIER (28.21-22: p2)
Entering state 71
Reading a token: Next token is token ')' (28.23: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (28.21-22: p2)
-> $$ = nterm primary_expression (28.21-22: )
Stack now 60 105 74 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (28.21-22: )
-> $$ = nterm postfix_expression (28.21-22: )
Stack now 60 105 74 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (28.23: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (28.21-22: )
-> $$ = nterm unary_expression (28.21-22: )
Stack now 60 105 74 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (28.20: )
   $2 = nterm unary_expression (28.21-22: )
-> $$ = nterm unary_expression (28.20-22: )
Stack now 105 74 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (28.20-22: )
-> $$ = nterm multiplicative_expression (28.20-22: )
Stack now 105 74 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (28.23: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (28.20-22: )
-> $$ = nterm additive_expression (28.20-22: )
Stack now 105 74 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (28.23: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (28.20-22: )
-> $$ = nterm relational_expression (28.20-22: )
Stack now 105 74 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 134
Next token is token ')' (28.23: )
Reducing stack by rule 50 (line 739):
   $1 = nterm equality_expression (28.13-15: )
   $2 = token NE_OP (28.17-18: )
   $3 = nterm relational_expression (28.20-22: )
-> $$ = nterm equality_expression (28.13-22: )
Stack now 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (28.23: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (28.13-22: )
-> $$ = nterm logical_and_expression (28.13-22: )
Stack now 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (28.23: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (28.13-22: )
-> $$ = nterm expression (28.13-22: )
Stack now 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 116
Next token is token ')' (28.23: )
Shifting token ')' (28.23: )
Entering state 145
Reading a token: Next token is token '{' (28.25: )
Shifting token '{' (28.25: )
Entering state 45
Reading a token: Next token is token IDENTIFIER (29.13-15: ABC)
Shifting token IDENTIFIER (29.13-15: ABC)
Entering state 40
Reading a token: Next token is token '=' (29.17: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (29.13-15: ABC)
-> $$ = nterm primary_expression (29.13-15: )
Stack now 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (29.13-15: )
-> $$ = nterm postfix_expression (29.13-15: )
Stack now 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (29.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (29.13-15: )
-> $$ = nterm unary_expression (29.13-15: )
Stack now 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (29.17: )
Shifting token '=' (29.17: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (29.19-26: init_abc)
Shifting token IDENTIFIER (29.19-26: init_abc)
Entering state 71
Reading a token: Next token is token '(' (29.27: )
Shifting token '(' (29.27: )
Entering state 100
Reading a token: Next token is token IDENTIFIER (29.28-29: p2)
Shifting token IDENTIFIER (29.28-29: p2)
Entering state 71
Reading a token: Next token is token ',' (29.30: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (29.28-29: p2)
-> $$ = nterm primary_expression (29.28-29: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (29.28-29: )
-> $$ = nterm postfix_expression (29.28-29: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ',' (29.30: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (29.28-29: )
-> $$ = nterm unary_expression (29.28-29: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (29.28-29: )
-> $$ = nterm multiplicative_expression (29.28-29: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (29.30: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (29.28-29: )
-> $$ = nterm additive_expression (29.28-29: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (29.30: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (29.28-29: )
-> $$ = nterm relational_expression (29.28-29: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (29.30: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (29.28-29: )
-> $$ = nterm equality_expression (29.28-29: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (29.30: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (29.28-29: )
-> $$ = nterm logical_and_expression (29.28-29: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (29.30: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (29.28-29: )
-> $$ = nterm expression (29.28-29: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (29.30: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (29.28-29: )
-> $$ = nterm expression_list (29.28-29: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ',' (29.30: )
Shifting token ',' (29.30: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (29.32-33: p1)
Shifting token IDENTIFIER (29.32-33: p1)
Entering state 71
Reading a token: Next token is token ',' (29.34: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (29.32-33: p1)
-> $$ = nterm primary_expression (29.32-33: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (29.32-33: )
-> $$ = nterm postfix_expression (29.32-33: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ',' (29.34: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (29.32-33: )
-> $$ = nterm unary_expression (29.32-33: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (29.32-33: )
-> $$ = nterm multiplicative_expression (29.32-33: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (29.34: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (29.32-33: )
-> $$ = nterm additive_expression (29.32-33: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (29.34: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (29.32-33: )
-> $$ = nterm relational_expression (29.32-33: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (29.34: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (29.32-33: )
-> $$ = nterm equality_expression (29.32-33: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (29.34: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (29.32-33: )
-> $$ = nterm logical_and_expression (29.32-33: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (29.34: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (29.32-33: )
-> $$ = nterm expression (29.32-33: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (29.34: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (29.28-29: )
   $2 = token ',' (29.30: )
   $3 = nterm expression (29.32-33: )
-> $$ = nterm expression_list (29.28-33: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ',' (29.34: )
Shifting token ',' (29.34: )
Entering state 148
Reading a token: Next token is token FLOAT_CONSTANT (29.36-43: 12.80e-6)
Shifting token FLOAT_CONSTANT (29.36-43: 12.80e-6)
Entering state 42
Reducing stack by rule 73 (line 1377):
   $1 = token FLOAT_CONSTANT (29.36-43: 12.80e-6)
-> $$ = nterm primary_expression (29.36-43: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (29.36-43: )
-> $$ = nterm postfix_expression (29.36-43: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (29.44: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (29.36-43: )
-> $$ = nterm unary_expression (29.36-43: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (29.36-43: )
-> $$ = nterm multiplicative_expression (29.36-43: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (29.44: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (29.36-43: )
-> $$ = nterm additive_expression (29.36-43: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (29.44: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (29.36-43: )
-> $$ = nterm relational_expression (29.36-43: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (29.44: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (29.36-43: )
-> $$ = nterm equality_expression (29.36-43: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (29.44: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (29.36-43: )
-> $$ = nterm logical_and_expression (29.36-43: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (29.44: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (29.36-43: )
-> $$ = nterm expression (29.36-43: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ',' (29.44: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (29.28-33: )
   $2 = token ',' (29.34: )
   $3 = nterm expression (29.36-43: )
-> $$ = nterm expression_list (29.28-43: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ',' (29.44: )
Shifting token ',' (29.44: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (29.46-48: ABC)
Shifting token IDENTIFIER (29.46-48: ABC)
Entering state 71
Reading a token: Next token is token ')' (29.49: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (29.46-48: ABC)
-> $$ = nterm primary_expression (29.46-48: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (29.46-48: )
-> $$ = nterm postfix_expression (29.46-48: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ')' (29.49: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (29.46-48: )
-> $$ = nterm unary_expression (29.46-48: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (29.46-48: )
-> $$ = nterm multiplicative_expression (29.46-48: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (29.49: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (29.46-48: )
-> $$ = nterm additive_expression (29.46-48: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (29.49: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (29.46-48: )
-> $$ = nterm relational_expression (29.46-48: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (29.49: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (29.46-48: )
-> $$ = nterm equality_expression (29.46-48: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (29.49: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (29.46-48: )
-> $$ = nterm logical_and_expression (29.46-48: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (29.49: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (29.46-48: )
-> $$ = nterm expression (29.46-48: )
Stack now 148 130 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (29.49: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (29.28-43: )
   $2 = token ',' (29.44: )
   $3 = nterm expression (29.46-48: )
-> $$ = nterm expression_list (29.28-48: )
Stack now 100 71 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 130
Next token is token ')' (29.49: )
Shifting token ')' (29.49: )
Entering state 150
Reducing stack by rule 67 (line 1250):
   $1 = token IDENTIFIER (29.19-26: init_abc)
   $2 = token '(' (29.27: )
   $3 = nterm expression_list (29.28-48: )
   $4 = token ')' (29.49: )
-> $$ = nterm postfix_expression (29.19-49: )
Stack now 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (29.50: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (29.19-49: )
-> $$ = nterm unary_expression (29.19-49: )
Stack now 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (29.19-49: )
-> $$ = nterm multiplicative_expression (29.19-49: )
Stack now 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (29.50: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (29.19-49: )
-> $$ = nterm additive_expression (29.19-49: )
Stack now 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (29.50: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (29.19-49: )
-> $$ = nterm relational_expression (29.19-49: )
Stack now 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (29.50: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (29.19-49: )
-> $$ = nterm equality_expression (29.19-49: )
Stack now 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (29.50: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (29.19-49: )
-> $$ = nterm logical_and_expression (29.19-49: )
Stack now 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (29.50: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (29.19-49: )
-> $$ = nterm expression (29.19-49: )
Stack now 90 57 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (29.50: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (29.13-15: )
   $2 = token '=' (29.17: )
   $3 = nterm expression (29.19-49: )
-> $$ = nterm assignment_expression (29.13-49: )
Stack now 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (29.50: )
Shifting token ';' (29.50: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (29.13-49: )
   $2 = token ';' (29.50: )
-> $$ = nterm assignment_statement (29.13-50: )
Stack now 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (29.13-50: )
-> $$ = nterm statement (29.13-50: )
Stack now 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (29.13-50: )
-> $$ = nterm statement_list (29.13-50: )
Stack now 45 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (30.9: )
Shifting token '}' (30.9: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (28.25: )
   $2 = nterm statement_list (29.13-50: )
   $3 = token '}' (30.9: )
-> $$ = nterm statement (28.25-30.9: )
Stack now 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 153
Reading a token: Next token is token ELSE (31.9-12: )
Shifting token ELSE (31.9-12: )
Entering state 157
Reading a token: Next token is token '{' (31.14: )
Shifting token '{' (31.14: )
Entering state 45
Reading a token: Next token is token '*' (32.13: )
Shifting token '*' (32.13: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (32.13: )
-> $$ = nterm unary_operator (32.13: )
Stack now 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (32.14-15: p1)
Shifting token IDENTIFIER (32.14-15: p1)
Entering state 71
Reading a token: Next token is token '=' (32.17: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (32.14-15: p1)
-> $$ = nterm primary_expression (32.14-15: )
Stack now 60 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (32.14-15: )
-> $$ = nterm postfix_expression (32.14-15: )
Stack now 60 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (32.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (32.14-15: )
-> $$ = nterm unary_expression (32.14-15: )
Stack now 60 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (32.13: )
   $2 = nterm unary_expression (32.14-15: )
-> $$ = nterm unary_expression (32.13-15: )
Stack now 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (32.17: )
Shifting token '=' (32.17: )
Entering state 90
Reading a token: Next token is token '*' (32.19: )
Shifting token '*' (32.19: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (32.19: )
-> $$ = nterm unary_operator (32.19: )
Stack now 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (32.20-21: p1)
Shifting token IDENTIFIER (32.20-21: p1)
Entering state 71
Reading a token: Next token is token '+' (32.23: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (32.20-21: p1)
-> $$ = nterm primary_expression (32.20-21: )
Stack now 60 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (32.20-21: )
-> $$ = nterm postfix_expression (32.20-21: )
Stack now 60 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '+' (32.23: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (32.20-21: )
-> $$ = nterm unary_expression (32.20-21: )
Stack now 60 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (32.19: )
   $2 = nterm unary_expression (32.20-21: )
-> $$ = nterm unary_expression (32.19-21: )
Stack now 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (32.19-21: )
-> $$ = nterm multiplicative_expression (32.19-21: )
Stack now 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 77
Next token is token '+' (32.23: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (32.19-21: )
-> $$ = nterm additive_expression (32.19-21: )
Stack now 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token '+' (32.23: )
Shifting token '+' (32.23: )
Entering state 110
Reading a token: Next token is token '*' (32.25: )
Shifting token '*' (32.25: )
Entering state 50
Reducing stack by rule 81 (line 1413):
   $1 = token '*' (32.25: )
-> $$ = nterm unary_operator (32.25: )
Stack now 110 76 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 60
Reading a token: Next token is token IDENTIFIER (32.26-27: p2)
Shifting token IDENTIFIER (32.26-27: p2)
Entering state 71
Reading a token: Next token is token ';' (32.28: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (32.26-27: p2)
-> $$ = nterm primary_expression (32.26-27: )
Stack now 60 110 76 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (32.26-27: )
-> $$ = nterm postfix_expression (32.26-27: )
Stack now 60 110 76 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (32.28: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (32.26-27: )
-> $$ = nterm unary_expression (32.26-27: )
Stack now 60 110 76 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 95
Reducing stack by rule 60 (line 1063):
   $1 = nterm unary_operator (32.25: )
   $2 = nterm unary_expression (32.26-27: )
-> $$ = nterm unary_expression (32.25-27: )
Stack now 110 76 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (32.25-27: )
-> $$ = nterm multiplicative_expression (32.25-27: )
Stack now 110 76 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 139
Next token is token ';' (32.28: )
Reducing stack by rule 57 (line 954):
   $1 = nterm additive_expression (32.19-21: )
   $2 = token '+' (32.23: )
   $3 = nterm multiplicative_expression (32.25-27: )
-> $$ = nterm additive_expression (32.19-27: )
Stack now 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (32.28: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (32.19-27: )
-> $$ = nterm relational_expression (32.19-27: )
Stack now 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (32.28: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (32.19-27: )
-> $$ = nterm equality_expression (32.19-27: )
Stack now 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (32.28: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (32.19-27: )
-> $$ = nterm logical_and_expression (32.19-27: )
Stack now 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (32.28: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (32.19-27: )
-> $$ = nterm expression (32.19-27: )
Stack now 90 57 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (32.28: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (32.13-15: )
   $2 = token '=' (32.17: )
   $3 = nterm expression (32.19-27: )
-> $$ = nterm assignment_expression (32.13-27: )
Stack now 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (32.28: )
Shifting token ';' (32.28: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (32.13-27: )
   $2 = token ';' (32.28: )
-> $$ = nterm assignment_statement (32.13-28: )
Stack now 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (32.13-28: )
-> $$ = nterm statement (32.13-28: )
Stack now 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (32.13-28: )
-> $$ = nterm statement_list (32.13-28: )
Stack now 45 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (33.9: )
Shifting token '}' (33.9: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (31.14: )
   $2 = nterm statement_list (32.13-28: )
   $3 = token '}' (33.9: )
-> $$ = nterm statement (31.14-33.9: )
Stack now 157 153 145 116 81 39 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 159
Reducing stack by rule 82 (line 1419):
   $1 = token IF (28.9-10: )
   $2 = token '(' (28.12: )
   $3 = nterm expression (28.13-22: )
   $4 = token ')' (28.23: )
   $5 = nterm statement (28.25-30.9: )
   $6 = token ELSE (31.9-12: )
   $7 = nterm statement (31.14-33.9: )
-> $$ = nterm selection_statement (28.9-33.9: )
Stack now 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 62
Reducing stack by rule 35 (line 463):
   $1 = nterm selection_statement (28.9-33.9: )
-> $$ = nterm statement (28.9-33.9: )
Stack now 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (28.9-33.9: )
-> $$ = nterm statement_list (28.9-33.9: )
Stack now 45 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 84
Reading a token: Next token is token '}' (34.5: )
Shifting token '}' (34.5: )
Entering state 121
Reducing stack by rule 34 (line 460):
   $1 = token '{' (27.10: )
   $2 = nterm statement_list (28.9-33.9: )
   $3 = token '}' (34.5: )
-> $$ = nterm statement (27.10-34.5: )
Stack now 157 153 145 116 81 39 86 52 24 17 14 8 5 0
Entering state 159
Reducing stack by rule 82 (line 1419):
   $1 = token IF (24.5-6: )
   $2 = token '(' (24.8: )
   $3 = nterm expression (24.9-26: )
   $4 = token ')' (24.28: )
   $5 = nterm statement (24.30-26.5: )
   $6 = token ELSE (27.5-8: )
   $7 = nterm statement (27.10-34.5: )
-> $$ = nterm selection_statement (24.5-34.5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 62
Reducing stack by rule 35 (line 463):
   $1 = nterm selection_statement (24.5-34.5: )
-> $$ = nterm statement (24.5-34.5: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (21.5-22.21: )
   $2 = nterm statement (24.5-34.5: )
-> $$ = nterm statement_list (21.5-34.5: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token RETURN (36.5-10: )
Shifting token RETURN (36.5-10: )
Entering state 36
Reading a token: Next token is token INT_CONSTANT (36.12: 0)
Shifting token INT_CONSTANT (36.12: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (36.12: 0)
-> $$ = nterm primary_expression (36.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (36.12: )
-> $$ = nterm postfix_expression (36.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (36.13: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (36.12: )
-> $$ = nterm unary_expression (36.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (36.12: )
-> $$ = nterm multiplicative_expression (36.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (36.13: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (36.12: )
-> $$ = nterm additive_expression (36.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (36.13: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (36.12: )
-> $$ = nterm relational_expression (36.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (36.13: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (36.12: )
-> $$ = nterm equality_expression (36.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (36.13: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (36.12: )
-> $$ = nterm logical_and_expression (36.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (36.13: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (36.12: )
-> $$ = nterm expression (36.12: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 72
Next token is token ';' (36.13: )
Shifting token ';' (36.13: )
Entering state 102
Reducing stack by rule 39 (line 477):
   $1 = token RETURN (36.5-10: )
   $2 = nterm expression (36.12: )
   $3 = token ';' (36.13: )
-> $$ = nterm statement (36.5-13: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (21.5-34.5: )
   $2 = nterm statement (36.5-13: )
-> $$ = nterm statement_list (21.5-36.13: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (38.1: )
Shifting token '}' (38.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (18.21: )
   $2 = nterm declaration_list (19.5-20.17: )
   $3 = nterm statement_list (21.5-36.13: )
   $4 = token '}' (38.1: )
-> $$ = nterm compound_statement (18.21-38.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (18.1-3: )
   $2 = nterm fun_declarator (18.5-19: )
   $3 = nterm $@2 (18.20: )
   $4 = nterm compound_statement (18.21-38.1: )
-> $$ = nterm function_definition (18.1-38.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (2.1-16.1: )
   $2 = nterm function_definition (18.1-38.1: )
-> $$ = nterm translation_unit (2.1-38.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token $end (38.2-39.0: )
Shifting token $end (38.2-39.0: )
Entering state 10
Cleanup: popping token $end (38.2-39.0: )
Cleanup: popping nterm translation_unit (2.1-38.1: )
