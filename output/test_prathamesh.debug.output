Starting parse
Entering state 0
Reading a token: Next token is token INT (2.1-3: )
Shifting token INT (2.1-3: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (2.1-3: )
-> $$ = nterm type_specifier (2.1-3: )
Stack now 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (2.5-8: main)
Shifting token IDENTIFIER (2.5-8: main)
Entering state 13
Reading a token: Next token is token '(' (2.9: )
Shifting token '(' (2.9: )
Entering state 16
Reading a token: Next token is token ')' (2.10: )
Shifting token ')' (2.10: )
Entering state 20
Reducing stack by rule 14 (line 242):
   $1 = token IDENTIFIER (2.5-8: main)
   $2 = token '(' (2.9: )
   $3 = token ')' (2.10: )
-> $$ = nterm fun_declarator (2.5-10: )
Stack now 8 0
Entering state 14
Reducing stack by rule 7 (line 157):
-> $$ = nterm $@2 (2.11: )
Stack now 14 8 0
Entering state 17
Reading a token: Next token is token '{' (3.1: )
Shifting token '{' (3.1: )
Entering state 24
Reading a token: Next token is token INT (4.5-7: )
Shifting token INT (4.5-7: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (4.5-7: )
-> $$ = nterm type_specifier (4.5-7: )
Stack now 24 17 14 8 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (4.9: x)
Shifting token IDENTIFIER (4.9: x)
Entering state 30
Reducing stack by rule 18 (line 273):
   $1 = token IDENTIFIER (4.9: x)
-> $$ = nterm declarator_arr (4.9: )
Stack now 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token '[' (4.10: )
Shifting token '[' (4.10: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (4.11-12: 20)
Shifting token INT_CONSTANT (4.11-12: 20)
Entering state 99
Reading a token: Next token is token ']' (4.13: )
Shifting token ']' (4.13: )
Entering state 128
Reducing stack by rule 19 (line 276):
   $1 = nterm declarator_arr (4.9: )
   $2 = token '[' (4.10: )
   $3 = token INT_CONSTANT (4.11-12: 20)
   $4 = token ']' (4.13: )
-> $$ = nterm declarator_arr (4.9-13: )
Stack now 26 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (4.14: )
Reducing stack by rule 20 (line 292):
   $1 = nterm declarator_arr (4.9-13: )
-> $$ = nterm declarator (4.9-13: )
Stack now 26 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 407):
   $1 = nterm declarator (4.9-13: )
-> $$ = nterm declarator_list (4.9-13: )
Stack now 26 24 17 14 8 0
Entering state 65
Next token is token ';' (4.14: )
Shifting token ';' (4.14: )
Entering state 97
Reducing stack by rule 24 (line 401):
   $1 = nterm type_specifier (4.5-7: )
   $2 = nterm declarator_list (4.9-13: )
   $3 = token ';' (4.14: )
-> $$ = nterm declaration (4.5-14: )
Stack now 24 17 14 8 0
Entering state 27
Reducing stack by rule 22 (line 302):
   $1 = nterm declaration (4.5-14: )
-> $$ = nterm declaration_list (4.5-14: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token INT (5.5-7: )
Shifting token INT (5.5-7: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (5.5-7: )
-> $$ = nterm type_specifier (5.5-7: )
Stack now 52 24 17 14 8 0
Entering state 26
Reading a token: Next token is token '*' (5.9: )
Shifting token '*' (5.9: )
Entering state 31
Reading a token: Next token is token IDENTIFIER (5.10: y)
Shifting token IDENTIFIER (5.10: y)
Entering state 30
Reducing stack by rule 18 (line 273):
   $1 = token IDENTIFIER (5.10: y)
-> $$ = nterm declarator_arr (5.10: )
Stack now 31 26 52 24 17 14 8 0
Entering state 32
Reading a token: Next token is token ';' (5.11: )
Reducing stack by rule 20 (line 292):
   $1 = nterm declarator_arr (5.10: )
-> $$ = nterm declarator (5.10: )
Stack now 31 26 52 24 17 14 8 0
Entering state 68
Reducing stack by rule 21 (line 295):
   $1 = token '*' (5.9: )
   $2 = nterm declarator (5.10: )
-> $$ = nterm declarator (5.9-10: )
Stack now 26 52 24 17 14 8 0
Entering state 64
Reducing stack by rule 25 (line 407):
   $1 = nterm declarator (5.9-10: )
-> $$ = nterm declarator_list (5.9-10: )
Stack now 26 52 24 17 14 8 0
Entering state 65
Next token is token ';' (5.11: )
Shifting token ';' (5.11: )
Entering state 97
Reducing stack by rule 24 (line 401):
   $1 = nterm type_specifier (5.5-7: )
   $2 = nterm declarator_list (5.9-10: )
   $3 = token ';' (5.11: )
-> $$ = nterm declaration (5.5-11: )
Stack now 52 24 17 14 8 0
Entering state 67
Reducing stack by rule 23 (line 351):
   $1 = nterm declaration_list (4.5-14: )
   $2 = nterm declaration (5.5-11: )
-> $$ = nterm declaration_list (4.5-5.11: )
Stack now 24 17 14 8 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (6.5: y)
Shifting token IDENTIFIER (6.5: y)
Entering state 40
Reading a token: Next token is token '=' (6.7: )
Reducing stack by rule 71 (line 1309):
   $1 = token IDENTIFIER (6.5: y)
-> $$ = nterm primary_expression (6.5: )
Stack now 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1152):
   $1 = nterm primary_expression (6.5: )
-> $$ = nterm postfix_expression (6.5: )
Stack now 52 24 17 14 8 0
Entering state 58
Next token is token '=' (6.7: )
Reducing stack by rule 59 (line 1027):
   $1 = nterm postfix_expression (6.5: )
-> $$ = nterm unary_expression (6.5: )
Stack now 52 24 17 14 8 0
Entering state 57
Next token is token '=' (6.7: )
Shifting token '=' (6.7: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (6.9: x)
Shifting token IDENTIFIER (6.9: x)
Entering state 71
Reading a token: Next token is token '+' (6.11: )
Reducing stack by rule 71 (line 1309):
   $1 = token IDENTIFIER (6.9: x)
-> $$ = nterm primary_expression (6.9: )
Stack now 90 57 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1152):
   $1 = nterm primary_expression (6.9: )
-> $$ = nterm postfix_expression (6.9: )
Stack now 90 57 52 24 17 14 8 0
Entering state 58
Next token is token '+' (6.11: )
Reducing stack by rule 59 (line 1027):
   $1 = nterm postfix_expression (6.9: )
-> $$ = nterm unary_expression (6.9: )
Stack now 90 57 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1082):
   $1 = nterm unary_expression (6.9: )
-> $$ = nterm multiplicative_expression (6.9: )
Stack now 90 57 52 24 17 14 8 0
Entering state 77
Next token is token '+' (6.11: )
Reducing stack by rule 56 (line 918):
   $1 = nterm multiplicative_expression (6.9: )
-> $$ = nterm additive_expression (6.9: )
Stack now 90 57 52 24 17 14 8 0
Entering state 76
Next token is token '+' (6.11: )
Shifting token '+' (6.11: )
Entering state 110
Reading a token: Next token is token INT_CONSTANT (6.13: 1)
Shifting token INT_CONSTANT (6.13: 1)
Entering state 41
Reducing stack by rule 72 (line 1320):
   $1 = token INT_CONSTANT (6.13: 1)
-> $$ = nterm primary_expression (6.13: )
Stack now 110 76 90 57 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1152):
   $1 = nterm primary_expression (6.13: )
-> $$ = nterm postfix_expression (6.13: )
Stack now 110 76 90 57 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (6.14: )
Reducing stack by rule 59 (line 1027):
   $1 = nterm postfix_expression (6.13: )
-> $$ = nterm unary_expression (6.13: )
Stack now 110 76 90 57 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1082):
   $1 = nterm unary_expression (6.13: )
-> $$ = nterm multiplicative_expression (6.13: )
Stack now 110 76 90 57 52 24 17 14 8 0
Entering state 139
Next token is token ';' (6.14: )
Reducing stack by rule 57 (line 921):
   $1 = nterm additive_expression (6.9: )
   $2 = token '+' (6.11: )
   $3 = nterm multiplicative_expression (6.13: )
-> $$ = nterm additive_expression (6.9-13: )
Stack now 90 57 52 24 17 14 8 0
Entering state 76
Next token is token ';' (6.14: )
Reducing stack by rule 51 (line 745):
   $1 = nterm additive_expression (6.9-13: )
-> $$ = nterm relational_expression (6.9-13: )
Stack now 90 57 52 24 17 14 8 0
Entering state 75
Next token is token ';' (6.14: )
Reducing stack by rule 48 (line 667):
   $1 = nterm relational_expression (6.9-13: )
-> $$ = nterm equality_expression (6.9-13: )
Stack now 90 57 52 24 17 14 8 0
Entering state 74
Next token is token ';' (6.14: )
Reducing stack by rule 46 (line 646):
   $1 = nterm equality_expression (6.9-13: )
-> $$ = nterm logical_and_expression (6.9-13: )
Stack now 90 57 52 24 17 14 8 0
Entering state 73
Next token is token ';' (6.14: )
Reducing stack by rule 44 (line 623):
   $1 = nterm logical_and_expression (6.9-13: )
-> $$ = nterm expression (6.9-13: )
Stack now 90 57 52 24 17 14 8 0
Entering state 123
Next token is token ';' (6.14: )
Reducing stack by rule 40 (line 499):
   $1 = nterm unary_expression (6.5: )
   $2 = token '=' (6.7: )
   $3 = nterm expression (6.9-13: )
-> $$ = nterm assignment_expression (6.5-13: )
Stack now 52 24 17 14 8 0
Entering state 56
Next token is token ';' (6.14: )
Shifting token ';' (6.14: )
Entering state 89
Reducing stack by rule 41 (line 544):
   $1 = nterm assignment_expression (6.5-13: )
   $2 = token ';' (6.14: )
-> $$ = nterm assignment_statement (6.5-14: )
Stack now 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 462):
   $1 = nterm assignment_statement (6.5-14: )
-> $$ = nterm statement (6.5-14: )
Stack now 52 24 17 14 8 0
Entering state 53
Reducing stack by rule 31 (line 437):
   $1 = nterm statement (6.5-14: )
-> $$ = nterm statement_list (6.5-14: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (7.5: y)
Shifting token IDENTIFIER (7.5: y)
Entering state 40
Reading a token: Next token is token '=' (7.7: )
Reducing stack by rule 71 (line 1309):
   $1 = token IDENTIFIER (7.5: y)
-> $$ = nterm primary_expression (7.5: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1152):
   $1 = nterm primary_expression (7.5: )
-> $$ = nterm postfix_expression (7.5: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (7.7: )
Reducing stack by rule 59 (line 1027):
   $1 = nterm postfix_expression (7.5: )
-> $$ = nterm unary_expression (7.5: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (7.7: )
Shifting token '=' (7.7: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (7.9: y)
Shifting token IDENTIFIER (7.9: y)
Entering state 71
Reading a token: Next token is token INC_OP (7.10-11: )
Reducing stack by rule 71 (line 1309):
   $1 = token IDENTIFIER (7.9: y)
-> $$ = nterm primary_expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1152):
   $1 = nterm primary_expression (7.9: )
-> $$ = nterm postfix_expression (7.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 58
Next token is token INC_OP (7.10-11: )
Shifting token INC_OP (7.10-11: )
Entering state 94
Reducing stack by rule 70 (line 1288):
   $1 = nterm postfix_expression (7.9: )
   $2 = token INC_OP (7.10-11: )
-> $$ = nterm postfix_expression (7.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (7.12: )
Reducing stack by rule 59 (line 1027):
   $1 = nterm postfix_expression (7.9-11: )
-> $$ = nterm unary_expression (7.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1082):
   $1 = nterm unary_expression (7.9-11: )
-> $$ = nterm multiplicative_expression (7.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (7.12: )
Reducing stack by rule 56 (line 918):
   $1 = nterm multiplicative_expression (7.9-11: )
-> $$ = nterm additive_expression (7.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (7.12: )
Reducing stack by rule 51 (line 745):
   $1 = nterm additive_expression (7.9-11: )
-> $$ = nterm relational_expression (7.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (7.12: )
Reducing stack by rule 48 (line 667):
   $1 = nterm relational_expression (7.9-11: )
-> $$ = nterm equality_expression (7.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (7.12: )
Reducing stack by rule 46 (line 646):
   $1 = nterm equality_expression (7.9-11: )
-> $$ = nterm logical_and_expression (7.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (7.12: )
Reducing stack by rule 44 (line 623):
   $1 = nterm logical_and_expression (7.9-11: )
-> $$ = nterm expression (7.9-11: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (7.12: )
Reducing stack by rule 40 (line 499):
   $1 = nterm unary_expression (7.5: )
   $2 = token '=' (7.7: )
   $3 = nterm expression (7.9-11: )
-> $$ = nterm assignment_expression (7.5-11: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (7.12: )
Shifting token ';' (7.12: )
Entering state 89
Reducing stack by rule 41 (line 544):
   $1 = nterm assignment_expression (7.5-11: )
   $2 = token ';' (7.12: )
-> $$ = nterm assignment_statement (7.5-12: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 462):
   $1 = nterm assignment_statement (7.5-12: )
-> $$ = nterm statement (7.5-12: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 442):
   $1 = nterm statement_list (6.5-14: )
   $2 = nterm statement (7.5-12: )
-> $$ = nterm statement_list (6.5-7.12: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (8.5: y)
Shifting token IDENTIFIER (8.5: y)
Entering state 40
Reading a token: Next token is token '=' (8.7: )
Reducing stack by rule 71 (line 1309):
   $1 = token IDENTIFIER (8.5: y)
-> $$ = nterm primary_expression (8.5: )
Stack now 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1152):
   $1 = nterm primary_expression (8.5: )
-> $$ = nterm postfix_expression (8.5: )
Stack now 86 52 24 17 14 8 0
Entering state 58
Next token is token '=' (8.7: )
Reducing stack by rule 59 (line 1027):
   $1 = nterm postfix_expression (8.5: )
-> $$ = nterm unary_expression (8.5: )
Stack now 86 52 24 17 14 8 0
Entering state 57
Next token is token '=' (8.7: )
Shifting token '=' (8.7: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (8.9: 0)
Shifting token INT_CONSTANT (8.9: 0)
Entering state 41
Reducing stack by rule 72 (line 1320):
   $1 = token INT_CONSTANT (8.9: 0)
-> $$ = nterm primary_expression (8.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 59
Reducing stack by rule 64 (line 1152):
   $1 = nterm primary_expression (8.9: )
-> $$ = nterm postfix_expression (8.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 58
Reading a token: Next token is token ';' (8.10: )
Reducing stack by rule 59 (line 1027):
   $1 = nterm postfix_expression (8.9: )
-> $$ = nterm unary_expression (8.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 78
Reducing stack by rule 61 (line 1082):
   $1 = nterm unary_expression (8.9: )
-> $$ = nterm multiplicative_expression (8.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 77
Next token is token ';' (8.10: )
Reducing stack by rule 56 (line 918):
   $1 = nterm multiplicative_expression (8.9: )
-> $$ = nterm additive_expression (8.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 76
Next token is token ';' (8.10: )
Reducing stack by rule 51 (line 745):
   $1 = nterm additive_expression (8.9: )
-> $$ = nterm relational_expression (8.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 75
Next token is token ';' (8.10: )
Reducing stack by rule 48 (line 667):
   $1 = nterm relational_expression (8.9: )
-> $$ = nterm equality_expression (8.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 74
Next token is token ';' (8.10: )
Reducing stack by rule 46 (line 646):
   $1 = nterm equality_expression (8.9: )
-> $$ = nterm logical_and_expression (8.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 73
Next token is token ';' (8.10: )
Reducing stack by rule 44 (line 623):
   $1 = nterm logical_and_expression (8.9: )
-> $$ = nterm expression (8.9: )
Stack now 90 57 86 52 24 17 14 8 0
Entering state 123
Next token is token ';' (8.10: )
Reducing stack by rule 40 (line 499):
   $1 = nterm unary_expression (8.5: )
   $2 = token '=' (8.7: )
   $3 = nterm expression (8.9: )
-> $$ = nterm assignment_expression (8.5-9: )
Stack now 86 52 24 17 14 8 0
Entering state 56
Next token is token ';' (8.10: )
Shifting token ';' (8.10: )
Entering state 89
Reducing stack by rule 41 (line 544):
   $1 = nterm assignment_expression (8.5-9: )
   $2 = token ';' (8.10: )
-> $$ = nterm assignment_statement (8.5-10: )
Stack now 86 52 24 17 14 8 0
Entering state 54
Reducing stack by rule 37 (line 462):
   $1 = nterm assignment_statement (8.5-10: )
-> $$ = nterm statement (8.5-10: )
Stack now 86 52 24 17 14 8 0
Entering state 88
Reducing stack by rule 32 (line 442):
   $1 = nterm statement_list (6.5-7.12: )
   $2 = nterm statement (8.5-10: )
-> $$ = nterm statement_list (6.5-8.10: )
Stack now 52 24 17 14 8 0
Entering state 86
Reading a token: Next token is token '}' (9.1: )
Shifting token '}' (9.1: )
Entering state 122
Reducing stack by rule 30 (line 429):
   $1 = token '{' (3.1: )
   $2 = nterm declaration_list (4.5-5.11: )
   $3 = nterm statement_list (6.5-8.10: )
   $4 = token '}' (9.1: )
-> $$ = nterm compound_statement (3.1-9.1: )
Stack now 17 14 8 0
Entering state 25
Reducing stack by rule 8 (line 156):
   $1 = nterm type_specifier (2.1-3: )
   $2 = nterm fun_declarator (2.5-10: )
   $3 = nterm $@2 (2.11: )
   $4 = nterm compound_statement (3.1-9.1: )
-> $$ = nterm function_definition (2.1-9.1: )
Stack now 0
Entering state 7
Reducing stack by rule 2 (line 125):
   $1 = nterm function_definition (2.1-9.1: )
-> $$ = nterm translation_unit (2.1-9.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (10.1-3: )
Shifting token INT (10.1-3: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (10.1-3: )
-> $$ = nterm type_specifier (10.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (10.5: f)
Shifting token IDENTIFIER (10.5: f)
Entering state 13
Reading a token: Next token is token '(' (10.6: )
Shifting token '(' (10.6: )
Entering state 16
Reading a token: Next token is token ')' (10.7: )
Shifting token ')' (10.7: )
Entering state 20
Reducing stack by rule 14 (line 242):
   $1 = token IDENTIFIER (10.5: f)
   $2 = token '(' (10.6: )
   $3 = token ')' (10.7: )
-> $$ = nterm fun_declarator (10.5-7: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 157):
-> $$ = nterm $@2 (10.8: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (11.1: )
Shifting token '{' (11.1: )
Entering state 24
Reading a token: Next token is token INT (12.5-7: )
Shifting token INT (12.5-7: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (12.5-7: )
-> $$ = nterm type_specifier (12.5-7: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (12.9: a)
Shifting token IDENTIFIER (12.9: a)
Entering state 30
Reducing stack by rule 18 (line 273):
   $1 = token IDENTIFIER (12.9: a)
-> $$ = nterm declarator_arr (12.9: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (12.10: )
Reducing stack by rule 20 (line 292):
   $1 = nterm declarator_arr (12.9: )
-> $$ = nterm declarator (12.9: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 407):
   $1 = nterm declarator (12.9: )
-> $$ = nterm declarator_list (12.9: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (12.10: )
Shifting token ';' (12.10: )
Entering state 97
Reducing stack by rule 24 (line 401):
   $1 = nterm type_specifier (12.5-7: )
   $2 = nterm declarator_list (12.9: )
   $3 = token ';' (12.10: )
-> $$ = nterm declaration (12.5-10: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 302):
   $1 = nterm declaration (12.5-10: )
-> $$ = nterm declaration_list (12.5-10: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (13.5-7: )
Shifting token INT (13.5-7: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (13.5-7: )
-> $$ = nterm type_specifier (13.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (13.9: b)
Shifting token IDENTIFIER (13.9: b)
Entering state 30
Reducing stack by rule 18 (line 273):
   $1 = token IDENTIFIER (13.9: b)
-> $$ = nterm declarator_arr (13.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (13.10: )
Shifting token '[' (13.10: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (13.11: 2)
Shifting token INT_CONSTANT (13.11: 2)
Entering state 99
Reading a token: Next token is token ']' (13.12: )
Shifting token ']' (13.12: )
Entering state 128
Reducing stack by rule 19 (line 276):
   $1 = nterm declarator_arr (13.9: )
   $2 = token '[' (13.10: )
   $3 = token INT_CONSTANT (13.11: 2)
   $4 = token ']' (13.12: )
-> $$ = nterm declarator_arr (13.9-12: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (13.13: )
Shifting token '[' (13.13: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (13.14: 4)
Shifting token INT_CONSTANT (13.14: 4)
Entering state 99
Reading a token: Next token is token ']' (13.15: )
Shifting token ']' (13.15: )
Entering state 128
Reducing stack by rule 19 (line 276):
   $1 = nterm declarator_arr (13.9-12: )
   $2 = token '[' (13.13: )
   $3 = token INT_CONSTANT (13.14: 4)
   $4 = token ']' (13.15: )
-> $$ = nterm declarator_arr (13.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (13.16: )
Reducing stack by rule 20 (line 292):
   $1 = nterm declarator_arr (13.9-15: )
-> $$ = nterm declarator (13.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 407):
   $1 = nterm declarator (13.9-15: )
-> $$ = nterm declarator_list (13.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (13.16: )
Shifting token ';' (13.16: )
Entering state 97
Reducing stack by rule 24 (line 401):
   $1 = nterm type_specifier (13.5-7: )
   $2 = nterm declarator_list (13.9-15: )
   $3 = token ';' (13.16: )
-> $$ = nterm declaration (13.5-16: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 351):
   $1 = nterm declaration_list (12.5-10: )
   $2 = nterm declaration (13.5-16: )
-> $$ = nterm declaration_list (12.5-13.16: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (14.5-7: )
Shifting token INT (14.5-7: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (14.5-7: )
-> $$ = nterm type_specifier (14.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (14.9: c)
Shifting token IDENTIFIER (14.9: c)
Entering state 30
Reducing stack by rule 18 (line 273):
   $1 = token IDENTIFIER (14.9: c)
-> $$ = nterm declarator_arr (14.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (14.10: )
Shifting token '[' (14.10: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (14.11: 3)
Shifting token INT_CONSTANT (14.11: 3)
Entering state 99
Reading a token: Next token is token ']' (14.12: )
Shifting token ']' (14.12: )
Entering state 128
Reducing stack by rule 19 (line 276):
   $1 = nterm declarator_arr (14.9: )
   $2 = token '[' (14.10: )
   $3 = token INT_CONSTANT (14.11: 3)
   $4 = token ']' (14.12: )
-> $$ = nterm declarator_arr (14.9-12: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (14.13: )
Shifting token '[' (14.13: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (14.14: 4)
Shifting token INT_CONSTANT (14.14: 4)
Entering state 99
Reading a token: Next token is token ']' (14.15: )
Shifting token ']' (14.15: )
Entering state 128
Reducing stack by rule 19 (line 276):
   $1 = nterm declarator_arr (14.9-12: )
   $2 = token '[' (14.13: )
   $3 = token INT_CONSTANT (14.14: 4)
   $4 = token ']' (14.15: )
-> $$ = nterm declarator_arr (14.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (14.16: )
Reducing stack by rule 20 (line 292):
   $1 = nterm declarator_arr (14.9-15: )
-> $$ = nterm declarator (14.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 407):
   $1 = nterm declarator (14.9-15: )
-> $$ = nterm declarator_list (14.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (14.16: )
Shifting token ';' (14.16: )
Entering state 97
Reducing stack by rule 24 (line 401):
   $1 = nterm type_specifier (14.5-7: )
   $2 = nterm declarator_list (14.9-15: )
   $3 = token ';' (14.16: )
-> $$ = nterm declaration (14.5-16: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 351):
   $1 = nterm declaration_list (12.5-13.16: )
   $2 = nterm declaration (14.5-16: )
-> $$ = nterm declaration_list (12.5-14.16: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (15.5: a)
Shifting token IDENTIFIER (15.5: a)
Entering state 40
Reading a token: Next token is token '=' (15.7: )
Reducing stack by rule 71 (line 1309):
   $1 = token IDENTIFIER (15.5: a)
-> $$ = nterm primary_expression (15.5: )
Stack now 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1152):
   $1 = nterm primary_expression (15.5: )
-> $$ = nterm postfix_expression (15.5: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (15.7: )
Reducing stack by rule 59 (line 1027):
   $1 = nterm postfix_expression (15.5: )
-> $$ = nterm unary_expression (15.5: )
Stack now 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (15.7: )
Shifting token '=' (15.7: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (15.9: b)
Shifting token IDENTIFIER (15.9: b)
Entering state 71
Reading a token: Next token is token '-' (15.11: )
Reducing stack by rule 71 (line 1309):
   $1 = token IDENTIFIER (15.9: b)
-> $$ = nterm primary_expression (15.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1152):
   $1 = nterm primary_expression (15.9: )
-> $$ = nterm postfix_expression (15.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 58
Next token is token '-' (15.11: )
Reducing stack by rule 59 (line 1027):
   $1 = nterm postfix_expression (15.9: )
-> $$ = nterm unary_expression (15.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1082):
   $1 = nterm unary_expression (15.9: )
-> $$ = nterm multiplicative_expression (15.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 77
Next token is token '-' (15.11: )
Reducing stack by rule 56 (line 918):
   $1 = nterm multiplicative_expression (15.9: )
-> $$ = nterm additive_expression (15.9: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token '-' (15.11: )
Shifting token '-' (15.11: )
Entering state 111
Reading a token: Next token is token IDENTIFIER (15.13: c)
Shifting token IDENTIFIER (15.13: c)
Entering state 71
Reading a token: Next token is token ';' (15.14: )
Reducing stack by rule 71 (line 1309):
   $1 = token IDENTIFIER (15.13: c)
-> $$ = nterm primary_expression (15.13: )
Stack now 111 76 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1152):
   $1 = nterm primary_expression (15.13: )
-> $$ = nterm postfix_expression (15.13: )
Stack now 111 76 90 57 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (15.14: )
Reducing stack by rule 59 (line 1027):
   $1 = nterm postfix_expression (15.13: )
-> $$ = nterm unary_expression (15.13: )
Stack now 111 76 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1082):
   $1 = nterm unary_expression (15.13: )
-> $$ = nterm multiplicative_expression (15.13: )
Stack now 111 76 90 57 52 24 17 14 8 5 0
Entering state 140
Next token is token ';' (15.14: )
Reducing stack by rule 58 (line 975):
   $1 = nterm additive_expression (15.9: )
   $2 = token '-' (15.11: )
   $3 = nterm multiplicative_expression (15.13: )
-> $$ = nterm additive_expression (15.9-13: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (15.14: )
Reducing stack by rule 51 (line 745):
   $1 = nterm additive_expression (15.9-13: )
-> $$ = nterm relational_expression (15.9-13: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (15.14: )
Reducing stack by rule 48 (line 667):
   $1 = nterm relational_expression (15.9-13: )
-> $$ = nterm equality_expression (15.9-13: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (15.14: )
Reducing stack by rule 46 (line 646):
   $1 = nterm equality_expression (15.9-13: )
-> $$ = nterm logical_and_expression (15.9-13: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (15.14: )
Reducing stack by rule 44 (line 623):
   $1 = nterm logical_and_expression (15.9-13: )
-> $$ = nterm expression (15.9-13: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (15.14: )
Reducing stack by rule 40 (line 499):
   $1 = nterm unary_expression (15.5: )
   $2 = token '=' (15.7: )
   $3 = nterm expression (15.9-13: )
-> $$ = nterm assignment_expression (15.5-13: )
Stack now 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (15.14: )
Shifting token ';' (15.14: )
Entering state 89
Reducing stack by rule 41 (line 544):
   $1 = nterm assignment_expression (15.5-13: )
   $2 = token ';' (15.14: )
-> $$ = nterm assignment_statement (15.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 462):
   $1 = nterm assignment_statement (15.5-14: )
-> $$ = nterm statement (15.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 437):
   $1 = nterm statement (15.5-14: )
-> $$ = nterm statement_list (15.5-14: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (16.1: )
Shifting token '}' (16.1: )
Entering state 122
Reducing stack by rule 30 (line 429):
   $1 = token '{' (11.1: )
   $2 = nterm declaration_list (12.5-14.16: )
   $3 = nterm statement_list (15.5-14: )
   $4 = token '}' (16.1: )
-> $$ = nterm compound_statement (11.1-16.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 156):
   $1 = nterm type_specifier (10.1-3: )
   $2 = nterm fun_declarator (10.5-7: )
   $3 = nterm $@2 (10.8: )
   $4 = nterm compound_statement (11.1-16.1: )
-> $$ = nterm function_definition (10.1-16.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 129):
   $1 = nterm translation_unit (2.1-9.1: )
   $2 = nterm function_definition (10.1-16.1: )
-> $$ = nterm translation_unit (2.1-16.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (18.1-3: )
Shifting token INT (18.1-3: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (18.1-3: )
-> $$ = nterm type_specifier (18.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (18.5: g)
Shifting token IDENTIFIER (18.5: g)
Entering state 13
Reading a token: Next token is token '(' (18.6: )
Shifting token '(' (18.6: )
Entering state 16
Reading a token: Next token is token ')' (18.7: )
Shifting token ')' (18.7: )
Entering state 20
Reducing stack by rule 14 (line 242):
   $1 = token IDENTIFIER (18.5: g)
   $2 = token '(' (18.6: )
   $3 = token ')' (18.7: )
-> $$ = nterm fun_declarator (18.5-7: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 157):
-> $$ = nterm $@2 (18.8: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (19.1: )
Shifting token '{' (19.1: )
Entering state 24
Reading a token: Next token is token INT (20.5-7: )
Shifting token INT (20.5-7: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (20.5-7: )
-> $$ = nterm type_specifier (20.5-7: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (20.9: a)
Shifting token IDENTIFIER (20.9: a)
Entering state 30
Reducing stack by rule 18 (line 273):
   $1 = token IDENTIFIER (20.9: a)
-> $$ = nterm declarator_arr (20.9: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (20.10: )
Reducing stack by rule 20 (line 292):
   $1 = nterm declarator_arr (20.9: )
-> $$ = nterm declarator (20.9: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 407):
   $1 = nterm declarator (20.9: )
-> $$ = nterm declarator_list (20.9: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (20.10: )
Shifting token ';' (20.10: )
Entering state 97
Reducing stack by rule 24 (line 401):
   $1 = nterm type_specifier (20.5-7: )
   $2 = nterm declarator_list (20.9: )
   $3 = token ';' (20.10: )
-> $$ = nterm declaration (20.5-10: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 302):
   $1 = nterm declaration (20.5-10: )
-> $$ = nterm declaration_list (20.5-10: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (21.5-7: )
Shifting token INT (21.5-7: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (21.5-7: )
-> $$ = nterm type_specifier (21.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (21.9: b)
Shifting token IDENTIFIER (21.9: b)
Entering state 30
Reducing stack by rule 18 (line 273):
   $1 = token IDENTIFIER (21.9: b)
-> $$ = nterm declarator_arr (21.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (21.10: )
Shifting token '[' (21.10: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (21.11: 2)
Shifting token INT_CONSTANT (21.11: 2)
Entering state 99
Reading a token: Next token is token ']' (21.12: )
Shifting token ']' (21.12: )
Entering state 128
Reducing stack by rule 19 (line 276):
   $1 = nterm declarator_arr (21.9: )
   $2 = token '[' (21.10: )
   $3 = token INT_CONSTANT (21.11: 2)
   $4 = token ']' (21.12: )
-> $$ = nterm declarator_arr (21.9-12: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (21.13: )
Shifting token '[' (21.13: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (21.14: 4)
Shifting token INT_CONSTANT (21.14: 4)
Entering state 99
Reading a token: Next token is token ']' (21.15: )
Shifting token ']' (21.15: )
Entering state 128
Reducing stack by rule 19 (line 276):
   $1 = nterm declarator_arr (21.9-12: )
   $2 = token '[' (21.13: )
   $3 = token INT_CONSTANT (21.14: 4)
   $4 = token ']' (21.15: )
-> $$ = nterm declarator_arr (21.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (21.16: )
Reducing stack by rule 20 (line 292):
   $1 = nterm declarator_arr (21.9-15: )
-> $$ = nterm declarator (21.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 407):
   $1 = nterm declarator (21.9-15: )
-> $$ = nterm declarator_list (21.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (21.16: )
Shifting token ';' (21.16: )
Entering state 97
Reducing stack by rule 24 (line 401):
   $1 = nterm type_specifier (21.5-7: )
   $2 = nterm declarator_list (21.9-15: )
   $3 = token ';' (21.16: )
-> $$ = nterm declaration (21.5-16: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 351):
   $1 = nterm declaration_list (20.5-10: )
   $2 = nterm declaration (21.5-16: )
-> $$ = nterm declaration_list (20.5-21.16: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token INT (22.5-7: )
Shifting token INT (22.5-7: )
Entering state 2
Reducing stack by rule 10 (line 226):
   $1 = token INT (22.5-7: )
-> $$ = nterm type_specifier (22.5-7: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (22.9: c)
Shifting token IDENTIFIER (22.9: c)
Entering state 30
Reducing stack by rule 18 (line 273):
   $1 = token IDENTIFIER (22.9: c)
-> $$ = nterm declarator_arr (22.9: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (22.10: )
Shifting token '[' (22.10: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (22.11: 3)
Shifting token INT_CONSTANT (22.11: 3)
Entering state 99
Reading a token: Next token is token ']' (22.12: )
Shifting token ']' (22.12: )
Entering state 128
Reducing stack by rule 19 (line 276):
   $1 = nterm declarator_arr (22.9: )
   $2 = token '[' (22.10: )
   $3 = token INT_CONSTANT (22.11: 3)
   $4 = token ']' (22.12: )
-> $$ = nterm declarator_arr (22.9-12: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token '[' (22.13: )
Shifting token '[' (22.13: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (22.14: 4)
Shifting token INT_CONSTANT (22.14: 4)
Entering state 99
Reading a token: Next token is token ']' (22.15: )
Shifting token ']' (22.15: )
Entering state 128
Reducing stack by rule 19 (line 276):
   $1 = nterm declarator_arr (22.9-12: )
   $2 = token '[' (22.13: )
   $3 = token INT_CONSTANT (22.14: 4)
   $4 = token ']' (22.15: )
-> $$ = nterm declarator_arr (22.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (22.16: )
Reducing stack by rule 20 (line 292):
   $1 = nterm declarator_arr (22.9-15: )
-> $$ = nterm declarator (22.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 407):
   $1 = nterm declarator (22.9-15: )
-> $$ = nterm declarator_list (22.9-15: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (22.16: )
Shifting token ';' (22.16: )
Entering state 97
Reducing stack by rule 24 (line 401):
   $1 = nterm type_specifier (22.5-7: )
   $2 = nterm declarator_list (22.9-15: )
   $3 = token ';' (22.16: )
-> $$ = nterm declaration (22.5-16: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 351):
   $1 = nterm declaration_list (20.5-21.16: )
   $2 = nterm declaration (22.5-16: )
-> $$ = nterm declaration_list (20.5-22.16: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token '}' (23.1: )
Shifting token '}' (23.1: )
Entering state 85
Reducing stack by rule 29 (line 425):
   $1 = token '{' (19.1: )
   $2 = nterm declaration_list (20.5-22.16: )
   $3 = token '}' (23.1: )
-> $$ = nterm compound_statement (19.1-23.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 156):
   $1 = nterm type_specifier (18.1-3: )
   $2 = nterm fun_declarator (18.5-7: )
   $3 = nterm $@2 (18.8: )
   $4 = nterm compound_statement (19.1-23.1: )
-> $$ = nterm function_definition (18.1-23.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 129):
   $1 = nterm translation_unit (2.1-16.1: )
   $2 = nterm function_definition (18.1-23.1: )
-> $$ = nterm translation_unit (2.1-23.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token $end (23.1: )
Shifting token $end (23.1: )
Entering state 10
Cleanup: popping token $end (23.1: )
Cleanup: popping nterm translation_unit (2.1-23.1: )
