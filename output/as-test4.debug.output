Starting parse
Entering state 0
Reading a token: Next token is token STRUCT (2.1-6: )
Shifting token STRUCT (2.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (2.8-9: s1)
Shifting token IDENTIFIER (2.8-9: s1)
Entering state 9
Reading a token: Next token is token '{' (2.11: )
Reducing stack by rule 5 (line 138):
-> $$ = nterm $@1 (2.10: )
Stack now 9 4 0
Entering state 15
Next token is token '{' (2.11: )
Shifting token '{' (2.11: )
Entering state 18
Reading a token: Next token is token INT (3.9-11: )
Shifting token INT (3.9-11: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (3.9-11: )
-> $$ = nterm type_specifier (3.9-11: )
Stack now 18 15 9 4 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (3.13: a)
Shifting token IDENTIFIER (3.13: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (3.13: a)
-> $$ = nterm declarator_arr (3.13: )
Stack now 26 18 15 9 4 0
Entering state 32
Reading a token: Next token is token '[' (3.14: )
Shifting token '[' (3.14: )
Entering state 69
Reading a token: Next token is token INT_CONSTANT (3.15: 3)
Shifting token INT_CONSTANT (3.15: 3)
Entering state 99
Reading a token: Next token is token ']' (3.16: )
Shifting token ']' (3.16: )
Entering state 128
Reducing stack by rule 19 (line 278):
   $1 = nterm declarator_arr (3.13: )
   $2 = token '[' (3.14: )
   $3 = token INT_CONSTANT (3.15: 3)
   $4 = token ']' (3.16: )
-> $$ = nterm declarator_arr (3.13-16: )
Stack now 26 18 15 9 4 0
Entering state 32
Reading a token: Next token is token ';' (3.17: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (3.13-16: )
-> $$ = nterm declarator (3.13-16: )
Stack now 26 18 15 9 4 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (3.13-16: )
-> $$ = nterm declarator_list (3.13-16: )
Stack now 26 18 15 9 4 0
Entering state 65
Next token is token ';' (3.17: )
Shifting token ';' (3.17: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (3.9-11: )
   $2 = nterm declarator_list (3.13-16: )
   $3 = token ';' (3.17: )
-> $$ = nterm declaration (3.9-17: )
Stack now 18 15 9 4 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (3.9-17: )
-> $$ = nterm declaration_list (3.9-17: )
Stack now 18 15 9 4 0
Entering state 28
Reading a token: Next token is token '}' (4.1: )
Shifting token '}' (4.1: )
Entering state 66
Reading a token: Next token is token ';' (4.2: )
Shifting token ';' (4.2: )
Entering state 98
Reducing stack by rule 6 (line 137):
   $1 = token STRUCT (2.1-6: )
   $2 = token IDENTIFIER (2.8-9: s1)
   $3 = nterm $@1 (2.10: )
   $4 = token '{' (2.11: )
   $5 = nterm declaration_list (3.9-17: )
   $6 = token '}' (4.1: )
   $7 = token ';' (4.2: )
-> $$ = nterm struct_specifier (2.1-4.2: )
Stack now 0
Entering state 6
Reducing stack by rule 1 (line 122):
   $1 = nterm struct_specifier (2.1-4.2: )
-> $$ = nterm translation_unit (2.1-4.2: )
Stack now 0
Entering state 5
Reading a token: Next token is token STRUCT (6.1-6: )
Shifting token STRUCT (6.1-6: )
Entering state 4
Reading a token: Next token is token IDENTIFIER (6.8-9: s1)
Shifting token IDENTIFIER (6.8-9: s1)
Entering state 9
Reading a token: Next token is token IDENTIFIER (6.11: f)
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (6.1-6: )
   $2 = token IDENTIFIER (6.8-9: s1)
-> $$ = nterm type_specifier (6.1-9: )
Stack now 5 0
Entering state 8
Next token is token IDENTIFIER (6.11: f)
Shifting token IDENTIFIER (6.11: f)
Entering state 13
Reading a token: Next token is token '(' (6.12: )
Shifting token '(' (6.12: )
Entering state 16
Reading a token: Next token is token ')' (6.13: )
Shifting token ')' (6.13: )
Entering state 20
Reducing stack by rule 14 (line 244):
   $1 = token IDENTIFIER (6.11: f)
   $2 = token '(' (6.12: )
   $3 = token ')' (6.13: )
-> $$ = nterm fun_declarator (6.11-13: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (6.14: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (6.14: )
Shifting token '{' (6.14: )
Entering state 24
Reading a token: Next token is token STRUCT (7.9-14: )
Shifting token STRUCT (7.9-14: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (7.16-17: s1)
Shifting token IDENTIFIER (7.16-17: s1)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (7.9-14: )
   $2 = token IDENTIFIER (7.16-17: s1)
-> $$ = nterm type_specifier (7.9-17: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (7.19-21: tra)
Shifting token IDENTIFIER (7.19-21: tra)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (7.19-21: tra)
-> $$ = nterm declarator_arr (7.19-21: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (7.22: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (7.19-21: )
-> $$ = nterm declarator (7.19-21: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (7.19-21: )
-> $$ = nterm declarator_list (7.19-21: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (7.22: )
Shifting token ';' (7.22: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (7.9-17: )
   $2 = nterm declarator_list (7.19-21: )
   $3 = token ';' (7.22: )
-> $$ = nterm declaration (7.9-22: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (7.9-22: )
-> $$ = nterm declaration_list (7.9-22: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (8.9-11: tra)
Shifting token IDENTIFIER (8.9-11: tra)
Entering state 40
Reading a token: Next token is token '.' (8.12: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (8.9-11: tra)
-> $$ = nterm primary_expression (8.9-11: )
Stack now 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (8.9-11: )
-> $$ = nterm postfix_expression (8.9-11: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Next token is token '.' (8.12: )
Shifting token '.' (8.12: )
Entering state 93
Reading a token: Next token is token IDENTIFIER (8.13: a)
Shifting token IDENTIFIER (8.13: a)
Entering state 126
Reducing stack by rule 68 (line 1300):
   $1 = nterm postfix_expression (8.9-11: )
   $2 = token '.' (8.12: )
   $3 = token IDENTIFIER (8.13: a)
-> $$ = nterm postfix_expression (8.9-13: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (8.14: )
Shifting token '[' (8.14: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (8.15: 0)
Shifting token INT_CONSTANT (8.15: 0)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (8.15: 0)
-> $$ = nterm primary_expression (8.15: )
Stack now 91 58 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (8.15: )
-> $$ = nterm postfix_expression (8.15: )
Stack now 91 58 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ']' (8.16: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (8.15: )
-> $$ = nterm unary_expression (8.15: )
Stack now 91 58 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (8.15: )
-> $$ = nterm multiplicative_expression (8.15: )
Stack now 91 58 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (8.16: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (8.15: )
-> $$ = nterm additive_expression (8.15: )
Stack now 91 58 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (8.16: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (8.15: )
-> $$ = nterm relational_expression (8.15: )
Stack now 91 58 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (8.16: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (8.15: )
-> $$ = nterm equality_expression (8.15: )
Stack now 91 58 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (8.16: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (8.15: )
-> $$ = nterm logical_and_expression (8.15: )
Stack now 91 58 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (8.16: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (8.15: )
-> $$ = nterm expression (8.15: )
Stack now 91 58 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (8.16: )
Shifting token ']' (8.16: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (8.9-13: )
   $2 = token '[' (8.14: )
   $3 = nterm expression (8.15: )
   $4 = token ']' (8.16: )
-> $$ = nterm postfix_expression (8.9-16: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (8.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (8.9-16: )
-> $$ = nterm unary_expression (8.9-16: )
Stack now 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (8.17: )
Shifting token '=' (8.17: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (8.18-20: 100)
Shifting token INT_CONSTANT (8.18-20: 100)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (8.18-20: 100)
-> $$ = nterm primary_expression (8.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (8.18-20: )
-> $$ = nterm postfix_expression (8.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (8.21: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (8.18-20: )
-> $$ = nterm unary_expression (8.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (8.18-20: )
-> $$ = nterm multiplicative_expression (8.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (8.21: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (8.18-20: )
-> $$ = nterm additive_expression (8.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (8.21: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (8.18-20: )
-> $$ = nterm relational_expression (8.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (8.21: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (8.18-20: )
-> $$ = nterm equality_expression (8.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (8.21: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (8.18-20: )
-> $$ = nterm logical_and_expression (8.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (8.21: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (8.18-20: )
-> $$ = nterm expression (8.18-20: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (8.21: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (8.9-16: )
   $2 = token '=' (8.17: )
   $3 = nterm expression (8.18-20: )
-> $$ = nterm assignment_expression (8.9-20: )
Stack now 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (8.21: )
Shifting token ';' (8.21: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (8.9-20: )
   $2 = token ';' (8.21: )
-> $$ = nterm assignment_statement (8.9-21: )
Stack now 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (8.9-21: )
-> $$ = nterm statement (8.9-21: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (8.9-21: )
-> $$ = nterm statement_list (8.9-21: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (9.9-11: tra)
Shifting token IDENTIFIER (9.9-11: tra)
Entering state 40
Reading a token: Next token is token '.' (9.12: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (9.9-11: tra)
-> $$ = nterm primary_expression (9.9-11: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (9.9-11: )
-> $$ = nterm postfix_expression (9.9-11: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '.' (9.12: )
Shifting token '.' (9.12: )
Entering state 93
Reading a token: Next token is token IDENTIFIER (9.13: a)
Shifting token IDENTIFIER (9.13: a)
Entering state 126
Reducing stack by rule 68 (line 1300):
   $1 = nterm postfix_expression (9.9-11: )
   $2 = token '.' (9.12: )
   $3 = token IDENTIFIER (9.13: a)
-> $$ = nterm postfix_expression (9.9-13: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (9.14: )
Shifting token '[' (9.14: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (9.15: 1)
Shifting token INT_CONSTANT (9.15: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (9.15: 1)
-> $$ = nterm primary_expression (9.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (9.15: )
-> $$ = nterm postfix_expression (9.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ']' (9.16: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (9.15: )
-> $$ = nterm unary_expression (9.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (9.15: )
-> $$ = nterm multiplicative_expression (9.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (9.16: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (9.15: )
-> $$ = nterm additive_expression (9.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (9.16: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (9.15: )
-> $$ = nterm relational_expression (9.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (9.16: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (9.15: )
-> $$ = nterm equality_expression (9.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (9.16: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (9.15: )
-> $$ = nterm logical_and_expression (9.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (9.16: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (9.15: )
-> $$ = nterm expression (9.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (9.16: )
Shifting token ']' (9.16: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (9.9-13: )
   $2 = token '[' (9.14: )
   $3 = nterm expression (9.15: )
   $4 = token ']' (9.16: )
-> $$ = nterm postfix_expression (9.9-16: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (9.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (9.9-16: )
-> $$ = nterm unary_expression (9.9-16: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (9.17: )
Shifting token '=' (9.17: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (9.18-20: 101)
Shifting token INT_CONSTANT (9.18-20: 101)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (9.18-20: 101)
-> $$ = nterm primary_expression (9.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (9.18-20: )
-> $$ = nterm postfix_expression (9.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (9.21: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (9.18-20: )
-> $$ = nterm unary_expression (9.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (9.18-20: )
-> $$ = nterm multiplicative_expression (9.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (9.21: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (9.18-20: )
-> $$ = nterm additive_expression (9.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (9.21: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (9.18-20: )
-> $$ = nterm relational_expression (9.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (9.21: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (9.18-20: )
-> $$ = nterm equality_expression (9.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (9.21: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (9.18-20: )
-> $$ = nterm logical_and_expression (9.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (9.21: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (9.18-20: )
-> $$ = nterm expression (9.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (9.21: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (9.9-16: )
   $2 = token '=' (9.17: )
   $3 = nterm expression (9.18-20: )
-> $$ = nterm assignment_expression (9.9-20: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (9.21: )
Shifting token ';' (9.21: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (9.9-20: )
   $2 = token ';' (9.21: )
-> $$ = nterm assignment_statement (9.9-21: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (9.9-21: )
-> $$ = nterm statement (9.9-21: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (8.9-21: )
   $2 = nterm statement (9.9-21: )
-> $$ = nterm statement_list (8.9-9.21: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (10.9-11: tra)
Shifting token IDENTIFIER (10.9-11: tra)
Entering state 40
Reading a token: Next token is token '.' (10.12: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (10.9-11: tra)
-> $$ = nterm primary_expression (10.9-11: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (10.9-11: )
-> $$ = nterm postfix_expression (10.9-11: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '.' (10.12: )
Shifting token '.' (10.12: )
Entering state 93
Reading a token: Next token is token IDENTIFIER (10.13: a)
Shifting token IDENTIFIER (10.13: a)
Entering state 126
Reducing stack by rule 68 (line 1300):
   $1 = nterm postfix_expression (10.9-11: )
   $2 = token '.' (10.12: )
   $3 = token IDENTIFIER (10.13: a)
-> $$ = nterm postfix_expression (10.9-13: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (10.14: )
Shifting token '[' (10.14: )
Entering state 91
Reading a token: Next token is token INT_CONSTANT (10.15: 2)
Shifting token INT_CONSTANT (10.15: 2)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (10.15: 2)
-> $$ = nterm primary_expression (10.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (10.15: )
-> $$ = nterm postfix_expression (10.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ']' (10.16: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (10.15: )
-> $$ = nterm unary_expression (10.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (10.15: )
-> $$ = nterm multiplicative_expression (10.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (10.16: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (10.15: )
-> $$ = nterm additive_expression (10.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (10.16: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (10.15: )
-> $$ = nterm relational_expression (10.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (10.16: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (10.15: )
-> $$ = nterm equality_expression (10.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (10.16: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (10.15: )
-> $$ = nterm logical_and_expression (10.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (10.16: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (10.15: )
-> $$ = nterm expression (10.15: )
Stack now 91 58 86 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (10.16: )
Shifting token ']' (10.16: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (10.9-13: )
   $2 = token '[' (10.14: )
   $3 = nterm expression (10.15: )
   $4 = token ']' (10.16: )
-> $$ = nterm postfix_expression (10.9-16: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '=' (10.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (10.9-16: )
-> $$ = nterm unary_expression (10.9-16: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (10.17: )
Shifting token '=' (10.17: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (10.18-20: 102)
Shifting token INT_CONSTANT (10.18-20: 102)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (10.18-20: 102)
-> $$ = nterm primary_expression (10.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (10.18-20: )
-> $$ = nterm postfix_expression (10.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (10.21: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (10.18-20: )
-> $$ = nterm unary_expression (10.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (10.18-20: )
-> $$ = nterm multiplicative_expression (10.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (10.21: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (10.18-20: )
-> $$ = nterm additive_expression (10.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (10.21: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (10.18-20: )
-> $$ = nterm relational_expression (10.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (10.21: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (10.18-20: )
-> $$ = nterm equality_expression (10.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (10.21: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (10.18-20: )
-> $$ = nterm logical_and_expression (10.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (10.21: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (10.18-20: )
-> $$ = nterm expression (10.18-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (10.21: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (10.9-16: )
   $2 = token '=' (10.17: )
   $3 = nterm expression (10.18-20: )
-> $$ = nterm assignment_expression (10.9-20: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (10.21: )
Shifting token ';' (10.21: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (10.9-20: )
   $2 = token ';' (10.21: )
-> $$ = nterm assignment_statement (10.9-21: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (10.9-21: )
-> $$ = nterm statement (10.9-21: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (8.9-9.21: )
   $2 = nterm statement (10.9-21: )
-> $$ = nterm statement_list (8.9-10.21: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token RETURN (11.9-14: )
Shifting token RETURN (11.9-14: )
Entering state 36
Reading a token: Next token is token IDENTIFIER (11.16-18: tra)
Shifting token IDENTIFIER (11.16-18: tra)
Entering state 71
Reading a token: Next token is token ';' (11.19: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (11.16-18: tra)
-> $$ = nterm primary_expression (11.16-18: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (11.16-18: )
-> $$ = nterm postfix_expression (11.16-18: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 58
Next token is token ';' (11.19: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (11.16-18: )
-> $$ = nterm unary_expression (11.16-18: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (11.16-18: )
-> $$ = nterm multiplicative_expression (11.16-18: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (11.19: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (11.16-18: )
-> $$ = nterm additive_expression (11.16-18: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (11.19: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (11.16-18: )
-> $$ = nterm relational_expression (11.16-18: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (11.19: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (11.16-18: )
-> $$ = nterm equality_expression (11.16-18: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (11.19: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (11.16-18: )
-> $$ = nterm logical_and_expression (11.16-18: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (11.19: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (11.16-18: )
-> $$ = nterm expression (11.16-18: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 72
Next token is token ';' (11.19: )
Shifting token ';' (11.19: )
Entering state 102
Reducing stack by rule 39 (line 477):
   $1 = token RETURN (11.9-14: )
   $2 = nterm expression (11.16-18: )
   $3 = token ';' (11.19: )
-> $$ = nterm statement (11.9-19: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (8.9-10.21: )
   $2 = nterm statement (11.9-19: )
-> $$ = nterm statement_list (8.9-11.19: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (12.1: )
Shifting token '}' (12.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (6.14: )
   $2 = nterm declaration_list (7.9-22: )
   $3 = nterm statement_list (8.9-11.19: )
   $4 = token '}' (12.1: )
-> $$ = nterm compound_statement (6.14-12.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (6.1-9: )
   $2 = nterm fun_declarator (6.11-13: )
   $3 = nterm $@2 (6.14: )
   $4 = nterm compound_statement (6.14-12.1: )
-> $$ = nterm function_definition (6.1-12.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (2.1-4.2: )
   $2 = nterm function_definition (6.1-12.1: )
-> $$ = nterm translation_unit (2.1-12.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (14.1-3: )
Shifting token INT (14.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (14.1-3: )
-> $$ = nterm type_specifier (14.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (14.5: g)
Shifting token IDENTIFIER (14.5: g)
Entering state 13
Reading a token: Next token is token '(' (14.6: )
Shifting token '(' (14.6: )
Entering state 16
Reading a token: Next token is token ')' (14.7: )
Shifting token ')' (14.7: )
Entering state 20
Reducing stack by rule 14 (line 244):
   $1 = token IDENTIFIER (14.5: g)
   $2 = token '(' (14.6: )
   $3 = token ')' (14.7: )
-> $$ = nterm fun_declarator (14.5-7: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (14.8: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (14.8: )
Shifting token '{' (14.8: )
Entering state 24
Reading a token: Next token is token INT (15.9-11: )
Shifting token INT (15.9-11: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (15.9-11: )
-> $$ = nterm type_specifier (15.9-11: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (15.13: a)
Shifting token IDENTIFIER (15.13: a)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (15.13: a)
-> $$ = nterm declarator_arr (15.13: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ',' (15.14: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (15.13: )
-> $$ = nterm declarator (15.13: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (15.13: )
-> $$ = nterm declarator_list (15.13: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ',' (15.14: )
Shifting token ',' (15.14: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (15.16: b)
Shifting token IDENTIFIER (15.16: b)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (15.16: b)
-> $$ = nterm declarator_arr (15.16: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ',' (15.17: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (15.16: )
-> $$ = nterm declarator (15.16: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (15.13: )
   $2 = token ',' (15.14: )
   $3 = nterm declarator (15.16: )
-> $$ = nterm declarator_list (15.13-16: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ',' (15.17: )
Shifting token ',' (15.17: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (15.18: c)
Shifting token IDENTIFIER (15.18: c)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (15.18: c)
-> $$ = nterm declarator_arr (15.18: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ',' (15.19: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (15.18: )
-> $$ = nterm declarator (15.18: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (15.13-16: )
   $2 = token ',' (15.17: )
   $3 = nterm declarator (15.18: )
-> $$ = nterm declarator_list (15.13-18: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ',' (15.19: )
Shifting token ',' (15.19: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (15.20: d)
Shifting token IDENTIFIER (15.20: d)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (15.20: d)
-> $$ = nterm declarator_arr (15.20: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ',' (15.21: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (15.20: )
-> $$ = nterm declarator (15.20: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (15.13-18: )
   $2 = token ',' (15.19: )
   $3 = nterm declarator (15.20: )
-> $$ = nterm declarator_list (15.13-20: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ',' (15.21: )
Shifting token ',' (15.21: )
Entering state 96
Reading a token: Next token is token IDENTIFIER (15.22: e)
Shifting token IDENTIFIER (15.22: e)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (15.22: e)
-> $$ = nterm declarator_arr (15.22: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (15.23: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (15.22: )
-> $$ = nterm declarator (15.22: )
Stack now 96 65 26 24 17 14 8 5 0
Entering state 127
Reducing stack by rule 26 (line 418):
   $1 = nterm declarator_list (15.13-20: )
   $2 = token ',' (15.21: )
   $3 = nterm declarator (15.22: )
-> $$ = nterm declarator_list (15.13-22: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (15.23: )
Shifting token ';' (15.23: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (15.9-11: )
   $2 = nterm declarator_list (15.13-22: )
   $3 = token ';' (15.23: )
-> $$ = nterm declaration (15.9-23: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (15.9-23: )
-> $$ = nterm declaration_list (15.9-23: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (16.9: a)
Shifting token IDENTIFIER (16.9: a)
Entering state 40
Reading a token: Next token is token '=' (16.10: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.9: a)
-> $$ = nterm primary_expression (16.9: )
Stack now 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.9: )
-> $$ = nterm postfix_expression (16.9: )
Stack now 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (16.10: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.9: )
-> $$ = nterm unary_expression (16.9: )
Stack now 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (16.10: )
Shifting token '=' (16.10: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (16.11-14: 1234)
Shifting token INT_CONSTANT (16.11-14: 1234)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (16.11-14: 1234)
-> $$ = nterm primary_expression (16.11-14: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.11-14: )
-> $$ = nterm postfix_expression (16.11-14: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (16.15: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.11-14: )
-> $$ = nterm unary_expression (16.11-14: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.11-14: )
-> $$ = nterm multiplicative_expression (16.11-14: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (16.15: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.11-14: )
-> $$ = nterm additive_expression (16.11-14: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (16.15: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.11-14: )
-> $$ = nterm relational_expression (16.11-14: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (16.15: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.11-14: )
-> $$ = nterm equality_expression (16.11-14: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (16.15: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.11-14: )
-> $$ = nterm logical_and_expression (16.11-14: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (16.15: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.11-14: )
-> $$ = nterm expression (16.11-14: )
Stack now 90 57 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (16.15: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (16.9: )
   $2 = token '=' (16.10: )
   $3 = nterm expression (16.11-14: )
-> $$ = nterm assignment_expression (16.9-14: )
Stack now 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (16.15: )
Shifting token ';' (16.15: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (16.9-14: )
   $2 = token ';' (16.15: )
-> $$ = nterm assignment_statement (16.9-15: )
Stack now 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (16.9-15: )
-> $$ = nterm statement (16.9-15: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (16.9-15: )
-> $$ = nterm statement_list (16.9-15: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (16.16: b)
Shifting token IDENTIFIER (16.16: b)
Entering state 40
Reading a token: Next token is token '=' (16.17: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.16: b)
-> $$ = nterm primary_expression (16.16: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.16: )
-> $$ = nterm postfix_expression (16.16: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (16.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.16: )
-> $$ = nterm unary_expression (16.16: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (16.17: )
Shifting token '=' (16.17: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (16.18-22: 23456)
Shifting token INT_CONSTANT (16.18-22: 23456)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (16.18-22: 23456)
-> $$ = nterm primary_expression (16.18-22: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.18-22: )
-> $$ = nterm postfix_expression (16.18-22: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (16.23: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.18-22: )
-> $$ = nterm unary_expression (16.18-22: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.18-22: )
-> $$ = nterm multiplicative_expression (16.18-22: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (16.23: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.18-22: )
-> $$ = nterm additive_expression (16.18-22: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (16.23: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.18-22: )
-> $$ = nterm relational_expression (16.18-22: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (16.23: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.18-22: )
-> $$ = nterm equality_expression (16.18-22: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (16.23: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.18-22: )
-> $$ = nterm logical_and_expression (16.18-22: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (16.23: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.18-22: )
-> $$ = nterm expression (16.18-22: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (16.23: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (16.16: )
   $2 = token '=' (16.17: )
   $3 = nterm expression (16.18-22: )
-> $$ = nterm assignment_expression (16.16-22: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (16.23: )
Shifting token ';' (16.23: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (16.16-22: )
   $2 = token ';' (16.23: )
-> $$ = nterm assignment_statement (16.16-23: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (16.16-23: )
-> $$ = nterm statement (16.16-23: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (16.9-15: )
   $2 = nterm statement (16.16-23: )
-> $$ = nterm statement_list (16.9-23: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (16.24: c)
Shifting token IDENTIFIER (16.24: c)
Entering state 40
Reading a token: Next token is token '=' (16.25: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.24: c)
-> $$ = nterm primary_expression (16.24: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.24: )
-> $$ = nterm postfix_expression (16.24: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (16.25: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.24: )
-> $$ = nterm unary_expression (16.24: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (16.25: )
Shifting token '=' (16.25: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (16.26-30: 34567)
Shifting token INT_CONSTANT (16.26-30: 34567)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (16.26-30: 34567)
-> $$ = nterm primary_expression (16.26-30: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.26-30: )
-> $$ = nterm postfix_expression (16.26-30: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (16.31: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.26-30: )
-> $$ = nterm unary_expression (16.26-30: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.26-30: )
-> $$ = nterm multiplicative_expression (16.26-30: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (16.31: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.26-30: )
-> $$ = nterm additive_expression (16.26-30: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (16.31: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.26-30: )
-> $$ = nterm relational_expression (16.26-30: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (16.31: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.26-30: )
-> $$ = nterm equality_expression (16.26-30: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (16.31: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.26-30: )
-> $$ = nterm logical_and_expression (16.26-30: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (16.31: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.26-30: )
-> $$ = nterm expression (16.26-30: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (16.31: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (16.24: )
   $2 = token '=' (16.25: )
   $3 = nterm expression (16.26-30: )
-> $$ = nterm assignment_expression (16.24-30: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (16.31: )
Shifting token ';' (16.31: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (16.24-30: )
   $2 = token ';' (16.31: )
-> $$ = nterm assignment_statement (16.24-31: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (16.24-31: )
-> $$ = nterm statement (16.24-31: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (16.9-23: )
   $2 = nterm statement (16.24-31: )
-> $$ = nterm statement_list (16.9-31: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (16.32: d)
Shifting token IDENTIFIER (16.32: d)
Entering state 40
Reading a token: Next token is token '=' (16.33: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.32: d)
-> $$ = nterm primary_expression (16.32: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.32: )
-> $$ = nterm postfix_expression (16.32: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (16.33: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.32: )
-> $$ = nterm unary_expression (16.32: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (16.33: )
Shifting token '=' (16.33: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (16.34-38: 45678)
Shifting token INT_CONSTANT (16.34-38: 45678)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (16.34-38: 45678)
-> $$ = nterm primary_expression (16.34-38: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.34-38: )
-> $$ = nterm postfix_expression (16.34-38: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (16.39: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.34-38: )
-> $$ = nterm unary_expression (16.34-38: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.34-38: )
-> $$ = nterm multiplicative_expression (16.34-38: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (16.39: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.34-38: )
-> $$ = nterm additive_expression (16.34-38: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (16.39: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.34-38: )
-> $$ = nterm relational_expression (16.34-38: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (16.39: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.34-38: )
-> $$ = nterm equality_expression (16.34-38: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (16.39: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.34-38: )
-> $$ = nterm logical_and_expression (16.34-38: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (16.39: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.34-38: )
-> $$ = nterm expression (16.34-38: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (16.39: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (16.32: )
   $2 = token '=' (16.33: )
   $3 = nterm expression (16.34-38: )
-> $$ = nterm assignment_expression (16.32-38: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (16.39: )
Shifting token ';' (16.39: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (16.32-38: )
   $2 = token ';' (16.39: )
-> $$ = nterm assignment_statement (16.32-39: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (16.32-39: )
-> $$ = nterm statement (16.32-39: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (16.9-31: )
   $2 = nterm statement (16.32-39: )
-> $$ = nterm statement_list (16.9-39: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (16.40: e)
Shifting token IDENTIFIER (16.40: e)
Entering state 40
Reading a token: Next token is token '=' (16.41: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (16.40: e)
-> $$ = nterm primary_expression (16.40: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.40: )
-> $$ = nterm postfix_expression (16.40: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (16.41: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.40: )
-> $$ = nterm unary_expression (16.40: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (16.41: )
Shifting token '=' (16.41: )
Entering state 90
Reading a token: Next token is token INT_CONSTANT (16.42-46: 56789)
Shifting token INT_CONSTANT (16.42-46: 56789)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (16.42-46: 56789)
-> $$ = nterm primary_expression (16.42-46: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (16.42-46: )
-> $$ = nterm postfix_expression (16.42-46: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (16.47: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (16.42-46: )
-> $$ = nterm unary_expression (16.42-46: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (16.42-46: )
-> $$ = nterm multiplicative_expression (16.42-46: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (16.47: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (16.42-46: )
-> $$ = nterm additive_expression (16.42-46: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (16.47: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (16.42-46: )
-> $$ = nterm relational_expression (16.42-46: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (16.47: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (16.42-46: )
-> $$ = nterm equality_expression (16.42-46: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (16.47: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (16.42-46: )
-> $$ = nterm logical_and_expression (16.42-46: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (16.47: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (16.42-46: )
-> $$ = nterm expression (16.42-46: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (16.47: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (16.40: )
   $2 = token '=' (16.41: )
   $3 = nterm expression (16.42-46: )
-> $$ = nterm assignment_expression (16.40-46: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (16.47: )
Shifting token ';' (16.47: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (16.40-46: )
   $2 = token ';' (16.47: )
-> $$ = nterm assignment_statement (16.40-47: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (16.40-47: )
-> $$ = nterm statement (16.40-47: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (16.9-39: )
   $2 = nterm statement (16.40-47: )
-> $$ = nterm statement_list (16.9-47: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token RETURN (17.9-14: )
Shifting token RETURN (17.9-14: )
Entering state 36
Reading a token: Next token is token INT_CONSTANT (17.16: 1)
Shifting token INT_CONSTANT (17.16: 1)
Entering state 41
Reducing stack by rule 72 (line 1368):
   $1 = token INT_CONSTANT (17.16: 1)
-> $$ = nterm primary_expression (17.16: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (17.16: )
-> $$ = nterm postfix_expression (17.16: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (17.17: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (17.16: )
-> $$ = nterm unary_expression (17.16: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (17.16: )
-> $$ = nterm multiplicative_expression (17.16: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (17.17: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (17.16: )
-> $$ = nterm additive_expression (17.16: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (17.17: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (17.16: )
-> $$ = nterm relational_expression (17.16: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (17.17: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (17.16: )
-> $$ = nterm equality_expression (17.16: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (17.17: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (17.16: )
-> $$ = nterm logical_and_expression (17.16: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (17.17: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (17.16: )
-> $$ = nterm expression (17.16: )
Stack now 36 86 52 24 17 14 8 5 0
Entering state 72
Next token is token ';' (17.17: )
Shifting token ';' (17.17: )
Entering state 102
Reducing stack by rule 39 (line 477):
   $1 = token RETURN (17.9-14: )
   $2 = nterm expression (17.16: )
   $3 = token ';' (17.17: )
-> $$ = nterm statement (17.9-17: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (16.9-47: )
   $2 = nterm statement (17.9-17: )
-> $$ = nterm statement_list (16.9-17.17: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (18.1: )
Shifting token '}' (18.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (14.8: )
   $2 = nterm declaration_list (15.9-23: )
   $3 = nterm statement_list (16.9-17.17: )
   $4 = token '}' (18.1: )
-> $$ = nterm compound_statement (14.8-18.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (14.1-3: )
   $2 = nterm fun_declarator (14.5-7: )
   $3 = nterm $@2 (14.8: )
   $4 = nterm compound_statement (14.8-18.1: )
-> $$ = nterm function_definition (14.1-18.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (2.1-12.1: )
   $2 = nterm function_definition (14.1-18.1: )
-> $$ = nterm translation_unit (2.1-18.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token INT (20.1-3: )
Shifting token INT (20.1-3: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (20.1-3: )
-> $$ = nterm type_specifier (20.1-3: )
Stack now 5 0
Entering state 8
Reading a token: Next token is token IDENTIFIER (20.5-8: main)
Shifting token IDENTIFIER (20.5-8: main)
Entering state 13
Reading a token: Next token is token '(' (20.9: )
Shifting token '(' (20.9: )
Entering state 16
Reading a token: Next token is token ')' (20.10: )
Shifting token ')' (20.10: )
Entering state 20
Reducing stack by rule 14 (line 244):
   $1 = token IDENTIFIER (20.5-8: main)
   $2 = token '(' (20.9: )
   $3 = token ')' (20.10: )
-> $$ = nterm fun_declarator (20.5-10: )
Stack now 8 5 0
Entering state 14
Reducing stack by rule 7 (line 159):
-> $$ = nterm $@2 (20.11: )
Stack now 14 8 5 0
Entering state 17
Reading a token: Next token is token '{' (21.1: )
Shifting token '{' (21.1: )
Entering state 24
Reading a token: Next token is token INT (22.9-11: )
Shifting token INT (22.9-11: )
Entering state 2
Reducing stack by rule 10 (line 228):
   $1 = token INT (22.9-11: )
-> $$ = nterm type_specifier (22.9-11: )
Stack now 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (22.13: x)
Shifting token IDENTIFIER (22.13: x)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (22.13: x)
-> $$ = nterm declarator_arr (22.13: )
Stack now 26 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (22.14: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (22.13: )
-> $$ = nterm declarator (22.13: )
Stack now 26 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (22.13: )
-> $$ = nterm declarator_list (22.13: )
Stack now 26 24 17 14 8 5 0
Entering state 65
Next token is token ';' (22.14: )
Shifting token ';' (22.14: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (22.9-11: )
   $2 = nterm declarator_list (22.13: )
   $3 = token ';' (22.14: )
-> $$ = nterm declaration (22.9-14: )
Stack now 24 17 14 8 5 0
Entering state 27
Reducing stack by rule 22 (line 304):
   $1 = nterm declaration (22.9-14: )
-> $$ = nterm declaration_list (22.9-14: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token STRUCT (23.9-14: )
Shifting token STRUCT (23.9-14: )
Entering state 19
Reading a token: Next token is token IDENTIFIER (23.16-17: s1)
Shifting token IDENTIFIER (23.16-17: s1)
Entering state 29
Reducing stack by rule 12 (line 234):
   $1 = token STRUCT (23.9-14: )
   $2 = token IDENTIFIER (23.16-17: s1)
-> $$ = nterm type_specifier (23.9-17: )
Stack now 52 24 17 14 8 5 0
Entering state 26
Reading a token: Next token is token IDENTIFIER (23.19-23: mystr)
Shifting token IDENTIFIER (23.19-23: mystr)
Entering state 30
Reducing stack by rule 18 (line 275):
   $1 = token IDENTIFIER (23.19-23: mystr)
-> $$ = nterm declarator_arr (23.19-23: )
Stack now 26 52 24 17 14 8 5 0
Entering state 32
Reading a token: Next token is token ';' (23.24: )
Reducing stack by rule 20 (line 294):
   $1 = nterm declarator_arr (23.19-23: )
-> $$ = nterm declarator (23.19-23: )
Stack now 26 52 24 17 14 8 5 0
Entering state 64
Reducing stack by rule 25 (line 414):
   $1 = nterm declarator (23.19-23: )
-> $$ = nterm declarator_list (23.19-23: )
Stack now 26 52 24 17 14 8 5 0
Entering state 65
Next token is token ';' (23.24: )
Shifting token ';' (23.24: )
Entering state 97
Reducing stack by rule 24 (line 408):
   $1 = nterm type_specifier (23.9-17: )
   $2 = nterm declarator_list (23.19-23: )
   $3 = token ';' (23.24: )
-> $$ = nterm declaration (23.9-24: )
Stack now 52 24 17 14 8 5 0
Entering state 67
Reducing stack by rule 23 (line 356):
   $1 = nterm declaration_list (22.9-14: )
   $2 = nterm declaration (23.9-24: )
-> $$ = nterm declaration_list (22.9-23.24: )
Stack now 24 17 14 8 5 0
Entering state 52
Reading a token: Next token is token IDENTIFIER (24.9-14: printf)
Shifting token IDENTIFIER (24.9-14: printf)
Entering state 40
Reading a token: Next token is token '(' (24.15: )
Shifting token '(' (24.15: )
Entering state 82
Reading a token: Next token is token STRING_LITERAL (24.16-21: "%d\n")
Shifting token STRING_LITERAL (24.16-21: "%d\n")
Entering state 43
Reducing stack by rule 74 (line 1382):
   $1 = token STRING_LITERAL (24.16-21: "%d\n")
-> $$ = nterm primary_expression (24.16-21: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (24.16-21: )
-> $$ = nterm postfix_expression (24.16-21: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ',' (24.22: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (24.16-21: )
-> $$ = nterm unary_expression (24.16-21: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (24.16-21: )
-> $$ = nterm multiplicative_expression (24.16-21: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 77
Next token is token ',' (24.22: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (24.16-21: )
-> $$ = nterm additive_expression (24.16-21: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 76
Next token is token ',' (24.22: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (24.16-21: )
-> $$ = nterm relational_expression (24.16-21: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 75
Next token is token ',' (24.22: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (24.16-21: )
-> $$ = nterm equality_expression (24.16-21: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 74
Next token is token ',' (24.22: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (24.16-21: )
-> $$ = nterm logical_and_expression (24.16-21: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 73
Next token is token ',' (24.22: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (24.16-21: )
-> $$ = nterm expression (24.16-21: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 118
Next token is token ',' (24.22: )
Reducing stack by rule 76 (line 1393):
   $1 = nterm expression (24.16-21: )
-> $$ = nterm expression_list (24.16-21: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 119
Next token is token ',' (24.22: )
Shifting token ',' (24.22: )
Entering state 148
Reading a token: Next token is token IDENTIFIER (24.23: f)
Shifting token IDENTIFIER (24.23: f)
Entering state 71
Reading a token: Next token is token '(' (24.24: )
Shifting token '(' (24.24: )
Entering state 100
Reading a token: Next token is token ')' (24.25: )
Shifting token ')' (24.25: )
Entering state 129
Reducing stack by rule 66 (line 1223):
   $1 = token IDENTIFIER (24.23: f)
   $2 = token '(' (24.24: )
   $3 = token ')' (24.25: )
-> $$ = nterm postfix_expression (24.23-25: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '.' (24.26: )
Shifting token '.' (24.26: )
Entering state 93
Reading a token: Next token is token IDENTIFIER (24.27: a)
Shifting token IDENTIFIER (24.27: a)
Entering state 126
Reducing stack by rule 68 (line 1300):
   $1 = nterm postfix_expression (24.23-25: )
   $2 = token '.' (24.26: )
   $3 = token IDENTIFIER (24.27: a)
-> $$ = nterm postfix_expression (24.23-27: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (24.28: )
Shifting token '[' (24.28: )
Entering state 91
Reading a token: Next token is token IDENTIFIER (24.29: g)
Shifting token IDENTIFIER (24.29: g)
Entering state 71
Reading a token: Next token is token '(' (24.30: )
Shifting token '(' (24.30: )
Entering state 100
Reading a token: Next token is token ')' (24.31: )
Shifting token ')' (24.31: )
Entering state 129
Reducing stack by rule 66 (line 1223):
   $1 = token IDENTIFIER (24.29: g)
   $2 = token '(' (24.30: )
   $3 = token ')' (24.31: )
-> $$ = nterm postfix_expression (24.29-31: )
Stack now 91 58 148 119 82 40 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ']' (24.32: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (24.29-31: )
-> $$ = nterm unary_expression (24.29-31: )
Stack now 91 58 148 119 82 40 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (24.29-31: )
-> $$ = nterm multiplicative_expression (24.29-31: )
Stack now 91 58 148 119 82 40 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (24.32: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (24.29-31: )
-> $$ = nterm additive_expression (24.29-31: )
Stack now 91 58 148 119 82 40 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (24.32: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (24.29-31: )
-> $$ = nterm relational_expression (24.29-31: )
Stack now 91 58 148 119 82 40 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (24.32: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (24.29-31: )
-> $$ = nterm equality_expression (24.29-31: )
Stack now 91 58 148 119 82 40 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (24.32: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (24.29-31: )
-> $$ = nterm logical_and_expression (24.29-31: )
Stack now 91 58 148 119 82 40 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (24.32: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (24.29-31: )
-> $$ = nterm expression (24.29-31: )
Stack now 91 58 148 119 82 40 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (24.32: )
Shifting token ']' (24.32: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (24.23-27: )
   $2 = token '[' (24.28: )
   $3 = nterm expression (24.29-31: )
   $4 = token ']' (24.32: )
-> $$ = nterm postfix_expression (24.23-32: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ')' (24.33: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (24.23-32: )
-> $$ = nterm unary_expression (24.23-32: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (24.23-32: )
-> $$ = nterm multiplicative_expression (24.23-32: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 77
Next token is token ')' (24.33: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (24.23-32: )
-> $$ = nterm additive_expression (24.23-32: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 76
Next token is token ')' (24.33: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (24.23-32: )
-> $$ = nterm relational_expression (24.23-32: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 75
Next token is token ')' (24.33: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (24.23-32: )
-> $$ = nterm equality_expression (24.23-32: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 74
Next token is token ')' (24.33: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (24.23-32: )
-> $$ = nterm logical_and_expression (24.23-32: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 73
Next token is token ')' (24.33: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (24.23-32: )
-> $$ = nterm expression (24.23-32: )
Stack now 148 119 82 40 52 24 17 14 8 5 0
Entering state 155
Next token is token ')' (24.33: )
Reducing stack by rule 77 (line 1397):
   $1 = nterm expression_list (24.16-21: )
   $2 = token ',' (24.22: )
   $3 = nterm expression (24.23-32: )
-> $$ = nterm expression_list (24.16-32: )
Stack now 82 40 52 24 17 14 8 5 0
Entering state 119
Next token is token ')' (24.33: )
Shifting token ')' (24.33: )
Entering state 147
Reading a token: Next token is token ';' (24.34: )
Shifting token ';' (24.34: )
Entering state 154
Reducing stack by rule 43 (line 594):
   $1 = token IDENTIFIER (24.9-14: printf)
   $2 = token '(' (24.15: )
   $3 = nterm expression_list (24.16-32: )
   $4 = token ')' (24.33: )
   $5 = token ';' (24.34: )
-> $$ = nterm procedure_call (24.9-34: )
Stack now 52 24 17 14 8 5 0
Entering state 61
Reducing stack by rule 38 (line 474):
   $1 = nterm procedure_call (24.9-34: )
-> $$ = nterm statement (24.9-34: )
Stack now 52 24 17 14 8 5 0
Entering state 53
Reducing stack by rule 31 (line 444):
   $1 = nterm statement (24.9-34: )
-> $$ = nterm statement_list (24.9-34: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token IDENTIFIER (25.9: x)
Shifting token IDENTIFIER (25.9: x)
Entering state 40
Reading a token: Next token is token '=' (25.10: )
Reducing stack by rule 71 (line 1357):
   $1 = token IDENTIFIER (25.9: x)
-> $$ = nterm primary_expression (25.9: )
Stack now 86 52 24 17 14 8 5 0
Entering state 59
Reducing stack by rule 64 (line 1194):
   $1 = nterm primary_expression (25.9: )
-> $$ = nterm postfix_expression (25.9: )
Stack now 86 52 24 17 14 8 5 0
Entering state 58
Next token is token '=' (25.10: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.9: )
-> $$ = nterm unary_expression (25.9: )
Stack now 86 52 24 17 14 8 5 0
Entering state 57
Next token is token '=' (25.10: )
Shifting token '=' (25.10: )
Entering state 90
Reading a token: Next token is token IDENTIFIER (25.11: f)
Shifting token IDENTIFIER (25.11: f)
Entering state 71
Reading a token: Next token is token '(' (25.12: )
Shifting token '(' (25.12: )
Entering state 100
Reading a token: Next token is token ')' (25.13: )
Shifting token ')' (25.13: )
Entering state 129
Reducing stack by rule 66 (line 1223):
   $1 = token IDENTIFIER (25.11: f)
   $2 = token '(' (25.12: )
   $3 = token ')' (25.13: )
-> $$ = nterm postfix_expression (25.11-13: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '.' (25.14: )
Shifting token '.' (25.14: )
Entering state 93
Reading a token: Next token is token IDENTIFIER (25.15: a)
Shifting token IDENTIFIER (25.15: a)
Entering state 126
Reducing stack by rule 68 (line 1300):
   $1 = nterm postfix_expression (25.11-13: )
   $2 = token '.' (25.14: )
   $3 = token IDENTIFIER (25.15: a)
-> $$ = nterm postfix_expression (25.11-15: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token '[' (25.16: )
Shifting token '[' (25.16: )
Entering state 91
Reading a token: Next token is token IDENTIFIER (25.17: g)
Shifting token IDENTIFIER (25.17: g)
Entering state 71
Reading a token: Next token is token '(' (25.18: )
Shifting token '(' (25.18: )
Entering state 100
Reading a token: Next token is token ')' (25.19: )
Shifting token ')' (25.19: )
Entering state 129
Reducing stack by rule 66 (line 1223):
   $1 = token IDENTIFIER (25.17: g)
   $2 = token '(' (25.18: )
   $3 = token ')' (25.19: )
-> $$ = nterm postfix_expression (25.17-19: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ']' (25.20: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.17-19: )
-> $$ = nterm unary_expression (25.17-19: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (25.17-19: )
-> $$ = nterm multiplicative_expression (25.17-19: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ']' (25.20: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (25.17-19: )
-> $$ = nterm additive_expression (25.17-19: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ']' (25.20: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (25.17-19: )
-> $$ = nterm relational_expression (25.17-19: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ']' (25.20: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (25.17-19: )
-> $$ = nterm equality_expression (25.17-19: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ']' (25.20: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (25.17-19: )
-> $$ = nterm logical_and_expression (25.17-19: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ']' (25.20: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (25.17-19: )
-> $$ = nterm expression (25.17-19: )
Stack now 91 58 90 57 86 52 24 17 14 8 5 0
Entering state 124
Next token is token ']' (25.20: )
Shifting token ']' (25.20: )
Entering state 149
Reducing stack by rule 65 (line 1197):
   $1 = nterm postfix_expression (25.11-15: )
   $2 = token '[' (25.16: )
   $3 = nterm expression (25.17-19: )
   $4 = token ']' (25.20: )
-> $$ = nterm postfix_expression (25.11-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 58
Reading a token: Next token is token ';' (25.21: )
Reducing stack by rule 59 (line 1060):
   $1 = nterm postfix_expression (25.11-20: )
-> $$ = nterm unary_expression (25.11-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 78
Reducing stack by rule 61 (line 1124):
   $1 = nterm unary_expression (25.11-20: )
-> $$ = nterm multiplicative_expression (25.11-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 77
Next token is token ';' (25.21: )
Reducing stack by rule 56 (line 951):
   $1 = nterm multiplicative_expression (25.11-20: )
-> $$ = nterm additive_expression (25.11-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 76
Next token is token ';' (25.21: )
Reducing stack by rule 51 (line 776):
   $1 = nterm additive_expression (25.11-20: )
-> $$ = nterm relational_expression (25.11-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 75
Next token is token ';' (25.21: )
Reducing stack by rule 48 (line 698):
   $1 = nterm relational_expression (25.11-20: )
-> $$ = nterm equality_expression (25.11-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 74
Next token is token ';' (25.21: )
Reducing stack by rule 46 (line 677):
   $1 = nterm equality_expression (25.11-20: )
-> $$ = nterm logical_and_expression (25.11-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 73
Next token is token ';' (25.21: )
Reducing stack by rule 44 (line 653):
   $1 = nterm logical_and_expression (25.11-20: )
-> $$ = nterm expression (25.11-20: )
Stack now 90 57 86 52 24 17 14 8 5 0
Entering state 123
Next token is token ';' (25.21: )
Reducing stack by rule 40 (line 506):
   $1 = nterm unary_expression (25.9: )
   $2 = token '=' (25.10: )
   $3 = nterm expression (25.11-20: )
-> $$ = nterm assignment_expression (25.9-20: )
Stack now 86 52 24 17 14 8 5 0
Entering state 56
Next token is token ';' (25.21: )
Shifting token ';' (25.21: )
Entering state 89
Reducing stack by rule 41 (line 559):
   $1 = nterm assignment_expression (25.9-20: )
   $2 = token ';' (25.21: )
-> $$ = nterm assignment_statement (25.9-21: )
Stack now 86 52 24 17 14 8 5 0
Entering state 54
Reducing stack by rule 37 (line 469):
   $1 = nterm assignment_statement (25.9-21: )
-> $$ = nterm statement (25.9-21: )
Stack now 86 52 24 17 14 8 5 0
Entering state 88
Reducing stack by rule 32 (line 449):
   $1 = nterm statement_list (24.9-34: )
   $2 = nterm statement (25.9-21: )
-> $$ = nterm statement_list (24.9-25.21: )
Stack now 52 24 17 14 8 5 0
Entering state 86
Reading a token: Next token is token '}' (26.1: )
Shifting token '}' (26.1: )
Entering state 122
Reducing stack by rule 30 (line 436):
   $1 = token '{' (21.1: )
   $2 = nterm declaration_list (22.9-23.24: )
   $3 = nterm statement_list (24.9-25.21: )
   $4 = token '}' (26.1: )
-> $$ = nterm compound_statement (21.1-26.1: )
Stack now 17 14 8 5 0
Entering state 25
Reducing stack by rule 8 (line 158):
   $1 = nterm type_specifier (20.1-3: )
   $2 = nterm fun_declarator (20.5-10: )
   $3 = nterm $@2 (20.11: )
   $4 = nterm compound_statement (21.1-26.1: )
-> $$ = nterm function_definition (20.1-26.1: )
Stack now 5 0
Entering state 12
Reducing stack by rule 4 (line 130):
   $1 = nterm translation_unit (2.1-18.1: )
   $2 = nterm function_definition (20.1-26.1: )
-> $$ = nterm translation_unit (2.1-26.1: )
Stack now 0
Entering state 5
Reading a token: Next token is token $end (26.1: )
Shifting token $end (26.1: )
Entering state 10
Cleanup: popping token $end (26.1: )
Cleanup: popping nterm translation_unit (2.1-26.1: )
